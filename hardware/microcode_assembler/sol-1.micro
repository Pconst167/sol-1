0x00, "rst/fetch/trap/dma"{
  0{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_op = y
    alu_mode = logic
    marh_wrt = true
    clear_all_irqs = true
  }
  1{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    marl_wrt = true
    immediate = 16
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    ucf_in_src = alu_final_cf
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
  13{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = or
    alu_mode = logic
    immediate = 1
  }
  14{
    next = next_branch
    condition = dma_req
  }
  15{
    next = next_fetch
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -2
  }
  16{
    next = next_branch
    offset = 2  
    condition = display_reg_load
    ucf_in_src = alu_final_cf
    ir_wrt = true
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_ir
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  19{
    next = next_ir
    display_reg_load = true
  }
  32{
    next = next_branch
    offset = -19  
    condition = dma_req
    irq_vector_wrt = true
  }
  33{
    next = next_offset
    offset = 1
    alu_x = status_flags
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  34{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    irq_ack = true
    immediate = -3
  }
  35{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  36{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  37{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -5
  }
  38{
    next = next_offset
    offset = 1
    alu_x = kspl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    spl_wrt = true
  }
  39{
    next = next_offset
    offset = 1
    alu_x = ksph
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  40{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  41{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  42{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  43{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  44{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  45{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  46{
    next = next_offset
    offset = 1
    alu_x = tdrl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  47{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  48{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  49{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  50{
    next = next_offset
    offset = 1
    alu_x = pcl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  51{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  52{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  53{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  54{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  55{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    sph_wrt = true
    }
  56{
    next = next_offset
    offset = 1
    alu_x = irq_vector
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  57{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    marh_wrt = true
  }
  58{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  59{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  60{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  61{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
    pch_wrt = true
  }
}

0x01, "setptb"{
  0{
    next = next_branch
    offset = 2  
    condition = cpu_mode
  }
  1{
    next = next_fetch
    alu_op = x
    alu_mode = logic
    ptb_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -3
  }
  3{
    next = next_offset
    offset = 1
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    tdrl_wrt = true
    immediate = 4
  }
  4{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -5
  }
  7{
    next = next_offset
    offset = 1
    alu_x = kspl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    spl_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    alu_x = ksph
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  9{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  10{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  11{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  12{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  13{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  14{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  15{
    next = next_offset
    offset = 1
    alu_x = tdrl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  17{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  18{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  19{
    next = next_offset
    offset = 1
    alu_x = pcl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  22{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  23{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  24{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    sph_wrt = true
    }
  25{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    marl_wrt = true
    immediate = 18
  }
  26{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    marh_wrt = true
  }
  27{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  28{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  29{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  30{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
    pch_wrt = true
  }
}

0x02, "pagemap"{
  0{
    next = next_branch
    offset = 8  
    condition = cpu_mode
  }
  1{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    ptb_wrt = true
    force_user_ptb = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
    force_user_ptb = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
    force_user_ptb = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    force_user_ptb = true
  }
  5{
    next = next_offset
    offset = 1
    mdr_to_pagetable_buffer_en = true
    force_user_ptb = true
  }
  6{
    next = next_offset
    offset = 1
    pagetable_we = true
    mdr_to_pagetable_buffer_en = true
    force_user_ptb = true
  }
  7{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
    mdr_to_pagetable_buffer_en = true
    force_user_ptb = true
  }
  8{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -3
  }
  9{
    next = next_offset
    offset = 1
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    tdrl_wrt = true
    immediate = 4
  }
  10{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  11{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  12{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -5
  }
  13{
    next = next_offset
    offset = 1
    alu_x = kspl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    spl_wrt = true
  }
  14{
    next = next_offset
    offset = 1
    alu_x = ksph
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  15{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  18{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  19{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  20{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  21{
    next = next_offset
    offset = 1
    alu_x = tdrl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  23{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  24{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  25{
    next = next_offset
    offset = 1
    alu_x = pcl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  26{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  27{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  28{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  29{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  30{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    sph_wrt = true
    }
  31{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    marl_wrt = true
    immediate = 18
  }
  32{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    marh_wrt = true
  }
  33{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  34{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  35{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  36{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
    pch_wrt = true
  }
}

0x03, "store"{
  0{
    next = next_branch
    offset = 15  
    condition = cpu_mode
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = sil
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    sil_wrt = true
    immediate = 1
  }
  4{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    sih_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    marh_wrt = true
    force_user_ptb = true
  }
  7{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
    force_user_ptb = true
  }
  8{
    next = next_offset
    offset = 1
    mdr_out_en = true
    force_user_ptb = true
  }
  9{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dil
    alu_op = plus
    alu_cf_out_inv = true
    dil_wrt = true
    immediate = 1
  }
  10{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    dih_wrt = true
    }
  11{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf
    ucf_in_src = alu_final_cf
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    cl_wrt = true
    immediate = 1
  }
  12{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf_and_uzf  
    alu_x = ch
    alu_op = minus
    alu_cf_in = ucf  
    ch_wrt = true
  }
  13{
    next = next_branch
    offset = -12
    condition_inv = true
    cond_flags_src = micro_flags
  }
  14{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  15{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -3
  }
  16{
    next = next_offset
    offset = 1
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    tdrl_wrt = true
    immediate = 4
  }
  17{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -5
  }
  20{
    next = next_offset
    offset = 1
    alu_x = kspl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    spl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = ksph
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  22{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  23{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  24{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  25{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  26{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  27{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  28{
    next = next_offset
    offset = 1
    alu_x = tdrl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  29{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  30{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  31{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  32{
    next = next_offset
    offset = 1
    alu_x = pcl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  33{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  34{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  35{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  36{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  37{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    sph_wrt = true
    }
  38{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    marl_wrt = true
    immediate = 18
  }
  39{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    marh_wrt = true
  }
  40{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  41{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  42{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  43{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
    pch_wrt = true
  }
}

0x04, "load"{
  0{
    next = next_branch
    offset = 14  
    condition = cpu_mode
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    force_user_ptb = true
  }
  3{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = sil
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    sil_wrt = true
    force_user_ptb = true
    immediate = 1
  }
  4{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    sih_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    marh_wrt = true
  }
  7{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  8{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dil
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    dil_wrt = true
    immediate = 1
  }
  9{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    dih_wrt = true
    }
  10{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf
    ucf_in_src = alu_final_cf
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    cl_wrt = true
    immediate = 1
  }
  11{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf_and_uzf  
    alu_x = ch
    alu_op = minus
    alu_cf_in = ucf  
    ch_wrt = true
  }
  12{
    next = next_branch
    offset = -11
    condition_inv = true
    cond_flags_src = micro_flags
  }
  13{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  14{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -3
  }
  15{
    next = next_offset
    offset = 1
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    tdrl_wrt = true
    immediate = 4
  }
  16{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -5
  }
  19{
    next = next_offset
    offset = 1
    alu_x = kspl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    spl_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = ksph
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  21{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  24{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  25{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  26{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  27{
    next = next_offset
    offset = 1
    alu_x = tdrl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  28{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  29{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  30{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  31{
    next = next_offset
    offset = 1
    alu_x = pcl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  32{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  33{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  34{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  35{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  36{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    sph_wrt = true
    }
  37{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    marl_wrt = true
    immediate = 18
  }
  38{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    marh_wrt = true
  }
  39{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  40{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  41{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  42{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
    pch_wrt = true
  }
}

0x05, "syscall u8"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = status_flags
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -3
  }
  4{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -5
  }
  7{
    next = next_offset
    offset = 1
    alu_x = kspl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    spl_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    alu_x = ksph
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  9{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  10{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  11{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  12{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  13{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  14{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  15{
    next = next_offset
    offset = 1
    alu_x = tdrl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  17{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  18{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  19{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    mdrl_wrt = true
    immediate = 1
  }
  20{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  22{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  23{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  24{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    sph_wrt = true
    }
  25{
    next = next_offset
    offset = 1
    zbus_out_src = shifted_left
    alu_x = tdrh
    alu_op = plus
    marl_wrt = true
    immediate = 16
  }
  26{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    marh_wrt = true
  }
  27{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  28{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  29{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  30{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
    pch_wrt = true
  }
}

0x06, "sysret - paging_off"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    mdr_in_src = databus
    mdrl_wrt = true
    pch_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    pcl_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  8{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  9{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    tdrl_wrt = true
  }
  10{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  11{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  12{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  13{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = tdrl  
    mdr_in_src = databus
    mdrl_wrt = true
  }
  14{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    spl_wrt = true
  }
  15{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -9
  }
  17{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    pcl_wrt = true
  }
  18{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
}

0x07, "call {u16, [a + i16]}"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    mdrl_wrt = true
    immediate = 2
  }
  3{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
  8{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  9{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  10{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  11{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
    pch_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    mdrl_wrt = true
    immediate = 2
  }
  19{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  21{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
  24{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  25{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  26{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
  }
  27{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  28{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  29{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  30{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  31{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    ah_wrt = true
    marh_wrt = true
    pch_wrt = true
  }
}

0x08, "call a - supcpy"{
  0{
    next = next_offset
    offset = 1
    alu_x = pcl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    sph_wrt = true
    }
  8{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    pcl_wrt = true
  }
  9{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -9
  }
  17{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = sil
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    sil_wrt = true
    immediate = 1
  }
  20{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    sih_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = or
    alu_mode = logic
    immediate = 8
  }
  22{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  23{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    marh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  25{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dil
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    dil_wrt = true
    immediate = 1
  }
  26{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    dih_wrt = true
    }
  27{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf
    ucf_in_src = alu_final_cf
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    cl_wrt = true
    immediate = 1
  }
  28{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf_and_uzf  
    alu_x = ch
    alu_op = minus
    alu_cf_in = ucf  
    ch_wrt = true
  }
  29{
    next = next_branch
    offset = -13
    condition_inv = true
    cond_flags_src = micro_flags
  }
  30{
    next = next_fetch
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
    immediate = -9
  }
}

0x09, "ret - paging_on"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    mdr_in_src = databus
    mdrl_wrt = true
    marh_wrt = true
    pch_wrt = true
  }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    marl_wrt = true
    pcl_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = or
    alu_mode = logic
    immediate = 8
  }
  17{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    pcl_wrt = true
  }
  18{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
}

0x0A, "jmp {u16, [u16 + al]}"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  3{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_op = y
    alu_mode = logic
    tdrh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = tdrl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  23{
    next = next_offset
    offset = 1
    alu_x = tdrh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  25{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  26{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  27{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
    pch_wrt = true
  }
}

0x0B, "jmp {a, [u16 + bl]}"{
  0{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    pcl_wrt = true
  }
  1{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_x = bl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_op = y
    alu_mode = logic
    tdrh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = tdrl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  23{
    next = next_offset
    offset = 1
    alu_x = tdrh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  25{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  26{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  27{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
    pch_wrt = true
  }
}

0x0C, "lodstat - sti"{
  0{
    next = next_fetch
    alu_x = status_flags
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  16{
    next = next_fetch
    status_wrt = true
    alu_x = status_flags
    alu_op = or
    alu_mode = logic
    immediate = 2
  }
}

0x0D, "stostat - cli"{
  0{
    next = next_fetch
    status_wrt = true
    alu_op = x
    alu_mode = logic
    }
  16{
    next = next_fetch
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -3
  }
}

0x0E, "lodflgs - lodmsks"{
  0{
    next = next_fetch
    alu_x = arithmetic_flags
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    alu_x = irq_masks
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  17{
    next = next_fetch
    alu_x = irq_status
    alu_op = x
    alu_mode = logic
    ah_wrt = true
  }
}

0x0F, "stoflgs - stomsks"{
  0{
    next = next_fetch
    alu_op = x
    alu_mode = logic
    zf_in_src = zbus_0  
    cf_in_src = zbus_1
    sf_in_src = zbus_2
    of_in_src = zbus_3
  }
  16{
    next = next_fetch
    alu_op = x
    alu_mode = logic
    irq_masks_wrt = true
  }
}

0x10, "mov a, i16 - cla"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
  }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    ah_wrt = true
  }

  16{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    al_wrt = true
    ah_wrt = true
  }
}

0x11, "mov a, {b, pc}"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  1{
    next = next_fetch
    alu_x = bh
    alu_op = x
    alu_mode = logic
    ah_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    alu_x = pcl
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  17{
    next = next_fetch
    alu_x = pch
    alu_op = x
    alu_mode = logic
    ah_wrt = true
  }
}

0x12, "mov a, {c, g}"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  1{
    next = next_fetch
    alu_x = ch
    alu_op = x
    alu_mode = logic
    ah_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  17{
    next = next_fetch
    alu_x = gh
    alu_op = x
    alu_mode = logic
    ah_wrt = true
  }
}

0x13, "mov a, d - mma u16"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  1{
    next = next_fetch
    alu_x = dh
    alu_op = x
    alu_mode = logic
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  // mma u16
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    ah_wrt = true
  }
  // Multiplication Section
  22{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    mdrl_wrt = true
    tdrl_wrt = true
    tdrh_wrt = true
  }
  23{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = plus
    mdrl_wrt = true
    immediate = 1
  }
  24{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = bl
    alu_op = and
    alu_mode = logic
    immediate = 1
  }
  25{
    next = next_branch
    offset = 3  
    cond_flags_src = micro_flags
    ucf_in_src = alu_final_cf
    alu_op = plus
    alu_cf_out_inv = true
  }
  26{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = tdrl  
    tdrl_wrt = true
  }
  27{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = ah
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_cf_out_inv = true
    alu_y = tdrh  
    tdrh_wrt = true
  }
  28{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = tdrh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  29{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = tdrl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  30{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = bh
    alu_op = x
    alu_mode = logic
    bh_wrt = true
  }
  31{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }
  32{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    immediate = 16
  }
  33{
    next = next_branch
    offset = -10
    condition_inv = true
    cond_flags_src = micro_flags
  }
  34{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = tdrl  
    al_wrt = true
  }
  35{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = tdrh  
    ah_wrt = true
  }
  // Addition Section
  36{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  37{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  38{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    dl_wrt = true
  }
  39{
    next = next_fetch
    alu_x = dh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    dh_wrt = true
  }

}

0x14, "mov a, [u16] - clb"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    al_wrt = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  9{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    bl_wrt = true
    bh_wrt = true
  }
}

0x15, "mov a, [d] - add32 cb, ga"{
  // mov mar, d
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  // start read
  2{
    next = next_offset
    offset = 1
    rd = true
  }
  // second cycle of read, then write to mdrl
  // update marl
  3{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
  }
  // update marh
  4{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  // start high byte read
  // send low byte to a 
  5{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    al_wrt = true
  }
  // second cycle of read, and write to mdrh
  // update marl
  6{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
  }
  // update marh
  7{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  // send mdrh to a
  8{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    ah_wrt = true
  }

  16{
    next = next_offset
    offset = 1
    alu_x = al
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    bl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrh  
    bh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = gh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_y = mdrl
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    cl_wrt = true
  }
  23{
    next = next_fetch
    alu_x = ch
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    alu_cf_out_inv = true
    zf_in_src = alu_zf_and_zf
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ch_wrt = true
  }
}

0x16, "mov a, [d + i16] - adc32 cb, ga"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    al_wrt = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  9{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_offset
    offset = 1
    alu_x = al
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    alu_cf_out_inv = true
    zf_in_src = alu_zf_and_zf
    cf_in_src = alu_final_cf
    alu_y = mdrl
    bl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrh  
    bh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = gh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    cl_wrt = true
  }
  23{
    next = next_fetch
    alu_x = ch
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ch_wrt = true
  }
}

0x17, "mov a, [{bp, sp} + i16]"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    al_wrt = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  9{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    al_wrt = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  25{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x18, "mov a, [{bp, sp} + d]"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    al_wrt = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  7{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  21{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    al_wrt = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  23{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x19, "mov al, i8 - sbb32 ga, cb"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
  }

  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    al_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrh  
    ah_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf
    cf_in_src = alu_final_cf
    alu_y = mdrl
    gl_wrt = true
  }
  23{
    next = next_fetch
    alu_x = gh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    gh_wrt = true
  }
}

0x1A, "mov al, {ah, gl}"{
  0{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  16{
    next = next_fetch
    alu_x = gl
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
}

0x1B, "mov al, {bl, gh}"{
  0{
    next = next_fetch
    alu_x = bl
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  16{
    next = next_fetch
    alu_x = gh
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
}

0x1C, "mov al, bh - sub32 ga, cb"{
  0{
    next = next_fetch
    alu_x = bh
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }

  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    al_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrh  
    ah_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf
    cf_in_src = alu_final_cf
    alu_y = mdrl
    gl_wrt = true
  }
  23{
    next = next_fetch
    alu_x = gh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    gh_wrt = true
  }
}

0x1D, "mov al, [u16] - shl32 ga"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  7{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = al
    cf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    al_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    shift_src = cf
    zbus_out_src = shifted_left
    alu_x = ah
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_7
    ah_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = gl
    shift_src = cf
    cf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    gl_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    shift_src = cf
    zbus_out_src = shifted_left
    alu_x = gh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    gh_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  22{
    next = next_branch
    offset = -5
    condition_inv = true
    cond_flags_src = micro_flags
  }
  23{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x1E, "mov al, [d] - shr32 ga"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  3{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    zbus_out_src = shifted_right
    alu_x = gh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    cf_in_src = alu_out_0
    gh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = gl
    shift_src = cf
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_0  
    gl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = ah
    shift_src = cf
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_0  
    ah_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    shift_src = cf
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_0  
    al_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  22{
    next = next_branch
    offset = -5
    condition_inv = true
    cond_flags_src = micro_flags
  }
  23{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x1F, "mov al, [d + i16]"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  7{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x20, "mov al, [{bp, sp} + i16]"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  7{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  23{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x21, "mov al, [{bp, sp} + d]"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  21{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x22, "mov ah, i8, mov g, i16"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    gl_wrt = true
  }
  21{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    gh_wrt = true
  }
}

0x23, "mov ah, {al, gl}"{
  0{
    next = next_fetch
    alu_op = x
    alu_mode = logic
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_fetch
    alu_x = gl
    alu_op = x
    alu_mode = logic
    ah_wrt = true
  }
}

0x24, "mov ah, {bl, gh}"{
  0{
    next = next_fetch
    alu_x = bl
    alu_op = x
    alu_mode = logic
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_fetch
    alu_x = gh
    alu_op = x
    alu_mode = logic
    ah_wrt = true
  }
}

0x25, "mov ah, bh - xor32 ga, cb"{
  0{
    next = next_fetch
    alu_x = bh
    alu_op = x
    alu_mode = logic
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }


  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = al
    alu_y = tdrl  
    alu_op = xor
    alu_mode = logic
    zf_in_src = alu_zf  
    al_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_y = tdrh  
    alu_op = xor
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    ah_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_y = tdrl  
    alu_op = xor
    alu_mode = logic
    zf_in_src = alu_zf_and_zf
    gl_wrt = true
  }
  23{
    next = next_fetch
    alu_x = gh
    alu_y = tdrh  
    alu_op = xor
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    sf_in_src = zbus_7
    gh_wrt = true
  }
}

0x26, "mov b, i16 - mov b, [bp + i16]"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
  }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }


  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  22{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  23{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    bl_wrt = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  24{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x27, "mov b, {a, g}"{
  0{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }
  1{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    bh_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }
  17{
    next = next_fetch
    alu_x = gh
    alu_op = x
    alu_mode = logic
    bh_wrt = true
  }
}

0x28, "mov b, c - mov si, b"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }
  1{
    next = next_fetch
    alu_x = ch
    alu_op = x
    alu_mode = logic
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    sil_wrt = true
  }
  17{
    next = next_fetch
    alu_x = bh
    alu_op = x
    alu_mode = logic
    sih_wrt = true
  }
}

0x29, "mov b, [u16] - or32 cb, ga"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    bl_wrt = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  9{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_offset
    offset = 1
    alu_x = al
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_y = tdrl  
    alu_op = or
    alu_mode = logic
    zf_in_src = alu_zf  
    bl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_y = tdrh  
    alu_op = or
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    bh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = gh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_y = tdrl  
    alu_op = or
    alu_mode = logic
    zf_in_src = alu_zf_and_zf
    cl_wrt = true
  }
  23{
    next = next_fetch
    alu_x = ch
    alu_y = tdrh  
    alu_op = or
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    sf_in_src = zbus_7
    ch_wrt = true
  }
}

0x2A, "mov b, [d] - mov d, [d]"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    bl_wrt = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    dl_wrt = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  21{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    dh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x2B, "mov b, [d + i16] - and32 cb, ga"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  7{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  9{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  10{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  11{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  12{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
  }
  13{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }


  16{
    next = next_offset
    offset = 1
    alu_x = al
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = tdrl  
    bl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    alu_y = tdrh  
    bh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = gh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    alu_y = tdrl  
    cl_wrt = true
  }
  23{
    next = next_fetch
    alu_x = ch
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    sf_in_src = zbus_7
    alu_y = tdrh  
    ch_wrt = true
  }
}

0x2C, "mov b, [{bp, sp} + i16]"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  7{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  9{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  10{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  11{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  12{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
  }
  13{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  18{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  21{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  23{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  25{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  26{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  27{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  28{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
  }
  29{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x2D, "mov b, d - mov ga, i32"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }
  1{
    next = next_fetch
    alu_x = dh
    alu_op = x
    alu_mode = logic
    bh_wrt = true
  }


  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    ah_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  25{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  26{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    gl_wrt = true
  }
  27{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    gh_wrt = true
  }
}

0x2E, "mov bl, i8 - mov cb, i32"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }



  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    bh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  25{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  26{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    cl_wrt = true
  }
  27{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    ch_wrt = true
  }
}

0x2F, "mov bl, {al, gl}"{
  0{
    next = next_fetch
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }
  16{
    next = next_fetch
    alu_x = gl
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }
}

0x30, "mov bl, {bh, gh}"{
  0{
    next = next_fetch
    alu_x = bh
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }
  16{
    next = next_fetch
    alu_x = gh
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }
}

0x31, "mov bl, [u16] - mov cl, bl"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  7{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }


  16{
    next = next_fetch
    alu_x = bl
    alu_op = x
    alu_mode = logic
    cl_wrt = true
  }
}

0x32, "mov bl, [d] - mov cl, bh"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  3{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_fetch
    alu_x = bh
    alu_op = x
    alu_mode = logic
    cl_wrt = true
  }
}

0x33, "mov bl, [d + i16] - mov cl, ah"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  7{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }


  16{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    cl_wrt = true
  }
}

0x34, "mov bl, [{bp, sp} + i16]"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  7{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  23{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x35, "mov bl, [{bp, sp} + d]"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  21{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x36, "mov bh, {al, gl}"{
  0{
    next = next_fetch
    alu_op = x
    alu_mode = logic
    bh_wrt = true
  }
  16{
    next = next_fetch
    alu_x = gl
    alu_op = x
    alu_mode = logic
    bh_wrt = true
  }
}

0x37, "mov bh, {bl, gh}"{
  0{
    next = next_fetch
    alu_x = bl
    alu_op = x
    alu_mode = logic
    bh_wrt = true
  }
  16{
    next = next_fetch
    alu_x = gh
    alu_op = x
    alu_mode = logic
    bh_wrt = true
  }
}

0x38, "mov c, {u16, g}"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    cl_wrt = true
    }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_op = x
    alu_mode = logic
    cl_wrt = true
    }
  17{
    next = next_fetch
    alu_x = gh
    alu_op = x
    alu_mode = logic
    ch_wrt = true
  }
}

0x39, "mov c, {a, b}"{
  0{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    cl_wrt = true
    }
  1{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    ch_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    cl_wrt = true
    }
  17{
    next = next_fetch
    alu_x = bh
    alu_op = x
    alu_mode = logic
    ch_wrt = true
  }
}

0x3A, "mov cl, {u8, gl}"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    cl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_fetch
    alu_x = gl
    alu_op = x
    alu_mode = logic
    cl_wrt = true
  }
}

0x3B, "mov d, {u16, g}"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    dl_wrt = true
  }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    dh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_op = x
    alu_mode = logic
    dl_wrt = true
  }
  17{
    next = next_fetch
    alu_x = gh
    alu_op = x
    alu_mode = logic
    dh_wrt = true
  }
}

0x3C, "mov d, {a, c}"{
  0{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    dl_wrt = true
  }
  1{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    dh_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    dl_wrt = true
  }
  17{
    next = next_fetch
    alu_x = ch
    alu_op = x
    alu_mode = logic
    dh_wrt = true
  }
}

0x3D, "mov [u16], {al, bl}"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  7{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  23{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
}

0x3E, "mov [d], {al, bl}"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  4{
    next = next_fetch
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  20{
    next = next_fetch
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x3F, "mov [d + i16], {al, bl}"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  7{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  8{
    next = next_fetch
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  23{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  24{
    next = next_fetch
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x40, "mov [{bp, sp} + i16], al"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  7{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  8{
    next = next_fetch
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  23{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  24{
    next = next_fetch
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x41, "mov [{bp, sp} + d], al"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = tdrl
    marl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = tdrh
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  6{
    next = next_fetch
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = tdrl
    marl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = tdrh
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  22{
    next = next_fetch
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x42, "mov [u16], {a, b}"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  7{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrh_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  9{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    marl_wrt = true
    immediate = 1
  }
  10{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
  }
  11{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  12{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  13{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  18{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    marl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  23{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  25{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    marl_wrt = true
    immediate = 1
  }
  26{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
  }
  27{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  28{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  29{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
}

0x43, "mov [d], {a, b}"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  5{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    marl_wrt = true
    immediate = 1
  }
  6{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
  }
  7{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  8{
    next = next_fetch
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  21{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    marl_wrt = true
    immediate = 1
  }
  22{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
  }
  23{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  24{
    next = next_fetch
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x44, "mov [d + i16], {a, b}"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    marl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  9{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  10{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    marl_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  25{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  26{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
}

0x45, "mov [{bp, sp} + i16], a"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    marl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  9{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  10{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    marl_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  25{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  26{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
}

0x46, "mov [{bp, sp} + d], a"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = tdrl
    marl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = tdrh
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    marl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  9{
    next = next_fetch
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = tdrl
    marl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = tdrh
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    marl_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  25{
    next = next_fetch
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x47, "mov sp, {a, u16}"{
  0{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    spl_wrt = true
  }
  1{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    spl_wrt = true
  }
  21{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    sph_wrt = true
  }
}

0x48, "mov a, sp - mov bl, cl"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  1{
    next = next_fetch
    alu_x = sph
    alu_op = x
    alu_mode = logic
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_fetch
    alu_x = cl
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }
}

0x49, "mov bp, {a, u16}"{
  0{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    bpl_wrt = true
  }
  1{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    marh_wrt = true
    bph_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bpl_wrt = true
  }
  21{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    bph_wrt = true
  }
}

0x4A, "mov a, bp - cmc"{
  0{
    next = next_offset
    offset = 1
    alu_x = bpl
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  1{
    next = next_fetch
    alu_x = bph
    alu_op = x
    alu_mode = logic
    ah_wrt = true
  }
  16{
    next = next_fetch
    alu_x = arithmetic_flags  
    alu_mode = logic
    cf_in_src = zbus_1
  }
}

0x4B, "pusha"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  6{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  7{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  8{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  9{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  10{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  11{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  12{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  13{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  14{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  15{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  20{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  21{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  22{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  23{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  25{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  26{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  27{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  28{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  29{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  30{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  31{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  32{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  33{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  34{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  35{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  36{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  37{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  38{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  39{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  40{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  41{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  42{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  43{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  44{
    next = next_offset
    offset = 1
    alu_x = bpl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  45{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  46{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  47{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  48{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  49{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  50{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  51{
    next = next_offset
    offset = 1
    alu_x = arithmetic_flags
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  52{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  53{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  54{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  55{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x4C, "popa"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    zf_in_src = zbus_0  
    cf_in_src = zbus_1
    sf_in_src = zbus_2
    of_in_src = zbus_3  
    alu_y = mdrl
  }
  4{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  5{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  6{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  7{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    mdr_in_src = databus
    mdrl_wrt = true
    bph_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bpl_wrt = true
  }
  9{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  10{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  11{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  12{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  13{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    mdr_in_src = databus
    mdrl_wrt = true
    dih_wrt = true
    }
  14{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    dil_wrt = true
  }
  15{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  16{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  17{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  18{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  19{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    mdr_in_src = databus
    mdrl_wrt = true
    sih_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    sil_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  22{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  23{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  24{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  25{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    dh_wrt = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  26{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    dl_wrt = true
  }
  27{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  28{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  29{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  30{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  31{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    ch_wrt = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  32{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    cl_wrt = true
    }
  33{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  34{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  35{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  36{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  37{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    bh_wrt = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  38{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
  }
  39{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  40{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  41{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  42{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  43{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    ah_wrt = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  44{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x4D, "mov si, {a, u16}"{
  0{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    sil_wrt = true
  }
  1{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    sih_wrt = true
  }
  
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    sil_wrt = true
  }
  21{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    sih_wrt = true
  }
}

0x4E, "mov a, si - mov si, d"{
  0{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  1{
    next = next_fetch
    alu_x = sih
    alu_op = x
    alu_mode = logic
    ah_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    sil_wrt = true
  }
  17{
    next = next_fetch
    alu_x = dh
    alu_op = x
    alu_mode = logic
    sih_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  21{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    alu_x = arithmetic_flags
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  23{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  24{
    next = next_offset
    offset = 1
    mdr_out_en = true
  }
  25{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    bpl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  26{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    bph_wrt = true
    sph_wrt = true
    }
  27{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    pch_wrt = true
    immediate = 2
  }
  28{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    pcl_wrt = true
  }
}

0x4F, "mov di, {a, u16}"{
  0{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    dil_wrt = true
  }
  1{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    dih_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    dil_wrt = true
  }
  21{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    dih_wrt = true
  }
}

0x50, "mov a, di - mov di, d"{
  0{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  1{
    next = next_fetch
    alu_x = dih
    alu_op = x
    alu_mode = logic
    ah_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    dil_wrt = true
  }
  17{
    next = next_fetch
    alu_x = dh
    alu_op = x
    alu_mode = logic
    dih_wrt = true
  }
}

0x51, "add sp, i16 - inc sp"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    spl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    sph_wrt = true
    }
  16{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    spl_wrt = true
    immediate = 1
  }
  17{
    next = next_fetch
    alu_x = sph
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    sph_wrt = true
  }
}

0x52, "sub sp, i16 - dec sp"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    alu_y = mdrl
    spl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    alu_y = mdrh
    sph_wrt = true
    }
  16{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    spl_wrt = true
    immediate = 1
  }
  17{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
}

0x53, "add a, i16 - stc"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    al_wrt = true
  }
  5{
    next = next_fetch
    alu_x = ah
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    cf_in_src = zbus_1  
    immediate = 2
  }
}

0x54, "add a, b  - clc"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    al_wrt = true
  }
  3{
    next = next_fetch
    alu_x = ah
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    cf_in_src = zbus_1
  }
}

0x55, "add b, i16 - add a, c"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    bl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = bh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    al_wrt = true
  }
  19{
    next = next_fetch
    alu_x = ah
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x56, "add b, a  - add a, d"{
  0{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    bl_wrt = true
  }
  3{
    next = next_fetch
    alu_x = bh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    al_wrt = true
  }
  19{
    next = next_fetch
    alu_x = ah
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x57, "add c, i16 - add b, c"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    cl_wrt = true
    }
  5{
    next = next_fetch
    alu_x = ch
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    bl_wrt = true
  }
  19{
    next = next_fetch
    alu_x = bh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x58, "add d, i16 - add b, d"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    dl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = dh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    dh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    bl_wrt = true
  }
  19{
    next = next_fetch
    alu_x = bh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x59, "add d, a  - add c, a"{
  0{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    dl_wrt = true
  }
  3{
    next = next_fetch
    alu_x = dh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    dh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    cl_wrt = true
    }
  19{
    next = next_fetch
    alu_x = ch
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x5A, "add d, b  - add c, b"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    dl_wrt = true
  }
  3{
    next = next_fetch
    alu_x = dh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    dh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    cl_wrt = true
    }
  19{
    next = next_fetch
    alu_x = ch
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x5B, "adc a, i16 - add c, d"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    al_wrt = true
  }
  7{
    next = next_fetch
    alu_x = ah
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    cl_wrt = true
    }
  19{
    next = next_fetch
    alu_x = ch
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x5C, "adc a, b  - add d, c"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    al_wrt = true
  }
  3{
    next = next_fetch
    alu_x = ah
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    dl_wrt = true
  }
  19{
    next = next_fetch
    alu_x = dh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    dh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x5D, "adc b, i16 - sub a, c"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    bl_wrt = true
  }
  7{
    next = next_fetch
    alu_x = bh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    al_wrt = true
  }
  19{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_cf_in = ucf  
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x5E, "adc c, i16 - sub a, d"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    cl_wrt = true
    }
  7{
    next = next_fetch
    alu_x = ch
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    al_wrt = true
  }
  19{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_cf_in = ucf  
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x5F, "sub a, i16 - sub b, a"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    al_wrt = true
  }
  5{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    bl_wrt = true
  }
  19{
    next = next_fetch
    alu_x = bh
    alu_op = minus
    alu_cf_in = ucf  
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x60, "sub a, b  - sub b, c"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    al_wrt = true
  }
  3{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    bl_wrt = true
  }
  19{
    next = next_fetch
    alu_x = bh
    alu_op = minus
    alu_cf_in = ucf  
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x61, "sub b, i16 - sub b, d"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    bl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = bh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    bl_wrt = true
  }
  19{
    next = next_fetch
    alu_x = bh
    alu_op = minus
    alu_cf_in = ucf  
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x62, "sub c, i16 - sub c, a"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    cl_wrt = true
    }
  5{
    next = next_fetch
    alu_x = ch
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    cl_wrt = true
    }
  19{
    next = next_fetch
    alu_x = ch
    alu_op = minus
    alu_cf_in = ucf  
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x63, "sub d, i16 - sub c, b"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    dl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = dh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    dh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    cl_wrt = true
    }
  19{
    next = next_fetch
    alu_x = ch
    alu_op = minus
    alu_cf_in = ucf  
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x64, "sub d, a  - sub c, d"{
  0{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    dl_wrt = true
  }
  3{
    next = next_fetch
    alu_x = dh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    dh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    cl_wrt = true
    }
  19{
    next = next_fetch
    alu_x = ch
    alu_op = minus
    alu_cf_in = ucf  
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x65, "sub d, b  - sub d, c"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    dl_wrt = true
  }
  3{
    next = next_fetch
    alu_x = dh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    dh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    dl_wrt = true
  }
  19{
    next = next_fetch
    alu_x = dh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    dh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x66, "sbb a, i16 - add al, ah"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    al_wrt = true
  }
  7{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_fetch
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x67, "sbb a, b  - add al, bh"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    al_wrt = true
  }
  3{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_fetch
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x68, "sbb b, i16 - add al, cl"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    bl_wrt = true
  }
  7{
    next = next_fetch
    alu_x = bh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_fetch
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x69, "sbb c, i16 - add al, ch"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    cl_wrt = true
    }
  7{
    next = next_fetch
    alu_x = ch
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_fetch
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x6A, "add al, i8 - add al, dl"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  2{
    next = next_fetch
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_fetch
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x6B, "add al, bl - add al, dh"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_fetch
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_fetch
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x6C, "add bl, i8 - add bl, al"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  2{
    next = next_fetch
    alu_x = bl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_fetch
    alu_x = bl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x6D, "add cl, i8 - add bl, ah"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  2{
    next = next_fetch
    alu_x = cl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    cl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_fetch
    alu_x = bl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x6E, "add ch, i8 - add cl, al"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    pcl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  3{
    next = next_fetch
    alu_x = ch
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_fetch
    alu_x = cl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    cl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x6F, "sub al, i8 - add cl, ah"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  2{
    next = next_fetch
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_fetch
    alu_x = cl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    cl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x70, "sub al, bl - or b, a"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_fetch
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    al_wrt = true
  }

  16{
    next = next_offset
    offset = 1
    alu_x = al
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = or
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = tdrl  
    bl_wrt = true
  }
  19{
    next = next_fetch
    alu_x = bh
    alu_op = or
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    sf_in_src = zbus_7
    alu_y = tdrh  
    bh_wrt = true
  }
}

0x71, "sub cl, i8 - seq"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    pcl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  3{
    next = next_fetch
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    cl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_offset
    offset = 1
    alu_op = and
    alu_mode = logic
    alu_x = arithmetic_flags
    alu_y = immediate
    immediate = 1
    bl_wrt = true
  }
  17{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bh_wrt = true
  }
}

0x72, "sub ch, i8 - sneq"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    pcl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  3{
    next = next_fetch
    alu_x = ch
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_offset
    offset = 1
    alu_op = and
    alu_mode = logic
    alu_x = arithmetic_flags
    alu_y = immediate
    immediate = 1
    bl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_op = xor
    alu_mode = logic
    alu_x = bl
    alu_y = immediate
    immediate = 1
    bl_wrt = true
  }
  18{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bh_wrt = true
  }
}

0x73, "dec ah - slt"{
  0{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
    immediate = 1
  }

  16{
    next = next_branch
    offset = 2
    condition = lt
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bh_wrt = true
  }
  17{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bl_wrt = true
  }
  18{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 1
    bl_wrt = true
  }
}

0x74, "mov d, b - sle"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    dl_wrt = true
  }
  1{
    next = next_fetch
    alu_x = bh
    alu_op = x
    alu_mode = logic
    dh_wrt = true
  }

  16{
    next = next_branch
    condition = lte
    offset = 2
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bh_wrt = true
  }
  17{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bl_wrt = true
  }
  18{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 1
    bl_wrt = true
  }
}

0x75, "inc ah - slu"{
  0{
    next = next_fetch
    alu_x = ah
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
    immediate = 1
  }

  16{
    next = next_branch
    condition = ltu
    offset = 2
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bh_wrt = true
  }
  17{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bl_wrt = true
  }
  18{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 1
    bl_wrt = true
  }
}

0x76, "cmp ah, i8 - sleu"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
  }

  16{
    next = next_branch
    condition = lteu
    offset = 2
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bh_wrt = true
  }
  17{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bl_wrt = true
  }
  18{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 1
    bl_wrt = true
  }
}

0x77, "inc {a, b}"{
  0{
    next = next_offset
    offset = 1
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    al_wrt = true
    immediate = 1
  }
  1{
    next = next_fetch
    alu_x = ah
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    ah_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    bl_wrt = true
    immediate = 1
  }
  17{
    next = next_fetch
    alu_x = bh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    bh_wrt = true
  }
}

0x78, "inc c  - mov g, a"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    cl_wrt = true
    immediate = 1
  }
  1{
    next = next_fetch
    alu_x = ch
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    gl_wrt = true
  }
  17{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    gh_wrt = true
  }
}

0x79, "inc d  - mov g, b"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    dl_wrt = true
    immediate = 1
  }
  1{
    next = next_fetch
    alu_x = dh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    dh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    gl_wrt = true
  }
  17{
    next = next_fetch
    alu_x = bh
    alu_op = x
    alu_mode = logic
    gh_wrt = true
  }
}

0x7A, "inc al - mov g, c"{
  0{
    next = next_fetch
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
    immediate = 1
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    gl_wrt = true
  }
  17{
    next = next_fetch
    alu_x = ch
    alu_op = x
    alu_mode = logic
    gh_wrt = true
  }
}

0x7B, "inc cl - mov g, d"{
  0{
    next = next_fetch
    alu_x = cl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    cl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
    immediate = 1
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    gl_wrt = true
  }
  17{
    next = next_fetch
    alu_x = dh
    alu_op = x
    alu_mode = logic
    gh_wrt = true
  }
}

0x7C, "inc ch - mov g, si"{
  0{
    next = next_fetch
    alu_x = ch
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    ch_wrt = true
    immediate = 1
  }
  16{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = x
    alu_mode = logic
    gl_wrt = true
  }
  17{
    next = next_fetch
    alu_x = sih
    alu_op = x
    alu_mode = logic
    gh_wrt = true
  }
}

0x7D, "dec {a, b}"{
  0{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    al_wrt = true
    immediate = 1
  }
  1{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    bl_wrt = true
    immediate = 1
  }
  17{
    next = next_fetch
    alu_x = bh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x7E, "dec c - mov g, di"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    cl_wrt = true
    immediate = 1
  }
  1{
    next = next_fetch
    alu_x = ch
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = x
    alu_mode = logic
    gl_wrt = true
  }
  17{
    next = next_fetch
    alu_x = dih
    alu_op = x
    alu_mode = logic
    gh_wrt = true
  }
}

0x7F, "dec d - sgt"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    dl_wrt = true
    immediate = 1
  }
  1{
    next = next_fetch
    alu_x = dh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    dh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_branch
    condition = lte
    condition_inv = true // ~lte  =  gt
    offset = 2
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bh_wrt = true
  }
  17{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bl_wrt = true
  }
  18{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 1
    bl_wrt = true
  }
}

0x80, "dec al - sge"{
  0{
    next = next_fetch
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
    immediate = 1
  }

  16{
    next = next_branch
    condition = lt
    condition_inv = true // ~lt  =  gte
    offset = 2
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bh_wrt = true
  }
  17{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bl_wrt = true
  }
  18{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 1
    bl_wrt = true
  }
}

0x81, "dec cl - sgu"{
  0{
    next = next_fetch
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    cl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
    immediate = 1
  }

  16{
    next = next_branch
    condition = lteu
    condition_inv = true // ~lteu  =  gtu
    offset = 2
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bh_wrt = true
  }
  17{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bl_wrt = true
  }
  18{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 1
    bl_wrt = true
  }
}

0x82, "dec ch - sgeu"{
  0{
    next = next_fetch
    alu_x = ch
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
    immediate = 1
  }

  16{
    next = next_branch
    condition = ltu
    condition_inv = true // ~ltu  =  gteu
    offset = 2
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bh_wrt = true
  }
  17{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 0
    bl_wrt = true
  }
  18{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = immediate
    immediate = 1
    bl_wrt = true
  }
}

0x83, "mov cl, {al, gh}"{
  0{
    next = next_fetch
    alu_op = x
    alu_mode = logic
    cl_wrt = true
    }
  16{
    next = next_fetch
    alu_x = gh
    alu_op = x
    alu_mode = logic
    cl_wrt = true
  }
}

0x84, "mov al, cl - nand al, u8"{
  0{
    next = next_fetch
    alu_x = cl
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  18{
    next = next_fetch
    alu_op = nand
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x85, "and a, u16 - nand a, u16"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
  }
  5{
    next = next_fetch
    alu_x = ah
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    alu_y = mdrh  
    ah_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = nand
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
  }
  21{
    next = next_fetch
    alu_x = ah
    alu_op = nand
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x86, "and a, b  - nand a, b"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = tdrl  
    al_wrt = true
  }
  3{
    next = next_fetch
    alu_x = ah
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    sf_in_src = zbus_7
    alu_y = tdrh  
    ah_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_op = nand
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = tdrl  
    al_wrt = true
  }
  19{
    next = next_fetch
    alu_x = ah
    alu_op = nand
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    sf_in_src = zbus_7
    alu_y = tdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x87, "and al, u8 - and bl, u8"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  2{
    next = next_fetch
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  18{
    next = next_fetch
    alu_x = bl
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x88, "and al, bl - nand al, bl"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_fetch
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_fetch
    alu_op = nand
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x89, "or a, u16  - nor a, u16"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = or
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
  }
  5{
    next = next_fetch
    alu_x = ah
    alu_op = or
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = nor
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
  }
  21{
    next = next_fetch
    alu_x = ah
    alu_op = nor
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x8A, "or a, b  - nor a, b"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = or
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = tdrl  
    al_wrt = true
  }
  3{
    next = next_fetch
    alu_x = ah
    alu_op = or
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    sf_in_src = zbus_7
    alu_y = tdrh  
    ah_wrt = true
  }
  
  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_op = nor
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = tdrl  
    al_wrt = true
  }
  19{
    next = next_fetch
    alu_x = ah
    alu_op = nor
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    sf_in_src = zbus_7
    alu_y = tdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x8B, "or al, u8  - or bl, u8"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  2{
    next = next_fetch
    alu_op = or
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  18{
    next = next_fetch
    alu_x = bl
    alu_op = or
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x8C, "or al, bl  - nor al, bl"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_fetch
    alu_op = or
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_fetch
    alu_op = nor
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x8D, "xor a, u16 - nor al, u8"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
  }
  7{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  18{
    next = next_fetch
    alu_op = nor
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x8E, "xor a, b  - ashr b, cl"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_mode = logic
    alu_y = tdrl  
    al_wrt = true
    zf_in_src = alu_zf 
  }
  3{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_mode = logic
    alu_y = tdrh  
    ah_wrt = true
    zf_in_src = alu_zf_and_zf  
    sf_in_src = zbus_7
  }

  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = alu_out_7
    zbus_out_src = shifted_right
    alu_x = bh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf
    bh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_0
    sf_in_src = zbus_7
    bl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  20{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  21{
    next = next_fetch
  }
}

0x8F, "xor al, u8  - ashr bl, cl"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    pcl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  3{
    next = next_fetch
    alu_op = minus
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    shift_src = alu_out_7
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    bl_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  19{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  20{
    next = next_fetch
  }
}

0x90, "xor al, bl  - ashr b, u8"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_fetch
    alu_op = minus
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = alu_out_7
    zbus_out_src = shifted_right
    alu_x = bh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    bh_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_0  
    bl_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  21{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  22{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x91, "test a, u16 - ashr bl, u8"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf  
    alu_y = mdrl
  }
  5{
    next = next_fetch
    alu_x = ah
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    sf_in_src = zbus_7
    alu_y = mdrh
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    shift_src = alu_out_7
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_0
    sf_in_src = zbus_7
    bl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  20{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  21{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x92, "test a, b - and b, a"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf
    alu_y = tdrl
  }
  3{
    next = next_fetch
    alu_x = ah
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    sf_in_src = zbus_7
    alu_y = tdrh
  }

  16{
    next = next_offset
    offset = 1
    alu_x = al
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_y = tdrl  
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf  
    bl_wrt = true
  }
  19{
    next = next_fetch
    alu_x = bh
    alu_y = tdrh  
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    sf_in_src = zbus_7
    bh_wrt = true
  }
}

0x93, "test al, u8 - test bl, u8"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  2{
    next = next_fetch
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    alu_y = mdrl
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  18{
    next = next_fetch
    alu_x = bl
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    alu_y = mdrl
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x94, "test al, bl - test cl, u8"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_fetch
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    alu_y = tdrl
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_fetch
    alu_x = cl
    alu_op = and
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    alu_y = mdrl
  }
}

0x95, "not a  - neg a"{
  0{
    next = next_offset
    offset = 1
    alu_mode = logic
    zf_in_src = alu_zf  
    al_wrt = true
  }
  1{
    next = next_fetch
    alu_x = ah  
    alu_mode = logic
    zf_in_src = alu_zf_and_zf
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_mode = logic
    zf_in_src = alu_zf  
    al_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ah  
    alu_mode = logic
    zf_in_src = alu_zf_and_zf
    ah_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    al_wrt = true
    immediate = 1
  }
  19{
    next = next_fetch
    alu_x = ah
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    ah_wrt = true
  }
}

0x96, "not al - neg al"{
  0{
    next = next_fetch
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    al_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    al_wrt = true
  }
  17{
    next = next_fetch
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    al_wrt = true
    immediate = 1
  }
}

0x97, "not b  - neg b"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl  
    alu_mode = logic
    zf_in_src = alu_zf  
    bl_wrt = true
  }
  1{
    next = next_fetch
    alu_x = bh  
    alu_mode = logic
    zf_in_src = alu_zf_and_zf
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = bl  
    alu_mode = logic
    zf_in_src = alu_zf  
    bl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = bh  
    alu_mode = logic
    zf_in_src = alu_zf_and_zf
    bh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    bl_wrt = true
    immediate = 1
  }
  19{
    next = next_fetch
    alu_x = bh
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    bh_wrt = true
  }
}

0x98, "not bl - neg bl"{
  0{
    next = next_fetch
    alu_x = bl  
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = bl  
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    bl_wrt = true
  }
  17{
    next = next_fetch
    alu_x = bl
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    bl_wrt = true
    immediate = 1
  }
}

0x99, "mov bl, ah - shl a"{
  0{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }

  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    al_wrt = true
  }
  17{
    next = next_fetch
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_x = ah
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    ah_wrt = true
  }
}

0x9A, "mov bh, ah - shl al"{
  0{
    next = next_fetch
    alu_x = ah
    alu_op = x
    alu_mode = logic
    bh_wrt = true
  }
  16{
    next = next_fetch
    zbus_out_src = shifted_left
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    al_wrt = true
  }
}

0x9B, "mov bp, sp - shr a"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    bpl_wrt = true
  }
  1{
    next = next_fetch
    alu_x = sph
    alu_op = x
    alu_mode = logic
    bph_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    zbus_out_src = shifted_right
    alu_x = ah
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    ah_wrt = true
  }
  17{
    next = next_fetch
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_0  
    al_wrt = true
  }
}

0x9C, "mov sp, bp - shr al"{
  0{
    next = next_offset
    offset = 1
    alu_x = bpl
    alu_op = x
    alu_mode = logic
    spl_wrt = true
  }
  1{
    next = next_fetch
    alu_x = bph
    alu_op = x
    alu_mode = logic
    sph_wrt = true
    }
  16{
    next = next_fetch
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    al_wrt = true
  }
}

0x9D, "shl a, {cl, u8}"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    al_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_x = ah
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    ah_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  4{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  5{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    al_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_x = ah
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    ah_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  21{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  22{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x9E, "shl al, {cl, u8}"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    zbus_out_src = shifted_left
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    al_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  3{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  4{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    zbus_out_src = shifted_left
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    al_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  20{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  21{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0x9F, "shl b, {cl, u8}"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    bl_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_x = bh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    bh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  4{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  5{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    bl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_x = bh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    bh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  21{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  22{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xA0, "shl bl, {cl, u8}"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    zbus_out_src = shifted_left
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    bl_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  3{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  4{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    zbus_out_src = shifted_left
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    bl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  20{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  21{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xA1, "shr a, {cl, u8}"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    zbus_out_src = shifted_right
    alu_x = ah
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    ah_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_0  
    al_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  4{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  5{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    zbus_out_src = shifted_right
    alu_x = ah
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    ah_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_0  
    al_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  21{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  22{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xA2, "shr al, {cl, u8}"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_0
    sf_in_src = zbus_7
    al_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  3{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  4{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_0
    sf_in_src = zbus_7
    al_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  20{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  21{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xA3, "shr b, {cl, u8}"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    zbus_out_src = shifted_right
    alu_x = bh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    bh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_0  
    bl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  4{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  5{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    zbus_out_src = shifted_right
    alu_x = bh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    bh_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_0  
    bl_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  21{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  22{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xA4, "shr bl, {cl, u8}"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_0
    sf_in_src = zbus_7
    bl_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  3{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  4{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_0
    sf_in_src = zbus_7
    bl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  20{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  21{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xA5, "ashr a, {cl, u8}"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = alu_out_7
    zbus_out_src = shifted_right
    alu_x = ah
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf
    ah_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_0
    sf_in_src = zbus_7
    al_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  4{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  5{
    next = next_fetch
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = alu_out_7
    zbus_out_src = shifted_right
    alu_x = ah
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    ah_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_0  
    al_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  21{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  22{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xA6, "ashr al, {cl, u8}"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    shift_src = alu_out_7
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    al_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  3{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  4{
    next = next_fetch
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    shift_src = alu_out_7
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_0
    sf_in_src = zbus_7
    al_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  20{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  21{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xA7, "mov bh, u8 - sand a, b"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  3{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_offset
    offset = 1
    alu_x = al
    alu_y = immediate
    alu_op = minus
    alu_cf_in_inv = true
    immediate = 0
    uzf_in_src = alu_zf
    ucf_in_src = alu_final_cf
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_y = immediate
    alu_op = minus
    immediate = 0
    alu_cf_in = ucf
    uzf_in_src = alu_zf_and_uzf
  }
  18{
    next = next_branch
    offset = 5
    cond_flags_src = micro_flags
  }
  19{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_y = immediate
    alu_op = minus
    alu_cf_in_inv = true
    immediate = 0
    uzf_in_src = alu_zf
    ucf_in_src = alu_final_cf
  }
  20{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_y = immediate
    alu_op = minus
    immediate = 0
    alu_cf_in = ucf
    uzf_in_src = alu_zf_and_uzf
  }
  21{
    next = next_branch
    offset = 2
    cond_flags_src = micro_flags
  }
  22{
    next = next_fetch
    alu_y = immediate
    alu_op = y
    alu_mode = logic
    bl_wrt = true
    immediate = 1
  }
  23{
    next = next_fetch
    alu_y = immediate
    alu_op = y
    alu_mode = logic
    bl_wrt = true
    bh_wrt = true
    immediate = 0
  }
}

0xA8, "mov al, ch - sor a, b"{
  0{
    next = next_fetch
    alu_x = ch
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }

  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = al
    alu_y = tdrl
    alu_op = or
    alu_mode = logic
    uzf_in_src = alu_zf
  }
  19{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_y = tdrh
    alu_op = or
    alu_mode = logic
    uzf_in_src = alu_zf_and_uzf
  }
  20{
    next = next_branch
    offset = 2
    condition = zf
    cond_flags_src = micro_flags
    condition_inv = true
  }
  21{
    next = next_fetch
    alu_y = immediate
    alu_op = y
    alu_mode = logic
    bl_wrt = true
    immediate = 0
  }
  22{
    next = next_fetch
    alu_y = immediate
    alu_op = y
    alu_mode = logic
    bl_wrt = true
    immediate = 1
  }
}

0xA9, "loopc u16 - loopb u16"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf
    ucf_in_src = alu_final_cf
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    cl_wrt = true
    immediate = 1
  }
  4{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf_and_uzf  
    alu_x = ch
    alu_op = minus
    alu_cf_in = ucf  
    ch_wrt = true
  }
  5{
    next = next_branch
    offset = 3
    condition_inv = true
    cond_flags_src = micro_flags
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  7{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  8{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf
    ucf_in_src = alu_final_cf
    alu_x = bl
    alu_op = minus
    alu_cf_in_inv = true
    bl_wrt = true
    immediate = 1
  }
  20{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf_and_uzf  
    alu_x = bh
    alu_op = minus
    alu_cf_in = ucf
    bh_wrt = true
  }
  21{
    next = next_branch
    offset = 3
    condition_inv = true
    cond_flags_src = micro_flags
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  23{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  24{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
}

0xAA, "snex a - swp a"{
  0{
    next = next_fetch
    zbus_out_src = sign_extended
    alu_op = x
    alu_mode = logic
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  18{
    next = next_fetch
    alu_x = tdrl
    alu_op = x
    alu_mode = logic
    ah_wrt = true
  }
}

0xAB, "snex b - swp B"{
  0{
    next = next_fetch
    zbus_out_src = sign_extended
    alu_x = bl
    alu_op = x
    alu_mode = logic
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }
  18{
    next = next_fetch
    alu_x = tdrl
    alu_op = x
    alu_mode = logic
    bh_wrt = true
  }
}

0xAC, "mul a, {b, c}"{
  0{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    mdrl_wrt = true
    tdrl_wrt = true
    tdrh_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = plus
    mdrl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = bl
    alu_op = and
    alu_mode = logic
    immediate = 1
  }
  3{
    next = next_branch
    offset = 3  
    cond_flags_src = micro_flags
    ucf_in_src = alu_final_cf
    alu_op = plus
    alu_cf_out_inv = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = tdrl  
    tdrl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = ah
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_cf_out_inv = true
    alu_y = tdrh  
    tdrh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = tdrh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  7{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = tdrl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = bh
    alu_op = x
    alu_mode = logic
    bh_wrt = true
  }
  9{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }
  10{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    immediate = 16
  }
  11{
    next = next_branch
    offset = -10
    condition_inv = true
    cond_flags_src = micro_flags
  }
  12{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = tdrl  
    al_wrt = true
  }
  13{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = tdrh  
    ah_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    mdrl_wrt = true
    tdrl_wrt = true
    tdrh_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = plus
    mdrl_wrt = true
    immediate = 1
  }
  18{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = cl
    alu_op = and
    alu_mode = logic
    immediate = 1
  }
  19{
    next = next_branch
    offset = 3  
    cond_flags_src = micro_flags
    ucf_in_src = alu_final_cf
    alu_op = plus
    alu_cf_out_inv = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = tdrl  
    tdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = ah
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_cf_out_inv = true
    alu_y = tdrh  
    tdrh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = tdrh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  23{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = tdrl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = ch
    alu_op = x
    alu_mode = logic
    ch_wrt = true
  }
  25{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = cl
    alu_op = x
    alu_mode = logic
    cl_wrt = true
    }
  26{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    immediate = 16
  }
  27{
    next = next_branch
    offset = -10
    condition_inv = true
    cond_flags_src = micro_flags
  }
  28{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = tdrl  
    al_wrt = true
  }
  29{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = tdrh  
    ah_wrt = true
  }
}

0xAD, "mul al, bl"{
  0{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    tdrl_wrt = true
    tdrh_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = tdrh
    alu_op = plus
    tdrh_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = bl
    alu_op = and
    alu_mode = logic
    immediate = 1
  }
  3{
    next = next_branch
    offset = 2  
    cond_flags_src = micro_flags
    ucf_in_src = alu_final_cf
    alu_op = plus
    alu_cf_out_inv = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = tdrl  
    tdrl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = tdrl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }
  7{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrh
    alu_op = minus
    alu_cf_in_inv = true
    immediate = 8
  }
  8{
    next = next_branch
    offset = -7
    condition_inv = true
    cond_flags_src = micro_flags
  }
  9{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = tdrl  
    ah_wrt = true
  }
  10{
    next = next_fetch
    alu_x = bl
    alu_op = x
    alu_mode = logic
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xAE, "div a, b"{
  0{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = bl
    alu_op = x
    alu_mode = logic
    }
  1{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf_and_uzf  
    alu_x = bh
    alu_op = x
    alu_mode = logic
    }
  2{
    next = next_branch
    offset = 25  
    cond_flags_src = micro_flags
  }
  3{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    mdrl_wrt = true
    mdrh_wrt = true
    gl_wrt = true
    gh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    tdrl_wrt = true
    immediate = 16
  }
  5{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_x = gl
    alu_op = x
    alu_mode = logic
    gl_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_x = gh
    alu_op = x
    alu_mode = logic
    gh_wrt = true
  }
  7{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_x = ah
    alu_op = x
    alu_mode = logic
    ah_wrt = true
  }
  9{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    mdrl_wrt = true
  }
  10{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    mdrh_wrt = true
  }
  11{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf
    ucf_in_src = alu_final_cf
    alu_x = bl
    alu_op = minus
    alu_cf_in_inv = true
    alu_y = mdrl
  }
  12{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf_and_uzf
    ucf_in_src = alu_final_cf
    alu_x = bh
    alu_op = minus
    alu_cf_in = ucf  
    alu_y = mdrh
  }
  13{
    next = next_branch
    offset = 2  
    cond_flags_src = micro_flags
    condition = lteu
  }
  14{
    next = next_offset
    offset = 7
  }
  15{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    alu_y = tdrh  
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = mdrh
    alu_op = minus
    alu_cf_in = ucf  
    alu_y = tdrh  
    mdrh_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = gl
    alu_op = plus
    alu_cf_out_inv = true
    gl_wrt = true
    immediate = 1
  }
  20{
    next = next_offset
    offset = 1
    alu_x = gh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    gh_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  22{
    next = next_branch
    offset = -17
    condition_inv = true
    cond_flags_src = micro_flags
  }
  23{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    bh_wrt = true
  }
  25{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_op = x
    alu_mode = logic
    al_wrt = true
  }
  26{
    next = next_fetch
    alu_x = gh
    alu_op = x
    alu_mode = logic
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  27{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -3
  }
  28{
    next = next_offset
    offset = 1
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    tdrl_wrt = true
    immediate = 4
  }
  29{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  30{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  31{
    next = next_offset
    offset = 1
    status_wrt = true
    alu_x = status_flags
    alu_op = and
    alu_mode = logic
    immediate = -5
  }
  32{
    next = next_offset
    offset = 1
    alu_x = kspl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    spl_wrt = true
  }
  33{
    next = next_offset
    offset = 1
    alu_x = ksph
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  34{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  35{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  36{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  37{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
  }
  38{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  39{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  40{
    next = next_offset
    offset = 1
    alu_x = tdrl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  41{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  42{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  43{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
    sph_wrt = true
    }
  44{
    next = next_offset
    offset = 1
    alu_x = pcl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  45{
    next = next_offset
    offset = 1
    alu_x = pch
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  46{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  47{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  48{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  49{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    sph_wrt = true
    }
  50{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    marl_wrt = true
    immediate = 22
  }
  51{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    marh_wrt = true
  }
  52{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  53{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  54{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  55{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
    pch_wrt = true
  }
}

0xAF, "cmp a, i16 -  cmp32 ga, cb"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
  }
  5{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_cf_in = vcc
    alu_cf_in_inv = true
    zf_in_src = alu_zf
    cf_in_src = alu_final_cf
    alu_y = tdrl
  }
  19{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf
    cf_in_src = alu_final_cf
    alu_y = tdrh
  }
  20{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_y = tdrl
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf
    cf_in_src = alu_final_cf
  }
  23{
    next = next_fetch
    alu_x = gh
    alu_y = tdrh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
  }
}

0xB0, "cmp a, b - cmp32 ga, i32"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = tdrl
  }
  3{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = tdrh
  }

  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_in = vcc
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_in = vcc
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = al
    alu_y = mdrl
    alu_op = minus
    alu_cf_in = vcc
    alu_cf_in_inv = true
    zf_in_src = alu_zf
    cf_in_src = alu_final_cf
  }
  21{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_y = mdrh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf
    cf_in_src = alu_final_cf
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_in = vcc
    alu_cf_in_inv = false
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_in = vcc
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  25{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  26{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_y = mdrl
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf
    cf_in_src = alu_final_cf
  }
  27{
    next = next_fetch
    alu_x = gh
    alu_y = mdrh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
  }
}

0xB1, "cmp a, c - sand32 ga, cb"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = tdrl
  }
  3{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = tdrh
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

// if a! = 0 || g! = 0 && c! = 0 || b! = 0 then b  =  1, else b  =  0

// if c == 0 && b  ==  0 or g == 0 && a == 0 then b  =  0, else b  =  1
// test c, save zf
// test b save zf (anded uzf)
// branch on the AND condition. if true set result=0
// tst g, save zf
// test a, save zf
// branch on the AND condition. if true set result=0
// set result=1

  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf
  }
  19{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf
  }
  20{
    next = next_branch
    offset = 7
    alu_y = immediate
    alu_op = y
    alu_mode = logic
    bh_wrt = true
    immediate = 0
  }
  21{
    next = next_offset
    offset = 1
    alu_x = al
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf
  }
  22{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf
  }
  23{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf
  }
  24{
    next = next_offset
    offset = 1
    alu_x = gh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf
  }
  25{
    next = next_branch
    offset = 2
  }
  26{
    next = next_fetch
    alu_y = immediate
    alu_op = y
    alu_mode = logic
    bl_wrt = true
    immediate = 1
  }
  27{
    next = next_fetch
    alu_y = immediate
    alu_op = y
    alu_mode = logic
    bl_wrt = true
    immediate = 0
  }
}

0xB2, "cmp a, d - sor32 ga, cb"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = tdrl
  }
  3{
    next = next_fetch
    alu_x = ah
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = tdrh
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

  // b != 0 -> jmp
  // c != 0 -> jmp
  // a != 0 -> jmp
  // g != 0 -> jmp
  16{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    uzf_in_src = alu_zf
  }
  17{
    next = next_branch
    offset = 16
    condition = zf
    cond_flags_src = micro_flags
    condition_inv = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    uzf_in_src = alu_zf
  }
  19{
    next = next_branch
    offset = 14
    condition = zf
    cond_flags_src = micro_flags
    condition_inv = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    uzf_in_src = alu_zf
  }
  21{
    next = next_branch
    offset = 12
    condition = zf
    cond_flags_src = micro_flags
    condition_inv = true
  }
  22{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    uzf_in_src = alu_zf
  }
  23{
    next = next_branch
    offset = 10
    condition = zf
    cond_flags_src = micro_flags
    condition_inv = true
  }
  24{
    next = next_offset
    offset = 1
    alu_x = al
    alu_op = x
    alu_mode = logic
    uzf_in_src = alu_zf
  }
  25{
    next = next_branch
    offset = 8
    condition = zf
    cond_flags_src = micro_flags
    condition_inv = true
  }
  26{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    uzf_in_src = alu_zf
  }
  27{
    next = next_branch
    offset = 6
    condition = zf
    cond_flags_src = micro_flags
    condition_inv = true
  }
  28{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_op = x
    alu_mode = logic
    uzf_in_src = alu_zf
  }
  29{
    next = next_branch
    offset = 4
    condition = zf
    cond_flags_src = micro_flags
    condition_inv = true
  }
  30{
    next = next_offset
    offset = 1
    alu_x = gh
    alu_op = x
    alu_mode = logic
    uzf_in_src = alu_zf
  }
  31{
    next = next_branch
    offset = 2
    condition = zf
    cond_flags_src = micro_flags
    condition_inv = true
  }
  32{
    next = next_fetch
    alu_y = immediate
    alu_op = y
    alu_mode = logic
    bl_wrt = true
    immediate = 0
  }
  33{
    next = next_fetch
    alu_y = immediate
    alu_op = y
    alu_mode = logic
    bl_wrt = true
    immediate = 1
  }
}

0xB3, "cmp word[u16], u16 - cmp32 cb, i32"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    tdrl_wrt = true
  }
  9{
    next = next_offset
    offset = 1
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  10{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  11{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  12{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  13{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  14{
    next = next_offset
    offset = 1
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
  }
  15{
    next = next_fetch
    alu_x = tdrh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
  }


  // cmp32 cb, i32
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_in = vcc
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_in = vcc
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_y = mdrl
    alu_op = minus
    alu_cf_in = vcc
    alu_cf_in_inv = true
    zf_in_src = alu_zf
    cf_in_src = alu_final_cf
  }
  21{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_y = mdrh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf
    cf_in_src = alu_final_cf
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_in = vcc
    alu_cf_in_inv = false
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_in = vcc
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  25{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  26{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_y = mdrl
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf
    cf_in_src = alu_final_cf
  }
  27{
    next = next_fetch
    alu_x = ch
    alu_y = mdrh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
  }
}

0xB4, "cmp word[d], u16 - mov bl, ch"{
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    tdrl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  9{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  10{
    next = next_offset
    offset = 1
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
  }
  11{
    next = next_fetch
    alu_x = tdrh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
  }

  16{
    next = next_fetch
    alu_x = ch
    alu_op = x
    alu_mode = logic
    bl_wrt = true
  }
}

0xB5, "cmp word[d + i16], u16  -  mov ah, [d]"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    tdrl_wrt = true
  }
  9{
    next = next_offset
    offset = 1
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  10{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  11{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  12{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  13{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  14{
    next = next_offset
    offset = 1
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
  }
  15{
    next = next_fetch
    alu_x = tdrh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
  }



  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  19{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xB6, "cmp word[{bp,sp}+i16], u16"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    tdrl_wrt = true
  }
  9{
    next = next_offset
    offset = 1
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  10{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  11{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  12{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  13{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  14{
    next = next_offset
    offset = 1
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
  }
  15{
    next = next_fetch
    alu_x = tdrh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    tdrl_wrt = true
  }
  25{
    next = next_offset
    offset = 1
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  26{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  27{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  28{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  29{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  30{
    next = next_offset
    offset = 1
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
  }
  31{
    next = next_fetch
    alu_x = tdrh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
  }
}

0xB7, "mov a, [a + i16]  -  mov [d], ah"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    al_wrt = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  9{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }


  16{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  20{
    next = next_fetch
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xB8, "mov word[u16], u16"{
  }

0xB9, "cmp al, i8"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_fetch
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
  }
}

0xBA, "cmp al, bl"{
  0{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_fetch
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xBB, "cmp al, cl"{
  0{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_fetch
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xBC, "cmp byte[u16], u8"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  7{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  8{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  9{
    next = next_fetch
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
  }
}

0xBD, "cmp byte[d], u8"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xBE, "cmp byte[d + i16], u8"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  7{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  8{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  9{
    next = next_fetch
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
  }
}

0xBF, "cmp byte[{bp,sp}+i16], u8"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  7{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  8{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  9{
    next = next_fetch
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    marl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  23{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  24{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  25{
    next = next_fetch
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
  }
}

0xC0, "cmp b, i16 - cmp b, c"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
  }
  7{
    next = next_fetch
    alu_x = bh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    tdrh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = tdrl
  }
  19{
    next = next_fetch
    alu_x = bh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = tdrh
  }
}

0xC1, "cmp bl, i8"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_fetch
    alu_x = bl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
  }

  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    marl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  24{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrl
    dl_wrt = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  25{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    dh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xC2, "cmp c, i16"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
  }
  5{
    next = next_fetch
    alu_x = ch
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
  }
}

0xC3, "cmp cl, i8 - add byte [u16], i8"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    pcl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  3{
    next = next_fetch
    alu_x = cl
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    marl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  23{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  24{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
}

0xC4, "cmp ch, i8 - add byte [d], i8"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    pcl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    pch_wrt = true
  }
  3{
    next = next_fetch
    alu_x = ch
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xC5, "cmp d, i16 - add byte [d+i16], i8"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
  }
  5{
    next = next_fetch
    alu_x = dh
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xC6, "jz u16  - add byte [bp+i16], i8"{
  0{
    next = next_branch
    offset = 3  
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  2{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
}

0xC7, "jnz u16  - add byte [sp+i16], i8"{
  0{
    next = next_branch
    offset = 3
    condition_inv = true
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  2{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
}

0xC8, "jc/jlu u16 - add word [u16], i16"{
  0{
    next = next_branch
    offset = 3  
    condition = cf
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  2{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
}

0xC9, "jnc/jgeu u16 - add word [d], i16"{
  0{
    next = next_branch
    offset = 3
    condition_inv = true
    condition = cf
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  2{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
}

0xCA, "jneg u16 - add word [d+i16], i16"{
  0{
    next = next_branch
    offset = 3  
    condition = sf
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  2{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
}

0xCB, "jpos u16 - add word [bp+i16], i16"{
  0{
    next = next_branch
    offset = 3
    condition_inv = true
    condition = sf
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  2{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
}

0xCC, "jl u16 - add word [sp+i16], i16"{
  0{
    next = next_branch
    offset = 3  
    condition = lt
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  2{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
}

0xCD, "jle u16 - sub byte [u16], i8"{
  0{
    next = next_branch
    offset = 3  
    condition = lte
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  2{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
}

0xCE, "jg u16 - sub byte [d], i8"{
  0{
    next = next_branch
    offset = 3
    condition_inv = true
    condition = lte
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  2{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
}

0xCF, "jge u16 - sub byte [d+i16], i8"{
  0{
    next = next_branch
    offset = 3
    condition_inv = true
    condition = lt
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  2{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
}

0xD0, "jleu u16 - sub byte [bp+i16], i8"{
  0{
    next = next_branch
    offset = 3  
    condition = lteu
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  2{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
}

0xD1, "jgu u16 - sub byte [sp+i16], i8"{
  0{
    next = next_branch
    offset = 3
    condition_inv = true
    condition = lteu
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = pcl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  2{
    next = next_fetch
    alu_x = pch
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = mdrh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
    pch_wrt = true
  }
}

0xD2, "push bp - sub word [u16], i16"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = bpl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  7{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
}

0xD3, "add si, i16 - sub word [d], i16"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    sil_wrt = true
  }
  7{
    next = next_fetch
    alu_x = sih
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
    sih_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xD4, "add di, i16 - sub word [d+i16], i16"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = plus
    zf_in_src = alu_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    alu_y = mdrl
    dil_wrt = true
  }
  7{
    next = next_fetch
    alu_x = dih
    alu_op = plus
    alu_cf_in = cf
    alu_cf_in_inv = true
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    dih_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xD5, "sub si, i16 - sub word [bp+i16], i16"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    sil_wrt = true
  }
  7{
    next = next_fetch
    alu_x = sih
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
    sih_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xD6, "sub di, i16 - sub word [sp+i16], i16"{
  0{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  2{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    alu_y = mdrl
    dil_wrt = true
  }
  7{
    next = next_fetch
    alu_x = dih
    alu_op = minus
    alu_cf_in = cf
    zf_in_src = alu_zf_and_zf
    alu_cf_out_inv = true
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh  
    dih_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xD7, "push {a, word u16}"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  7{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  23{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  24{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  25{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  26{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
}

0xD8, "push {b, g}"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  7{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = gl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = gh
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  21{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  23{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
}

0xD9, "push c"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  7{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
}

0xDA, "push d"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  7{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
}

0xDB, "push {al, byte u8}"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  4{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  21{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
}

0xDC, "push ah"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  4{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
}

0xDD, "push bl"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  4{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
}

0xDE, "push bh - rol a, cl"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  4{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_x = ah
    alu_op = x
    alu_mode = logic
    }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    al_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_x = ah
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf
    ah_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  21{
    next = next_branch
    offset = -4
    condition_inv = true
    cond_flags_src = micro_flags
  }
  22{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xDF, "push cl - rol al, cl"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  4{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    shift_src = alu_out_7
    zbus_out_src = shifted_left
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    al_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  19{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  20{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xE0, "push ch - rlc a, cl"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = ch
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  4{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    shift_src = cf
    zbus_out_src = shifted_left
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    al_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_x = ah
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    ah_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  20{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  21{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xE1, "pushf  - rlc al, cl"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = arithmetic_flags
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  4{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    shift_src = cf
    zbus_out_src = shifted_left
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    al_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  19{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  20{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xE2, "push si - ror a, cl"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  7{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = ah
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    ah_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    sf_in_src = zbus_7
    al_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  21{
    next = next_branch
    offset = -4
    condition_inv = true
    cond_flags_src = micro_flags
  }
  22{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xE3, "push di - ror al, cl"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
    }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  7{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    sph_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    shift_src = alu_out_0
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    al_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  19{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  20{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xE4, "pop a  - rrc a, cl"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    ah_wrt = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = cf
    zbus_out_src = shifted_right
    alu_x = ah
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    ah_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_0  
    al_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  20{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  21{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xE5, "pop b  - rrc al, cl"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh 
    bh_wrt = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    shift_src = cf
    zbus_out_src = shifted_right
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_0
    sf_in_src = zbus_7
    al_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  19{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  20{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xE6, "pop c  - rol b, cl"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    ch_wrt = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    cl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_x = bh
    alu_op = x
    alu_mode = logic
    }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    bl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_x = bh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf
    bh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  21{
    next = next_branch
    offset = -4
    condition_inv = true
    cond_flags_src = micro_flags
  }
  22{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xE7, "pop d  - rol bl, cl"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    dh_wrt = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    dl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    shift_src = alu_out_7
    zbus_out_src = shifted_left
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    bl_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  19{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  20{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xE8, "pop al  - rlc b, cl"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  2{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  3{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    shift_src = cf
    zbus_out_src = shifted_left
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    bl_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_x = bh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    bh_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  20{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  21{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xE9, "pop ah  - rlc bl, cl"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  2{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  3{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    ah_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    shift_src = cf
    zbus_out_src = shifted_left
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    bl_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  19{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  20{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xEA, "pop bl  - ror b, cl"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  2{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  3{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = bh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    bh_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    sf_in_src = zbus_7
    bl_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  21{
    next = next_branch
    offset = -4
    condition_inv = true
    cond_flags_src = micro_flags
  }
  22{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xEB, "pop bh  - ror bl, cl"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  2{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  3{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    bh_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    shift_src = alu_out_0
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    bl_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  19{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  20{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xEC, "pop cl  - rrc b, cl"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  2{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  3{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    cl_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_0
    shift_src = cf
    zbus_out_src = shifted_right
    alu_x = bh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    sf_in_src = zbus_7
    bh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_0  
    bl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  20{
    next = next_branch
    offset = -3
    condition_inv = true
    cond_flags_src = micro_flags
  }
  21{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xED, "pop ch  - rrc bl, cl"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  2{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  3{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    ch_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = cl
    alu_op = x
    alu_mode = logic
    tdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    shift_src = cf
    zbus_out_src = shifted_right
    alu_x = bl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf  
    cf_in_src = alu_out_0
    sf_in_src = zbus_7
    bl_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = tdrl
    alu_op = minus
    alu_cf_in_inv = true
    tdrl_wrt = true
    immediate = 1
  }
  19{
    next = next_branch
    offset = -2
    condition_inv = true
    cond_flags_src = micro_flags
  }
  20{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xEE, "popf"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  2{
    next = next_offset
    offset = 1
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
  }
  3{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    zf_in_src = zbus_0  
    cf_in_src = zbus_1
    sf_in_src = zbus_2
    of_in_src = zbus_3  
    alu_y = mdrl
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xEF, "pop si"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    mdr_in_src = databus
    mdrl_wrt = true
    sih_wrt = true
  }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    sil_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xF0, "pop di"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    mdr_in_src = databus
    mdrl_wrt = true
    dih_wrt = true
    }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    dil_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xF1, "pop {bp, g}"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    mdr_in_src = databus
    mdrl_wrt = true
    bph_wrt = true
  }
  5{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    marl_wrt = true
    marh_wrt = true
    bpl_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  20{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    mdr_in_src = databus
    mdrl_wrt = true
    gh_wrt = true
  }
  21{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
    gl_wrt = true
  }
}

0xF2, "mov byte[u16], u8"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    tdrl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  6{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  7{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = tdrl
    marl_wrt = true
  }
  8{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrh  
    mdr_out_en = true
    marh_wrt = true
  }
  9{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  10{
    next = next_fetch
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xF3, "{repz}cmpsb"{
  0{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = sil
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    sil_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    sih_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  5{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dil
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    dil_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    dih_wrt = true
    }
  8{
    next = next_fetch
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = sil
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    sil_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    sih_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dil
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    dil_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    dih_wrt = true
    }
  24{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
  }
  25{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf
    ucf_in_src = alu_final_cf
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    cl_wrt = true
    immediate = 1
  }
  26{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf_and_uzf  
    alu_x = ch
    alu_op = minus
    alu_cf_in = ucf  
    ch_wrt = true
  }
  27{
    next = next_branch
    offset = 2  
    cond_flags_src = micro_flags
  }
  28{
    next = next_branch
    offset = -12
  }
  29{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  32{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf
    ucf_in_src = alu_final_cf
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    cl_wrt = true
    immediate = 1
  }
  33{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf_and_uzf  
    alu_x = ch
    alu_op = minus
    alu_cf_in = ucf  
    ch_wrt = true
  }
  34{
    next = next_branch
    offset = -10
    condition_inv = true
    cond_flags_src = micro_flags
  }
}

0xF4, "scansb"{
  0{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = sil
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    sil_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    sih_wrt = true
  }
  4{
    next = next_fetch
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrl
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xF5, "{rep}movsb"{
  0{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = sil
    alu_op = plus
    alu_cf_out_inv = true
    wr = true
    mdr_out_en = true
    sil_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    sih_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dil
    alu_op = plus
    alu_cf_out_inv = true
    dil_wrt = true
    immediate = 1
  }
  7{
    next = next_fetch
    alu_x = dih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    dih_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = x
    alu_mode = logic
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = sil
    alu_op = plus
    alu_cf_out_inv = true
    wr = true
    mdr_out_en = true
    sil_wrt = true
    immediate = 1
  }
  21{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    sih_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dil
    alu_op = plus
    alu_cf_out_inv = true
    dil_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    dih_wrt = true
    }
  24{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf
    ucf_in_src = alu_final_cf
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    cl_wrt = true
    immediate = 1
  }
  25{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf_and_uzf  
    alu_x = ch
    alu_op = minus
    alu_cf_in = ucf  
    ch_wrt = true
  }
  26{
    next = next_branch
    offset = -10
    condition_inv = true
    cond_flags_src = micro_flags
  }
  27{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xF6, "lodsb - repnz cmpsb"{
  0{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = sil
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    sil_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    al_wrt = true
  }
  4{
    next = next_fetch
    alu_x = sih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    sih_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_x = sil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = sil
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    sil_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = sih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    sih_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  21{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dil
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    dil_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    dih_wrt = true
    }
  24{
    next = next_offset
    offset = 1
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    zf_in_src = alu_zf  
    cf_in_src = alu_final_cf
    sf_in_src = zbus_7
    of_in_src = alu_of
    alu_y = mdrh
  }
  25{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf
    ucf_in_src = alu_final_cf
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    cl_wrt = true
    immediate = 1
  }
  26{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf_and_uzf  
    alu_x = ch
    alu_op = minus
    alu_cf_in = ucf  
    ch_wrt = true
  }
  27{
    next = next_branch
    offset = 2  
    cond_flags_src = micro_flags
  }
  28{
    next = next_branch
    offset = -12
    condition_inv = true
  }
  29{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  32{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf
    ucf_in_src = alu_final_cf
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    cl_wrt = true
    immediate = 1
  }
  33{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf_and_uzf  
    alu_x = ch
    alu_op = minus
    alu_cf_in = ucf  
    ch_wrt = true
  }
  34{
    next = next_branch
    offset = -10
    condition_inv = true
    cond_flags_src = micro_flags
  }
}

0xF7, "{rep}stosb"{
  0{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dil
    alu_op = plus
    alu_cf_out_inv = true
    wr = true
    mdr_out_en = true
    dil_wrt = true
    immediate = 1
  }
  4{
    next = next_fetch
    alu_x = dih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    mdr_out_en = true
    dih_wrt = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = dil
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    marh_wrt = true
  }
  19{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dil
    alu_op = plus
    alu_cf_out_inv = true
    mdr_out_en = true
    dil_wrt = true
    marl_wrt = true
    immediate = 1
  }
  21{
    next = next_offset
    offset = 1
    alu_x = dih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    dih_wrt = true
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf
    ucf_in_src = alu_final_cf
    alu_x = cl
    alu_op = minus
    alu_cf_in_inv = true
    cl_wrt = true
    immediate = 1
  }
  23{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf_and_uzf
    ucf_in_src = alu_final_cf
    alu_x = ch
    alu_op = minus
    alu_cf_in = ucf  
    ch_wrt = true
  }
  24{
    next = next_branch
    offset = -5
    condition_inv = true
    cond_flags_src = micro_flags
  }
  25{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xF8, "enter u16 - lea d, [bp + A*2^u8 + B]"{
  0{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_x = bpl
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = x
    alu_mode = logic
    wr = true
    mdr_out_en = true
    mdrh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    mdr_out_en = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    marh_wrt = true
    sph_wrt = true
  }
  6{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    wr = true
    mdr_out_src = mdrh
    mdr_out_en = true
    spl_wrt = true
    immediate = 1
  }
  7{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf
    mdr_out_src = mdrh
    mdr_out_en = true
    sph_wrt = true
    }
  8{
    next = next_offset
    offset = 1
    alu_x = spl
    alu_op = x
    alu_mode = logic
    bpl_wrt = true
  }
  9{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = x
    alu_mode = logic
    marl_wrt = true
    marh_wrt = true
    bph_wrt = true
    mar_in_src = pc
  }
  10{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  11{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  12{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  13{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  14{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = minus
    alu_cf_in_inv = true
    alu_y = mdrl
    spl_wrt = true
  }
  15{
    next = next_fetch
    alu_x = sph
    alu_op = minus
    alu_cf_in = ucf  
    alu_y = mdrh
    sph_wrt = true
    }
  16{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    dl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    dh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
  }
  21{
    next = next_branch
    offset = 4  
    cond_flags_src = micro_flags
  }
  22{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_x = dl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf
    dl_wrt = true
  }
  23{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_x = dh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    dh_wrt = true
  }
  24{
    next = next_offset
    offset = -3
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  25{
    next = next_offset
    offset = 1
    alu_x = bpl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  26{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  27{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    dl_wrt = true
  }
  28{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh  
    dh_wrt = true
  }
  29{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  30{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  31{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    dl_wrt = true
  }
  32{
    next = next_fetch
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh  
    dh_wrt = true
  }
  36{
    next = next_fetch
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh  
    dh_wrt = true
  }
}

0xF9, "leave - lea d, [u16 + A*2^u8 + B]"{
  0{
    next = next_offset
    offset = 1
    alu_x = bpl
    alu_op = x
    alu_mode = logic
    spl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = bph
    alu_op = x
    alu_mode = logic
    sph_wrt = true
    }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    spl_wrt = true
    immediate = 1
  }
  5{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    sph_wrt = true
    }
  6{
    next = next_offset
    offset = 1
    alu_op = y
    alu_mode = logic
    rd = true
    alu_y = mdrh  
    mdr_in_src = databus
    mdrl_wrt = true
    bph_wrt = true
  }
  7{
    next = next_fetch
    alu_op = y
    alu_mode = logic
    alu_y = mdrl
    marl_wrt = true
    marh_wrt = true
    bpl_wrt = true
    mar_in_src = pc
  }
  16{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    dl_wrt = true
  }
  17{
    next = next_offset
    offset = 1
    alu_x = ah
    alu_op = x
    alu_mode = logic
    dh_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    marl_wrt = true
    immediate = 2
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = minus
    alu_cf_in_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    immediate = 2
  }
  21{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = minus
    alu_cf_in = ucf  
    marh_wrt = true
  }
  22{
    next = next_offset
    offset = 1
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
  }
  23{
    next = next_branch
    offset = 4  
    cond_flags_src = micro_flags
  }
  24{
    next = next_offset
    offset = 1
    ucf_in_src = alu_out_7
    zbus_out_src = shifted_left
    alu_x = dl
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf
    dl_wrt = true
  }
  25{
    next = next_offset
    offset = 1
    shift_src = ucf
    zbus_out_src = shifted_left
    alu_x = dh
    alu_op = x
    alu_mode = logic
    zf_in_src = alu_zf_and_zf  
    cf_in_src = alu_out_7
    sf_in_src = zbus_7
    dh_wrt = true
  }
  26{
    next = next_offset
    offset = -3
    uzf_in_src = alu_zf  
    alu_x = mdrl
    alu_op = minus
    alu_cf_in_inv = true
    mdrl_wrt = true
    immediate = 1
  }
  27{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  28{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  29{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 2
  }
  30{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  31{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    dl_wrt = true
  }
  32{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh  
    dh_wrt = true
  }
  33{
    next = next_offset
    offset = 1
    alu_x = bl
    alu_op = x
    alu_mode = logic
    mdrl_wrt = true
  }
  34{
    next = next_offset
    offset = 1
    alu_x = bh
    alu_op = x
    alu_mode = logic
    mdrh_wrt = true
  }
  35{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    dl_wrt = true
  }
  36{
    next = next_fetch
    alu_x = dh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh  
    dh_wrt = true
  }
}

0xFA, "lea d, [{bp, sp} + u16]"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = bpl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    dl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = bph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh  
    dh_wrt = true
  }
  16{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  17{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  18{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  19{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  20{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = spl
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    dl_wrt = true
  }
  21{
    next = next_fetch
    alu_x = sph
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh  
    dh_wrt = true
  }
}

0xFB, "lea d, [si + u16]"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = sil
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    dl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = sih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh  
    dh_wrt = true
  }
}

0xFC, "lea d, [di + u16]"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrl_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    mdr_in_src = databus
    mdrh_wrt = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  3{
    next = next_offset
    offset = 1
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
  4{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    alu_x = dil
    alu_op = plus
    alu_cf_out_inv = true
    alu_y = mdrl
    dl_wrt = true
  }
  5{
    next = next_fetch
    alu_x = dih
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    alu_y = mdrh  
    dh_wrt = true
  }
}

0xFD, "esc u8"{
  0{
    next = next_offset
    offset = 1
    ucf_in_src = alu_final_cf
    ir_wrt = true
    alu_x = marl
    alu_op = plus
    alu_cf_out_inv = true
    rd = true
    marl_wrt = true
    pcl_wrt = true
    immediate = 1
  }
  1{
    next = next_ir
    escape = true
    alu_x = marh
    alu_op = plus
    alu_cf_in = ucf
    alu_cf_in_inv = true
    marh_wrt = true
    pch_wrt = true
  }
}

0xFE, "nop - strcmp"{
  0{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}

0xFF, "halt - mov [[d]], al"{
  0{
    next = next_branch
    condition_inv = true
    condition = irq_pending
  }
  1{
    next = next_fetch
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }

// TODO
  0{
    next = next_offset
    offset = 1
    alu_x = dl
    alu_op = x
    alu_mode = logic
    marl_wrt = true
  }
  1{
    next = next_offset
    offset = 1
    alu_x = dh
    alu_op = x
    alu_mode = logic
    marh_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    rd = true
    mdrl_wrt = true
  }
  2{
    next = next_offset
    offset = 1
    alu_op = x
    alu_mode = logic
    mdr_out_en = true
    mdrl_wrt = true
  }
  3{
    next = next_offset
    offset = 1
    wr = true
    mdr_out_en = true
  }
  4{
    next = next_fetch
    mdr_out_en = true
    marl_wrt = true
    marh_wrt = true
    mar_in_src = pc
  }
}
