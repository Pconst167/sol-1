###############################################################################
##                     ÄÍðZhit Axis Nation presentsðÍÄ                W () W ##
##                         How to REALLY use ANSI                      \||/  ##
##                   Written by:  Wise Intelligent IQ                   ||   ##
##                        Co-Written by: Sturge Killer                _/  \_ ##
##                              Dated:  9/9/91                               ##
###############################################################################

        You've seen a lot of USEANSI.TXT files that tell you CRAP about
        ANSI.  Here is the best of the best!


----------------------------------------------- ANSI ESCAPE SEQUENCES ---------

        This text file explains the ANSI ESCape secquences you use to control
        the screen cursor position and reassign the function of any key on
        the keyboard.  An ANSI ESCape sequence is a series of characters,
        beginning with an ESCape character, you can use to define functions
        for MS-DOS or any ANSI supporting hardware (Sun Unix provides ANSI
        compatible emulation through the DOSANSI.GCT protocol! TRY IT!)

        Before you can  use these ESCape sequences, you MUST load the
        extended keyboard and screen driver into the system.  To do this,
        you include the following command in the configuration file
        (CONFIG.SYS!) :

                DEVICE=ANSI.SYS

        For DESQview users, you can LOADHI this command easily!

        The control sequences are issued using the DOS function calls of
        1, 2, 6, and/or 9.

        The following rules apply to the ESCape sequences:

        1] The default value for the function is used when you specify
           NO value, or a value of '0' (ZERO).
        2] Decimal values, such as screen positions, are shown in the
           following examples as the '#' character (POUND SIGN). You
           replace the '#' with the appropriate decimal number.  You
           can omit the parameter to use the default value.
        3] ESCape or ESC represents the escape code (ASCII#027, HEX #1BH)
        4] You MUST enter these sequences exactly as shown. DO NOT add
           SPACES or change the case (UPPER OR LOWER) of ANY part of the
           sequence.


--------------------------------[ PAGE 1 ]------------------------------------


==========--------------[ CURSOR CONTROL: CHAPTER ONE ]--------------=========

Code Sequence (ESC)

--- Cursor Position ---
Esc[X;YH                Moves the cursor to position line X, Column Y.
   or                   The default value is ONE or '1'.  If no number
Esc[X;Yf                is specified for EITHER, the cursor will move
                        to position 1,1; the home position - WITHOUT
                        clearing the screen.

---    Cursor Up    ---
Esc[#A                  Moves the cursor up # number of lines.  When it
                        reaches LINE 1, it stops.  The column stays the
                        same.

---    Cursor Down  ---
Esc[#B                  Moves the cursor down # number of lines.  When it
                        reaches the BOTTOM line, it stops.  The column
                        stays the same.

---  Cursor Forward ---
Esc[#C                  Moves the cursor forward # columns, WITHOUT
                        changing lines.  STOPS at the last column.

--- Cursor Backward ---
Esc[#D                  Moves the cursor backward # columns, WITHOUT
                        changing lines.  STOPS at column 1.

---  Status Report  ---
Esc[6n                  Undocumented feature.  Use in ANSI detection
                        protocols.  NOT supported by Sun Micro's
                        DOSANSI.GCT sorry!  This runs the NEXT sequence
                        (Cursor Report Sequence).

--- Position Report ---
Esc[X;YR                Undocumented feature.  Can be called ALONE, or with
                        the above call (Status Report). Returns the X and
                        Y coordinates to the standard system input (screen
                        or console or file!).

-- Save Cursor Pos  ---
Esc[S                   Saves the current cursor position.  Can be called
                        back by next command.

--- Restore Cursor  ---
Esc[U                   Restores old cursor position from what above
                        sequence did.

--------------------------------[ PAGE 2]-------------------------------------

