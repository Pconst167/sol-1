
~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^
                           12/10/92    1.20 RELEASE

~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^
    ###    |~| ### ###    |~|  ####~\. #####~\. ###   /~| #####~\. #####
     ###   | | ### ####   | | ###  |_| ###  | |  ###_/ /  ###  | | ######
      ###  | | ### #####  | | ###      ###  | |   ###_/   ###  | |    ###
       ### | | ### ###### | | ###      ##### <     ###    #####_/     ###
        ###| | ### ### ###| | ###      ###  | |    ###    ###         ###
         ### | ### ###  ### | ###      ###  | |    ###    ###         ###
          ###| ### ###   ###| ###  |~| ###  | |    ###    ###         ###
           ### ### ###    ###  ######' ###  |_|    ###    ###         ###

~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^
        What GOD's own son Christ would have written, had he been evil.

~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^

PROGRAM HISTORY
~~~~~~~~~~~~~~~
    DATE        VER     DESC
    --------    ----    -------------------------------------------------
    09/11/92    0.10    Began work of original version
    09/23/92    0.25    First working version, would work only on ASCII
    10/06/92    0.32    Modified DES routines to allow 255 charset
    10/19/92    0.59    Implemented RSA public-key routines
    10/28/92    0.70    Implemented Compression routines
    11/27/92    0.83    First working version with compression/encryption
    11/28/92    0.90    Delta release testing begins at selected sites
    12/01/92    0.99    Gamma release w/ VinLynx/Key modes testing
    12/04/92    1.05    Implemented Multiple file option (all modes)
    12/05/92    1.06    Optimized source
    12/06/92    1.07    Found bug with EISA machines, Improved 'M' mode
    12/09/92    1.10    Fixes EISA machine bug
    12/10/92    1.14    Key mode fully implemented
    12/12/92    1.20    Lock mode fully implemented for drives A and B
    --------    ----    -------------------------------------------------

WHAT IS VINCRYPT
~~~~~~~~~~~~~~~~
  Well, basically what Vincrypt is, and was designed to do is keep sensitive
information protected.  There have been many other programs that are out that
do along the same thing as Vincrypt, but not to the same degree.  Vincrypt
incorporates a modified DES routine, RSA public-key, MPJ encryption, and a
modified PKware zip based routine.  The most signifigant factor about this
program is the fact that it is a relatively 'dumb' program.  Aside from
identifying whether or not the source file was generated with the program, it
simply processes the files without any headers of pointers.  The reason for
this is to make it even more difficult to break the routine and bypass the
encryption due to file common information (such as how all government letters
say TO: FROM: DEPT:, etc).
  Unlike other programs which use GOVERNMENT APPROVED algorhythms, Vincrypt
strives to break all laws concerning government regulated security, and is
not NSA approved.  The main point here is that the NSA approved DES and RSA
for use in the public, but chose not to use the routines for their own
internal security.  What does that tell you?  There has been alot of talk
about what's safe and what's not, and no one is quite sure, so I took it upon
myself to write this utility.


WHO SHOULD USE VC
~~~~~~~~~~~~~~~~~
  Everybody.  In this day and age where G. Orwell's 1984 looks more like it
will be 1994, where a democrat can become president, and gun controls just
lurking around the corner, you must take any and all steps to secure vital
information against prying eyes.  Commercially available security utils are
a joke, and the public domain ones aren't even worth laughing at, since they
look at security more as something that stops Joe, your neighbor, from going
into your dos directory, or maybe from using the format command.  I don't
really care if it is used for evil purposes, although I would prefer it.


WHAT VC HAS BEEN TESTED ON
~~~~~~~~~~~~~~~~~~~~~~~~~~
  VINCRYPT has undergone extensive testing on the following platforms:

            486-50 DX ISA   32 MEGS   SCSI TYPE DRIVE
            486-33 DX EISA   8 MEGS   SCSI TYPE-2 DRIVE
            486-33 DX LB     8 MEGS   LOCAL BUS IDE
            486-33 DX ISA    4 MEGS   IDE
            386-40 DX ISA    8 MEGS   IDE
            386-16 SX ISA    2 MEGS   IDE (Wren)
            286-25 DX ISA    2 MEGS   IDE
              8088 DX ISA  640 k      ST-506

VC was even tested on an HP 95LX, although it was slow, it worked!


FILES SUPPORTED
~~~~~~~~~~~~~~~
  Unlike MUTATi0N and SecureCrypt, Vincrypt will encrypt ANY file... .EXE, .COM
.TXT, whatever.  Where the others either tag crap on the end, or can't process
non-ascii input, VC excels.  Although the compression routine in VC is not
as good as newer versions of zip, it is a small price to pay for security.
And since PKware will unzip your password protected .zip files, in case you
forget your password, I wouldn't recommend relying on it.


THE PASSWORD
~~~~~~~~~~~~
  VC supports a password of up to 30 chars, which can be numbers, letters,
symbols, whatever.  VC also IS case sensitive, so 'Password' differs from
'paSsword', or 'PAssword'.  This version does not currently support spaces in
the password, but if demand is enough, later versions will.
  Realize that the password you choose is the key to the security of this
program.  The longer the password, the better; so try to choose a phrase or
combination of words.  Unlike the other 1:1 encryption routines, redundancy in
the file and a small password are not as damaging.  This is due in part to the
compression and public-key routines.


ENCRYPTION METHODS
~~~~~~~~~~~~~~~~~~
  VC currently supports two different encryption methods.  The primary method
is called VINCRYPTION, and can be used on any type of file (from .EXE to .TXT).
It incorporates the VC encryption, with a more advanced compression routine
and non-ASCII character handling.
  The second mode is 'VINLYNX'.  VinLynx mode is exclusively for use with
text files and ASCII files, and uses a less complex method of compression, but
with larger savings in space.  VinLynx will abort if it detects any non-ASCII
characters in the input file.
  Both encryption modes are equally secure, and can be used with any of the
other functions VC allows (such as Lock or Key modes (described below)).


MODES OF OPERATION
~~~~~~~~~~~~~~~~~~
  VC supports several different modes of encryption in this version.  You can
get a list of commands by typing either 'VC' or 'VC /?'.
  First (and probably the most commonly used) is the primary mode (option
either 'e' or 'd').  This is the basic encryption/compression routines, with
one vertical and horizontal 'fold'.  To use this option you would use the
following string:

    C:\> VC e work.txt work.vin defaultpasswd s

This tells VC to encrypt work.txt into the file work.vin, with the password of
'defaultpasswd', and to show the statistics at the end.  The 's' is optional
and does not impair performance.
  The second and more secure mode is called 'Chained' mode.  What this does is
encrypt the file the same as above, then add duplicate strings in specific
parts encrypted with a different password (apart from the two you choose).
The string it duplicates on the other routine is usually a common word such
as 'the' or 'is'.  This is to defeat a brute force attempt using common word
searches.  The file is the encrypted a second time with your other password,
thus masking everything across the file.  To use this feature you would enter:

    C:\> VC ec work.txt work.vin default passwd sc

Like the above example, the in/out files are the same, and 's' is optional.
In this mode, however, 'c' was also selected.  This tells VC to clear the
screen before encryption or decryption begins, thus hiding the password from
someone watching.  'default' is the primary password, and 'passwd' is the
secondary.  One note, you can use two 30 char passwords, since it is actually
encrypting the file twice.
  The third mode is called 'Locked' mode, and is only available when using a
floppy drive (either A or B).  What this does is encrypt the file by your
password, which is combined with information from the fat table and directory.
Due to the combination, the password is limited to 25 chars in this mode,
although the 10 chars of information the program gathers is based off letters
in the password.  So an example is:

     secretword  ->  sXe5!cFr0t-w12obr.d
     Secretword  ->  YSeR@cretx/wom,:r3d

Remember that the file CANNOT be decrypted in any way unless you have the EXACT
floppy it was encrypted on in the drive.  This feature is especially nice when
you want to store sensitive information in a fairly accessible location.  You can
encrypt and decrypt the files on the HD for faster access, but you must always
use a key disk in A or B.  Each keydisk can be used for as many of few files as
you would like, you can even turn a normal program disk into a key disk and it
will not look any different.  Note that this mode is much like Chained mode, and
creates duplicate word files between the password and lock encryption sessions.
  The fourth mode is referred to as 'Key' mode.  This is based off of the MPJ
encryption routine, which realized with DES each letter is really only worth
100 possiblites (36 alphabet lower/36 alphabet upper, 10 numbers, 18 misc
symbols).  This means a four letter password in DES is worth in reality 100^4,
nothing like 256^4.  The numbers which are entered in are then converted to
their ANSI respective chars, and used as a key, much like Chain mode.  Key
mode still requires a password to be entered, so if you use a four char pass
and a six numberset key, your possibilies are (100^4) * (256^6).  This is
currently the most secure mode VC offers.  When using this mode, the command
line looks like this:

    C:\> VC ek work.txt work.vin password scl

Then the program responds with this:

Numbers must be between 000-255.
            ###
Enter Key :

At this point you would enter the key.  Remember to always use ALL THREE spaces,
so don't enter 0 or 45, use this 000 or 045.  If you have the screen clear
option selected (as the above example does), the screen will then clear once
the key has been entered.  For the best possible security, try to use numbers
above 127, and jump around as much as possible, since these are not used as
frequently.  When you hit enter it will display it's ANSI representation in a
small box, and prompt for the next.  When you've entered all you want, type END.
The key may be up to 10 numbersets long, so a maximum possible number of 256^10.
  The fifth mode is not really a different mode, but a different session,
where the program will search a drive and ask if you want files to be encrypted.
I recommend ending all of your VC'd files with .VIN  To use this option type
this:

    C:\> VC em *.* password c
    C:\> VC dm password c

The [L] toggles are not available in this mode.  Also, when decrypting, all
files must use the same password, and end with a .VIN or the program will
not list them.  Another nice point about the multiple mode, is that it is
compatible with all the other modes, so you could enter 'emc' for Encrypt
Multiple files using Chained mode; or 'dmk' for Decrypt Multiple files using
the Key option.  The program prompts with the filename, and asks if you wish
to encrypt it; at this point you can enter either [Y]es, [N]o, or [Q]uit.
If you respond no, it will go on to the next file; If yes, it will ask if you
would like to use VinLynx mode, and then the output filename.  The '*.*' is
the filespec for the directory search, so if you just wanted textfiles, you'd
enter '*.TXT'.  All standard dos flags (like * or ?) are supported.  When
decrypting, do not use the filespec flag.
  Also note that the command line uses the flag 'L' for VINLYNX mode (for use
with ASCII files).  VC defaults to VINCRYPTION.  The last command field can
be entered in any sequence, so 'cl' will work just as well as 'lc' or 'lsc'.
The program in not case sensitive EXCEPT in the password fields.


STATISTICS DISPLAY
~~~~~~~~~~~~~~~~~~
  The statistics option really doesn't have any useful application, except in
debugging, but I left it in anyways.  It tells you a general overview of the
VC session.  Here's a sample of what it outputs:

                    VINCRYPT VERSION 1.00 STATISTICS

                    Input Name          [triad.1]
                    Input Size          [19378]
                    Output Name         [triad.vin]
                    Output Size         [12476]
                    Encryption Type     [VINCRYPTION]
                    Compression         [0.464]
                    Completion Time     [3.000000]
                    Password1 Length    [8]
                    Password2 Length    [0]
                    Public-Key          [343]
                    Fold Horizontal     [180]
                    Fold Vertical       [212]
                    Average Block       [6205]

Everything is pretty self explanatory.  The vertical and horizontal folds
represent the string length based off of the average output block.  The public
key is the RSA routine checksum.  Currently VINCRYPTION and VINLYNX are the
only modes available, although upcoming versions will have more improved
routines.  The stat display in multiple file modes is stripped down and split
into two locations on the screen.  Some information is also left out.


KNOWN BUGS
~~~~~~~~~~
  VinLynx mode does not always detect and abort a non-ascii file, but simple
processes it through.  The easiest way around this (without slowing the code
down signifigantly is just don't use it on non-test files.


PROGRAMS FOR THE FUTURE
~~~~~~~~~~~~~~~~~~~~~~~
  Here's some of the programs to be watching for, from me, in the future:

        ACTCHK        Checks CBI accounts against their algorhythm and verifies
                      format validity and extra information.
                        [AVAILABLE EARLY 1993]
        CBIDBS        A database that sorts and displays all of your credit
                      reports.  Implements the VC routines real time for
                      maximum security.  Allows searching for any field, comment
                      fields, and ARDT directory.
                        [AVAILABLE SUMMER 1993]


CONCLUSION
~~~~~~~~~~
  If you have any questions, comments, or problems, please report them to me
on any of the boards listed below or in the program.  The greets go out to:

        DIGITAL HITLER      MAXIMUM OVERDRIVE   THE WHITE RIDER
        EREKOSE             MR. DRUNKFUX        GRANDMASTER RATTE'
        BOOTLEGGER          CAPT ZAP

And always remember...

  96% of all SS agents who have tried women prefer camels...
                                                  ...the other 4% prefer men.
 =============================================================================
 Church/Theives [IBM H/P system running with MNP           ]  96  619-789-2235
 Demon Roach    [PW: THRASH - NUP: FEAR - cDc - Nuff said  ]  24  806-794-4362
 The Stash      [My European Connection... Lots of files   ]  96 46-498-222113
 The Works      [Tons of Files  cDc Board  Give it a call  ]  24  617-861-8976
 =============================================================================
  This concludes another wonderful file by Video Vindicator  (C)opyright 1992
 =============================================================================


