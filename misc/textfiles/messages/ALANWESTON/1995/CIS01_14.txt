

#: 20705 S1/General Interest
    13-Jan-95  17:42:38
Sb: #20679-Archive Files
Fm: DTR 100302,3271
To: Tim Brock 100046,2467

Tim,

this is a DOS *.arj archive. Please use the arj.exe utility. OS9MAX is a MS-DOS
utility.

DTR Kiel         

#: 20702 S1/General Interest
    13-Jan-95  03:45:21
Sb: #ISP - non-blocking write
Fm: Paul S. Dayan 100040,400
To: sysop (X)

ISP - does a non-blocking 'send' cause the process to sleep under any
circumstances? We have a real-time application that must send messages, but
must not sleep, as it has only 1.5ms to complete all of its tasks. Thanks for
your help.
Paul Dayan, Galactic Industrial Ltd, UK

There is 1 Reply.

#: 20707 S1/General Interest
    14-Jan-95  11:55:18
Sb: #20702-ISP - non-blocking write
Fm: Kim Kempf 71161,3221
To: Paul S. Dayan 100040,400

 >> ISP - does a non-blocking 'send' cause the process to sleep under any
circumstances? We have a real-time application that must send messages, but
must not sleep, as it has only 1.5ms to complete all of its tasks. Thanks for
your help. <<

 A sendto() will not block if the socket has been placed in non-block mode.  If
SOCKMAN decides it has to sleep (actually _ev_wait() on hi/lo water marks), it
will check the no-block flag in the PD.  If set, it returns E_WOULDBLOCK
instead of blocking.  I assume since you ask, it's not working this way? %-{

!^NavFont01F000D41GD3HGD6HHC0B788

#: 20697 S6/Applications
    10-Jan-95  14:17:03
Sb: #Wanted: file-manager
Fm: Axel Binsack 100326,1305
To: all

Hi,
I wonder if there is any FILE-MANAGER avialable for os9!
My dream is a 'Norton Commander' for os9, which would make the all-day-work far
easier.

Further on I'm interested in an EDITOR, which allows to use the keymapping
which is used in all common Microsoft-products (using shift/ctrl/del/ins keys
etc. to mark and copy) and supports multi-file-sessions.

Are there any good tools (professional or shareware) which help working with
that operating system?

Ciao, Axel


There is 1 Reply.

#: 20700 S6/Applications
    12-Jan-95  17:32:53
Sb: #20697-#Wanted: file-manager
Fm: Steve Wegert 76703,4255
To: Axel Binsack 100326,1305 (X)

Axel,

If you're thinking along the lines of a Windowish file manger, I could suggest
Desktop for Kwindows. I believe Gwindows has a similar application that allows
directory tree walking.

As far as editors go, we have versions of umacs and vi which support key
mapping. What other tools are you looking for ... and on what hardware platform
do you wish to use them?

*- Steve -*


There is 1 Reply.

#: 20703 S6/Applications
    13-Jan-95  14:21:14
Sb: #20700-Wanted: file-manager
Fm: Axel Binsack 100326,1305
To: Steve Wegert 76703,4255 (X)

Hi Steve,
> If you're thinking along the lines of a Windowish file manger, I could
suggest Desktop for
> Kwindows. I believe Gwindows has a similar application that allows directory
tree walking.

Where can I get these? Never heard of G- or K-Windows!

> As far as editors go, we have versions of umacs and vi which support key
mapping. What
> other tools are you looking for ... and on what hardware platform do you wish
to use them?

Many editors have problems mapping the special keys (PgUp, Del, Ins etc.) of
PC-keyboards.
I didn't really try it with umacs and vi, but I think we have these editors in
our company; I'll have a look.
We work all on 680xx-processors and I'm lucky to work with an x-Terminal
(x-Windows) - concerning editing  I just work in VT100-emulation.

Ciao, Axel

#: 20706 S12/OS9/68000 (OSK)
    13-Jan-95  17:48:07
Sb: #20678-PC <--> OS/9 via TCP/IP?
Fm: DTR 100302,3271
To: Ingo Pakleppa (ECS) 100041,102

Sehr Interessant Ihre Entwicklung! Bitte senden Sie uns einmal eine
detaillierte Beschreibung.


DTR Kiel

Bremer Str.2
D-24118 Kiel
Fax 0431-86511
* We supply OS-9 software *

 

#: 20684 S12/OS9/68000 (OSK)
    07-Jan-95  04:30:17
Sb: #library 12
Fm: Ed Gresick 76576,3312
To: SYSOP (X)

I've uploaded 3 files to library 12.  I need to upload 1 more (10k) to complete
the set but there isn't any more space.  Can you make some more space??

Ed Gresick - DELMARCO

There is 1 Reply.

#: 20685 S12/OS9/68000 (OSK)
    07-Jan-95  08:06:42
Sb: #20684-library 12
Fm: Mike Ward 76703,2013
To: Ed Gresick 76576,3312 (X)

Give it a shot now.

#: 20686 S12/OS9/68000 (OSK)
    07-Jan-95  10:22:42
Sb: #HELP - login gives error
Fm: Tim Berkeley 75240,1316
To: ALL

Hi all

I am having a problem trying to get a telnet session into my osk system. After
it connects it generates the following message and disconnects.


I get the exact same message when I execute login from an existing shell.
Anybody seen this before?

Thanking you in anticipation

Tim Berkeley

There is 1 Reply.

#: 20691 S12/OS9/68000 (OSK)
    08-Jan-95  13:12:09
Sb: #20686-#HELP - login gives error
Fm: Steve Wegert 76703,4255
To: Tim Berkeley 75240,1316 (X)

Tim,

What error message are you getting? What software are you using to run a telnet
session? What hardware platform are you running OS9 under?

*- Steve -*


There is 1 Reply.

#: 20693 S12/OS9/68000 (OSK)
    08-Jan-95  19:07:05
Sb: #20691-#HELP - login gives error
Fm: Tim Berkeley 75240,1316
To: Steve Wegert 76703,4255 (X)

Opps - sorry about the incomplete message

The hardware running OS9 is a Philips CDI 605 T, the TCP/IP stack that I am
using is the 32bit Windows for Workgroups stuff from Microsoft. The error
message I get from login is:

        "login: can't chd to "Ju". Error #000:215".


Thanks for your time.

Tim

There is 1 Reply.

#: 20694 S12/OS9/68000 (OSK)
    09-Jan-95  11:54:16
Sb: #20693-HELP - login gives error
Fm: Pete Lyall 76703,4230
To: Tim Berkeley 75240,1316 (X)

Tim -

Sounds like your password file is pointing to an initial login directory for
the user that:

 a) Doesn't exist
 b) Doesn't have permissions set right
 c) Isn't owned by the user

Also - a corrupt password file entry may be the candidate.

Pete

P.S. I have also seen similar errors when OS9 tries to execute an executable as
a shell script.


#: 20687 S12/OS9/68000 (OSK)
    07-Jan-95  22:56:52
Sb: #unix functions
Fm: Bob van der Poel 76510,2203
To: all

Does anyone happen to know what the functions lockf() or flock() do in the unix
environment? Is there an equivalent OS9ism?

There are 3 Replies.

#: 20695 S12/OS9/68000 (OSK)
    09-Jan-95  11:59:48
Sb: #20687-unix functions
Fm: Pete Lyall 76703,4230
To: Bob van der Poel 76510,2203 (X)

Locks, unlocks, and tests for locks on a Unix file. Calling syntax is
'lockf(fd,cmd,size)', where fd and cmd are ints, and size is a long.

Command tokens are:

   F_ULOCK 0 /* unlock a previously locked section */
   F_LOCK  1 /* lock a section for exclusive use */
   F_TLOCK 2 /* test and lock a sexction (non-blockking) */
   F_TEST  3 /* test section for other processes' locks */

I'm sure you could implement this with SS_LOCK etc on an RBF device.

Pete

#: 20698 S12/OS9/68000 (OSK)
    11-Jan-95  21:12:26
Sb: #20687-#unix functions
Fm: Bob van der Poel 76510,2203
To: Bob van der Poel 76510,2203 (X)

>Locks, unlocks, and tests for locks on a Unix file. Calling syntax is
>'lockf(fd,cmd,size)', where fd and cmd are ints, and size is a long. >
>Command tokens are: > >   F_ULOCK 0 /* unlock a previously locked section */ >
F_LOCK  1 /* lock a section for exclusive use */ >   F_TLOCK 2 /* test and lock
a sexction (non-blockking) */ >   F_TEST  3 /* test section for other
processes' locks */ > >I'm sure you could implement this with SS_LOCK etc on an
RBF device.

1. If you do something like lockf(fd, F_LOCK, 1234) which 1234 bytes would be
   locked out?

2. If you use F_TLOCK what does non-blocking mean? After all, the idea of
   doing a lock is _to_ lock (ie. block?) a part of a file?

Thanks Pete!

There is 1 Reply.

#: 20699 S12/OS9/68000 (OSK)
    12-Jan-95  10:47:15
Sb: #20698-unix functions
Fm: Pete Lyall 76703,4230
To: Bob van der Poel 76510,2203 (X)

I'm guessing the lock would be placed at wherever the current file pointer is..
You could seek to any part of the file, and apply the lock.

In the case of question 2, I have no idea. Guessing, but even OS9 has blocking
and non-blocking locks. You can read a file that has an EOF lock on it (up to
the lock, of course), but you can't read a file that has a locksize of
0xffffffff applied, etc.

#: 20701 S12/OS9/68000 (OSK)
    13-Jan-95  00:28:27
Sb: #20687-unix functions
Fm: Kim Kempf 71161,3221
To: Bob van der Poel 76510,2203 (X)

 >> Does anyone happen to know what the functions lockf() or flock() do in the
unix environment? Is there an equivalent OS9ism? <<

 RBF provides implicit locks when a file is opened for update (read/write).
When a process does a read() when the file is opened for update the bytes in
the file that were read are implicitly "locked".  If another process (or the
same process on a different path) tries to read or write within the locked byte
range, the call will block until the reading process performs a write(),
another read() or _ss_lock(0).
 An explicit lock can be set with _ss_lock(len) which will lock the bytes from
the current file position for "len" bytes.  If len == ~0, then the entire file
is locked.  A program can limit the time it's blocked waiting for the lock by
calling _ss_tiks(val) where "val" is the maximum number of ticks to wait for
the lock before returning E_LOCK.  E_DEADLK is returned when two locks by the
same or different processes would result in a "deadly-embrace".

 That was the one paragraph dissertation on OS-9/RBF record locking.  There is
also a special EOF lock.  If anyone is interested, I can give a one paragraph
dissertation on that, too!

#: 20688 S12/OS9/68000 (OSK)
    07-Jan-95  23:52:48
Sb: #unix functions
Fm: LARRY OLSON 72227,3467
To: Bob van der Poel 76510,2203 (X)


   Bob,
       Have you had a chance to try mm2hp30 yet ?

   Just wondering if found any problems, that -f option should get around
   the problem of the program not being able to determine the screen type
   on its own, for now.

    hint: most pictures come out best with
          a brightness value around -v=45 to -v=65

     Is there any option available for your laser that you would like
   to see in the program ?


There is 1 Reply.

#: 20692 S12/OS9/68000 (OSK)
    08-Jan-95  16:56:04
Sb: #20688-#unix functions
Fm: Bud Hamblen 72466,256
To: LARRY OLSON 72227,3467 (X)

Bob,

Here's what "man flock" produced on my LINUX box:

    FLOCK(2)            Linux Programmer's Manual                FLOCK(2)


    NAME
           flock - apply or remove an advisory lock on an open file

    SYNOPSIS
           #include <sys/file.h>

           int flock(int fd, int operation)

    DESCRIPTION
           Apply  or  remove  an  advisory lock on an open file.  The
           file is specified  by  fd.   Valid  operations  are  given
           below:


                  LOCK_SH   Shared lock.  More than one process may
                            hold a shared lock for a given file at a
                            given time.

                  LOCK_EX   Exclusive  lock.   Only  one  process may
                            hold an exclusive lock for a  given  file
                            at a given time.

                  LOCK_UN   Unlock.

                  LOCK_NB   Don't  block when locking.  May be speci-
                            fied (by or'ing) along with  one  of  the
                            other operations.


           A  single file may not simultaneously have both shared and
           exclusive locks.

           A file is locked (i.e., the inode), not the file descrip-
           tor.   So,  dup(2)  and fork(2) do  not  create multiple
           instances of a lock.

    RETURN VALUE
           On success, zero is returned.  On error, -1  is returned,
           and errno is set appropriately.

    ERRORS
           EWOULDBLOCK
                  The   file  is  locked  and  the  LOCK_NB flag  was
                  selected.

    NOTES
           Under Linux, flock is implemented  as  a  call  to  fcntl.
           Please see fcntl(2) for more details on errors.

    SEE ALSO
           open(2), close(2), dup(2), execve(2), fcntl(2), fork(2),

    Linux 0.99.11                22 July 19

I guess _ss_lock() for Mircoware C 3.2 or _os_ss_lock() for Ultra C would be
the nearest OS-9/68000 equivalnets.

"Man lockf" produced nothing.

Bud

There is 1 Reply.

#: 20696 S12/OS9/68000 (OSK)
    09-Jan-95  20:58:19
Sb: #20692-unix functions
Fm: Bob van der Poel 76510,2203
To: Bud Hamblen 72466,256

Thanks, Bud, for the man page. I _think_ that _ss_lock() may be used to
impliment a similar function under os9. But, I really don't understand what the
various flock options do...

#: 20704 S12/OS9/68000 (OSK)
    13-Jan-95  15:15:57
Sb: #module permissions
Fm: Bob van der Poel 76510,2203
To: all

I'm a bit confused.... I have my osk system set up to let other family members
login from a remote terminal. For some reason, they can't use VED, even though
it has its permissions set properly. An attr of ved shows

     --e--ewr

and ident shows

    Owner:           0.0
    Permission:      $555        -----e-r-e-r-e-r
    ...

If superuser loads VED into memory, all works fine. But, if user 3.3 or 4.4
types "ved foo" at the keyboard they receive an error 164. I tired setting
public read and write attributes, but it made no difference. Also, I checked
the directory attributes--they give public access (proven by setting the read
bit and then doing an ident, which works).

I have some other modules with similar attributes and they work fine. Also, I'm
sure that this used to work!!!


There is 1 Reply.

#: 20708 S12/OS9/68000 (OSK)
    14-Jan-95  11:55:19
Sb: #20704-module permissions
Fm: Kim Kempf 71161,3221
To: Bob van der Poel 76510,2203

 >> I have some other modules with similar attributes and they work fine. Also,
I'm sure that this used to work!!! <<

 Be sure the file attributes match the module attrbutes.  In this case, dir -e
should show the file being owned by 0.0, use chown to change if required.

Press <CR> !>