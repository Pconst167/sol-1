             Some Thoughts on the Development of Personal Computers
                      by Duane Bristow, Computer Consultant
                       The Helping Hand BBS (606) 387-4002
                             Albany, Kentucky  42602
                                  June 14, 1991

        Personal Computers were first available on the mass market in 
        1977.  At that time there were basically three brands widely 
        available, Apple, Tandy, and Commodore.  I bought a TRS-80 model 
        I in the fall of that year and began computer consulting the 
        next spring.  Things have changed a lot in the last 14 years.  
        These are a few observations on some of the developments and 
        trends.

        In the early 1980s a man would come to me and say, "I have a 
        problem in my business.  It concerns efficiency in office 
        procedures.  I am covered up in writing, bookkeeping, billing, 
        paying, keeping track of customers, etc.  They said you have 
        been able to show other businesses how to use computers to solve 
        these problems.  Please show me."

        I would then analyse his business talking not only to him but 
        primarily to his secretary and/or bookkeeper(s) to find just how 
        his business ran, what the problems were, and what was unique 
        about his business (something almost always was).  I would plan 
        hardware and develop software designed to work efficiently to 
        solve his problems and to grow with his business for the next 
        five or (wistfully) ten years.  I would install the system, 
        train his employees and support the system with further 
        modifications, hardware and software maintenance, additional 
        training, etc. as needed.  This worked well and was always 
        successful. 

        Now a man comes to me and says, "I have a problem in my 
        business.  I heard computerizing would solve my problem, so I 
        read the computer magazines, talked to the computer literacy 
        instructor at the high school, talked to a number of computer 
        salesmen, and asked a computer whiz I know who has three 
        computers and unbelievable games on them (He has the highest 
        score in town on "Shoot The Martians").  All these people told 
        me that my problems would be solved if I got a 386 with 4 meg 
        RAM, 40 meg. hard drive, VGA, laser printer, Windows, Lotus 123, 
        Dbase and Wordperfect."

        "I bought all these, spent months reading the manuals and 
        installing it all, and got the computer whiz to come by when 
        school was out and show my employees how to use it all.   And, 
        you know, I still have the problem in my business.  As a matter 
        of fact my employees spend so much time using and learning the 
        new computer system that I've had to hire an additional employee 
        to make sure we get the billing out each month.  Now, they say 
        you have solved business problems for others with computers, so 
        I am willing to pay you to show me how to use this stuff to 
        solve my problems."

        I explain to this man that I was able to solve other's problems 
        by an analysis of their business and by developing or installing 
        software specifically for that purpose, that this will not use 
        all the memory, Windows, 123, and Dbase that he has already 
        installed, that I use cheaper hardware and charge more for 
        systems analysis and custom programming and that therefore 
        solving his problems will require an additional investment of 
        $2,000 or more and that probably $2,000 of his original 
        investment will be useless to him.  He usually concludes at this 
        point that I must not know much about computers.  He ends up 
        using parts of whatever of his software he can and decides that 
        computers can't really do as much as he had been led to believe 
        after all. 
         
        This problem arises primarily because of the way the computer 
        industry has marketed computers and software in the last 14 
        years.  In the first stage the industry said, "Buy a computer!"  
        John Q. Public said, "Why?" and the industry said, "Because they 
        can do anything you tell them."  The problem was JQP didn't know 
        what he wanted them to do and he didn't know how to tell them to 
        do it anyway.  So a couple of real smart guys wrote Visicalc, 
        the first spreadsheet program for microcomputers.  JQP found 
        that for some things that he was already doing on paper 
        spreadsheets, a computer with VC was much more efficient. If he 
        knew how to design a spreadsheet on paper, he could do the same 
        thing on the computer and increase productivity immensely.  He 
        was programming a computer but he didn't know that.  

        The industry marketing men saw what had happened and changed 
        their tactic.  They now said, "Buy a computer so you can run 
        VC."  And a number of accountants and other number crunchers did 
        just that.  As a matter of fact some of the more savvy salesmen 
        began giving away pirated copies of VC with each computer sale.  
        Their profit was on hardware, not software.  Many salesmen who 
        had never used a paper spreadsheet much less VC told people that 
        to do anything now they just needed a computer and VC.  When 
        asked what type of thing they might do the computer salesman 
        replied that JQP could now balance his checkbook with a 
        computer.  Never mind that if JQP didn't know how to balance a 
        checkbook the computer wasn't going to help and if he did he 
        certainly didn't need a computer for that.

        The next development of interest was the discovery that if one 
        knew how to type he could increase productivity immensely with a 
        word processing program.  This then developed much the same way
        as the VC phenomena.   

        From the beginning the computer marketers and the media had 
        envisioned a computer in every household.  Problem was that, so 
        far, computers were selling primarily to accountants and 
        typists.  Apple computer decided that the thing standing in the 
        way of more computer sales was the fact that not enough people 
        knew how to use a spreadsheet or to type.  Hence the GUI 
        (Graphical Computer Interface) and the mouse.  Theoretically, we 
        could throw away the keyboard now and everyone could own a 
        computer.  Of course, since this didn't teach one to do 
        accounting or use a spreadsheet and since you couldn't write a 
        document with a mouse there was no reason to buy a computer, but 
        Apple overlooked that.  As a matter of fact, after the 
        introduction of the Macintosh, Apple probably would have gone 
        out of business if not for one further development. 

        Someone, (I don't know who but somebody does) came up with the 
        idea of using the Macintosh for Desktop Publishing, a quantum 
        extension of word processing which was ideally suited to a GUI 
        and a mouse.  (Course, it also required a keyboard but that was 
        OK.)  This sold so many Macs that Microsoft and IBM took notice 
        and decided that a GUI must be the way to go.

        Others decided that part of the problem with computer sales was 
        that computers require programs and JQP could not or was afraid 
        to program.  So they wrote applications that would help JQP to 
        write his own programs but would not let him know that he was 
        doing so.  These took the form of Dbase type programs and a 
        tremendous increase in the size and complexity of VC which by 
        now was owned by Lotus and was called 123.  The thing they 
        didn't tell JQP was that by trying to force a computer to do 
        something with such a general purpose tool as Dbase or 123, he 
        was sacrificing efficiency and that if the application became 
        very complex it could be programmed and would work much more 
        efficiently and easily in a true programming language like 
        pascal, or C, or compiled basic or whatever.  They also didn't 
        tell JQP that a complex application would be just as hard to 
        program in Dbase or 123 as in a true language even though it 
        would not work nearly as well. I knew a hospital controller who 
        tried to run a hospital billing and accounting system with 123.  
        You can drill a hole with a hammer and nails too, but a drill is 
        so much more efficient. 

        From the very beginning the problem was that computers could 
        perform miracles in efficiency but only the systems analysts and 
        the programmers knew how.  The marketing planners and the 
        salesmen didn't, so they misled JQP.  Those who most need 
        computers, mostly businessmen, are not analysts or programmers 
        and should not be.  There were never enough programmers and 
        analysts to sell the number of computers the industry wanted to 
        sell.  Therefore, efficiency was sacrificed by use of general 
        purpose programs.  Although these usually did not do the job 
        well (sometimes not at all), they were cheaper than efficient 
        programs and they were available.  The hoax was that JQP was 
        never told that use of these programs required a sacrifice of 
        efficiency but was simply led to believe that the inadequacies 
        of these programs was intrinsic to computers. 

        Another hoax occurred as the price of computer hardware and 
        software fell.  It is necessary to charge $3,000 to $5,000 for a 
        computer system to justify enough profit to support the 
        industry.  At first, the price could be maintained by simply 
        selling more powerful and faster hardware and software to JQP 
        for the same price that he was used to paying.  After a while 
        though, it became evident that the hardware and software was 
        already as fast as JQP could ever want to perform most 
        applications.  The solution was to change the operating system 
        to OS2 and to GUIs such as Windows that were inefficient in 
        speed and in use of memory.  By convincing the public that these 
        were necessary it became possible to sell even faster machines 
        with increased memory, etc.

        These are my nominations for most significant developments in 
        microcomputers over the last 14 years with my designation of 
        each as a right turn or a wrong turn for the industry.

        The microcomputer               Right turn
        Visicalc                        Right turn
        Lotus 123                       Wrong turn
        Dbase                           Wrong turn
        Hard disk storage               Right turn
        MSDOS                           Right turn but a UNIX based OS 
                                             would have been better.
        Word processors                 Right turn
        GUI                             Wrong turn
        Color Monitor & VGA             Right turn

        Hayes standard 
        high speed modems               Right turn
        communications software
        Compuserve and BBSes

        Quickbasic, C, Pascal           Right turn

        The shareware concept           Right turn
        Desktop publishing              Right turn
        Laser printers                  Right turn

        Graphics applications
        scanners, and mouses            Right turn

        Networking                      Right turn

        CDROM drives and applications   Right turn

        Simulations                     Right turn

        Sound applications              Right turn

