€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€
€≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤€
€≤±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±≤€
€≤±∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞±≤€
€≤±∞                                                                      ∞±≤€
€≤±∞ €   € €€€€€  €€€  €€€€€  €€€  €€€€     €€€€    €   €     €      €€€€ ∞±≤€
€≤±∞ €   € €     €   €   €   €   € €  €     €   €  € €  €     €     €     ∞±≤€
€≤±∞ €   € €€€€  €       €   €   € €€€      €€€€  €   € €     €      €€€  ∞±≤€
€≤±∞  € €  €     €   €   €   €   € €  €     €   € €€€€€ €     €         € ∞±≤€
€≤±∞   €   €€€€€  €€€    €    €€€  €   €    €€€€  €   € €€€€€ €€€€€ €€€€  ∞±≤€
€≤±∞                                                                      ∞±≤€
€≤±∞                           €€€€€€€€€€€€€€                             ∞±≤€
€≤±∞                               €    €                                 ∞±≤€
€≤±∞                               €    €                                 ∞±≤€
€≤±∞                               €    €                                 ∞±≤€
€≤±∞                           €€€€€€€€€€€€€€                             ∞±≤€
€≤±∞                                                                      ∞±≤€
€≤±∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞±≤€
€≤±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±≤€
€≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤≤€
€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€


	Hi everybody, Tumblin is back with a new release, Vector Balls II.
The purpose of this release is to help out all those people who tried to
compile the original Vector Balls program (VECTBALL.CPP) without any luck.

	Vector Balls II features:

	- new binary object format that you can load in from disk
	- comes with Dot Edit (coded by Tumblin) to create vector dot objects
	- uses 32-bit fixed point math routines
	- includes some palette fading routines
	- comes with PCX2CSRC.EXE so you can port your PCX pictures into it
	- includes ALL source code, headers, obj's, and graphics (need nothing
		else to compile (except for a C++ compiler :-)

€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€

	Just for your information, this stuff was developed using:
A 486-DX 33MHz computer, Turbo C++ v3.0, TASM v3.1, XLIB v6.1, Deluxe Paint
Animation, Pov Ray v2.2, and Dot Edit (our own utility).


	Alright, here is how to get this thing compiled and running:

1. Go into the Turbo C++ IDE (I am assuming you are using a Borland C++
	 compiler) and load in the vectbal2.prj project.
2. When you get this far you should make sure that you are using the large
	 memory model (try doing an ALT [O]ptions, [C]ompiler, [C]ode generation,
	 and then select the large memory model).
3. Next you have to make sure that you have the correct directories setup.
	 On my system here is what I have done:
	 My copy of Turbo C++ is in the c:\tc directory, so what I did was create
	 a directory called c:\tc\xlib61 and put all the XLIB 6.1 files in there.
	 Then you must make sure that your directories in your IDE take this into
	 account.  Use the Alt [O]ptions, [D]irectory keys.
	 On my system I have them set to these:
		 Include directories:
			 c:\TC\INCLUDE; C:\TC\XLIB61
		 Library directories:
			 c:\TC\LIB; C:\TC\XLIB61
	 If you are using the Borland C++ 3.1 compiler, for example, then you
	 might have to change the TC above to BC, and the rest should be the same
	 (hopefully :-).

	 This makes it very convenient for me to compile and maintain the stuff I
	 make with XLIB.  For example I can just simply use #include <xlib_all.h>
	 at the beginning of my C++ program and don't have to worry about it.
	 Oh, by the way, I highly recommend the XLIB graphics library to people
	 who are starting out.  It is this library that I have been doing most of
	 my coding with and find it very useful.

4. The files that should be in your project file are:
	 vectbal2.cpp - the main program
	 fixedl.asm   - the 32-bit fixed point multiply and divide functions
	 xlib61l.lib  - XLIB v6.1 large memory model library file.
5. The files you should have in your current directory (which ever one you
	 want to compile Vector Balls II in) are:
	 vectbal2.cpp - the main program
	 fixedl.asm   - the 32-bit fixed point multiply and divide functions
	 vectbal2.h   - include file that contains the bitmap and palette data
6. Then hit F9 (Make) and watch the program compile and link.
7. You should be able to run it from your compiler with ALT [R]un, and [R]un.
	 Usually I just drop to DOS and test it there because I usually spit out
	 text for debugging purposes, but you don't have to if you don't want to.


	That should get you started.  But if not, just email me at:
m9cl@jupiter.sun.csd.unb.ca
and I will get back to you as soon as possible.


€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€

Greetings from Tumblin go to:

Rush, Lord Feff, and Gyro of Bodies In Motion.
Raptor and Nut Cracker of Imortal Syndicate (hope to meet you 2 some day)
Accidental,
The Emulator Institute,
Night Vision,
Starry Knight Productions,
Dare Devil, C.C.Catch, and Ryan Cramer of Renaissance (love your music!)
Gore, Purple Motion, Skaven, and Pixel of the Future Crew,
Mr. H, and Vogue of Triton (nice tracker!)
Necros - Your music has been very inspiring, hope to meet you in person!)
Fear of Mental Design - hope to meet you at Asm '95! Sent me those disks yet?
The IRC croud,

And finally, to all those people who left me email (and that guy from
Iillinois who called me long distance) to tell me how much they liked the
original Vector Balls release.  Although it wasn't much of a program, I got
a very good response from it.  Well guys, let me know how much you like
this one!!!

Lets see if we can all make it to the NAID Party, it should be a blast!!!

€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€

What does Bodies In Motion have planned for the future?

Well, let me try to answer that question.  We have the following projects
on the go (we are not sure when they will be released, but it would be safe
to say that we will get most of them out during our Christmas break from
university) :

- VED v0.4 beta with the source code.  The object files are still in ASCII
	text format, so it still will only display them.  The main purpose of this
	release will be to give everybody some source code for doing light-source
	shaded polygon objects.  I guess the source code right now prints out on
	25+ pages!  (this one is late getting released)
- A texture mapping tutorial by Tumblin, using his own algorithms.
- Joseph Mega-mix which is an MTM tune composed by Rush for a play he did a
	few months back. (this one is late too)
- VED v1.0, (probably a shareware release, will have to see).  The new
	version of our light source shaded polygon vector editor.  This one WILL
	let you create objects on the screen without any need for graph paper.  
	(this one is almost ready)
- A music disk with songs from Rush, and the rest of Bodies In Motion (so
	far we have two songs ready, more to come)
- Astron BBS intro.  This will be our first little intro for a BBS in our
	home town.  (About half done)
- Free Fall, our first Mega Demo. (Will try for a release at NAID)

So as you can see, we've been pretty busy.  (With everything else but demos
it seams :-)

€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€

I hope that you all have a very merry Christmas and happy new year!


Tumblin / Bodies In Motion  (aka Terry Sznober)
