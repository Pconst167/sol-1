Newsgroups: comp.sys.amiga.misc
Path: senator-bedfellow.mit.edu!bloom-beacon.mit.edu!news.kei.com!sol.ctr.columbia.edu!xlink.net!fauern!lrz-muenchen.de!sun4!uf341ea
From: uf341ea@sun4.LRZ-Muenchen.DE (Kajetan Hinner)
Subject: Amiga-FAQ (Biweekly posting)
Message-ID: <uf341ea.749154108@sun4>
Summary: Frequently asked questions concerning the Amiga 
Keywords: FAQ
Sender: news@news.lrz-muenchen.de (Mr. News)
Organization: Leibniz-Rechenzentrum, Muenchen (Germany)
Date: Mon, 27 Sep 1993 18:21:48 GMT
Lines: 1300



	Frequently asked questions concerning the Amiga.
	------------------------------------------------

Below you find a list of frequently asked questions. It should especially
be for new users but perhaps experienced users may find something too.

It is in Ascii format to be easily read by everyone. It is also available
in AmigaGuide and Dvi format as part of the Amiga-FAQ archive. (File
text/docs/AmigaFAQxxxxxx.lha on any Aminet site, where xxxxxx is the date
of the last version.)

Please note, that there is a list of keywords at the end, if you don't find
something. If this still doesn't help: Email me, probably I can include an
answer into the FAQ.

Suggestions, contributions, critics and beer bottles are very welcome.
Send it to:

	    Jochen Wiedmann
	    Am Eisteich 9
      72555 Metzingen (Germany)
	    Tel. 07123 / 14881

	    Internet: wiedmann@mailserv.zdv.uni-tuebingen.de

===========================(Cut here)=========================================
Amiga-FAQ
*********

   This document lists some frequently asked questions and trys to give
answers.  Is intention is to help new users and to reduce the amount of
news that most experienced users don't like to read anymore.

   Please notice that there are many questions that aren't answered yet,
even more: Whole sections that remain empty! I feel that I cannot give
satisfying answers. So it's your turn: Fill the gaps and tell me what i
should include into this document!


Disclaimer

1. Hardware
  1. What are the 68EC020 and the 68EC030?
  2. What's a FPU?

2. The Operating System
  1. Can I use another Kickstart than the builtin?

3. Programming
  1. What documentation do I need to become an Amiga programmer?
  2. Where do I get the Amiga includes?
  3. How do I become a developer?
  4. What compilers (assemblers) are there?

4. Applications
  1. Text Editors
  2. What word processors are there?
  3. Desktop Publishing
  4. What is TeX and where can I get it?
  5. Are there any Postscript interpreters?

5. How about Graphics?
  1. What are chunky and planar displays?
  2. What is doublebuffering?
  3. What monitors will work on my Amiga 1200/4000?
  4. How do I switch between PAL and NTSC?

6. Emulators
  1. Can I run Unix on my Amiga?

7. Miscellaneous
  1. What are files ending with @dots{}?
  2. Is there a Stacker-like utility to pack my hard drive?

8. Where and how do I get Software?
  1. Files and databases on freely distributable software
  2. Getting files from a FTP server
  3. Getting files from a Mail server
  4. The Fish disks
  5. How do I Read and write MS-Dos disks?
  6. How do I split large files?

The Amiga-FAQ archive

Contributions

Credits

Index



Disclaimer
**********

   This document is

     Copyright (C)	Jochen Wiedmann
     			Am Eisteich 9
     		  72555 Metzingen (Germany)
     			Tel. 07123 / 14881
     			Internet: wiedmann@mailserv.zdv.uni-tuebingen.de

   Permission is granted to make and distribute verbatim and modified
copies of this document following the terms of the "GNU General Public
License" provided the copyright notice and this permission notice are
preserved on all copies.

   The author gives *absolutely no* warranty that the answers given
here are correct or usable. Many of them were contributed by other users
and I cannot even make marginal checks. If you think that something
should be changed, please tell me. Suggestions, contributions, new
answers, critics, flames (oh, how I like this `nil:' :-) are rather
welcome.  See Contributions.

1. Hardware
***********

   This chapter contains questions concerning the Amiga-Hardware.

1.1. What are the 68EC020 and the 68EC030?
==========================================

   Motorola, the company producing the 680x0 family offers crippled
versions of their processors. They are a little bit cheaper than the
originals, that's why Commodore decided to build the 68EC020 into the
A1200 and the 68EC030 into the A4000/030.

   The difference between the 68020 and the 68EC020 is that the latter
can address just 16Mb of memory. That's why the A1200 cannot have more
that 10 Mb RAM. In most cases you will not notice the difference.

   This is not the case for the 68EC030: Many owners will notice that
the 68030 has a MMU and the 68EC030 doesn't have. There are some
important programs depending on a MMU, for example Enforcer (a
debugging utility), GigaMem (a program to emulate virtual memory) or
all current Unix versions (see Unix). Other Amigas than the A4000 and
the A3000 need an additional processor card to run these.

1.2. What's a FPU?
==================

   The first 680x0 processors (upto 68030) could process integers only.
Floating point operations had to be emulated by the software. A FPU is a
chip (or part of a chip) that can process floating point operations, a
mathematical coprocessor.

   One separates three FPU types on the Amiga: The 68881, 68882 and the
68040's internal FPU. The 68882 is up to 1.5 times faster than the
68881, because it is splitted in two parts: A conversion unit (the
FPU's are using an 80 bit format internally) and the arithmetic unit.
The 68040's internal FPU adds a pipeline, but misses the trigonometric
instructions of the others. These are still emulated by the software,
68040.library for example.

   Special programs (Raytracing, DTP, Mathematics, TeX) are offered in a
special coprocessor version which are up to 50 times faster than the
original versions.

   Michael Kaiser (kaiser@ira.uka.de)

2. The Operating System
***********************

   This chapter handles questions concerning the operating system,
Kickstart as well as the Workbench.

2.1. Can I use another Kickstart than the builtin?
==================================================

   First let's drop some words on the Kickstart's Copyright: This
belongs to Commodore, you *must* not use Kickstarts, without the right
to do it!  Especially it isn't allowed to make an image of anyone
else's Kickstart and run this on your own Amiga. (I even doubt that it
is allowed to to this on your own Amigas, if you have more than one.)

   But of course it is possible and allowed for some people, developers
for example.  There are two different ways, a hardware solution and a
software solution.  The former is to buy a card which can hold two or
more Kickstart ROMS and allows to select between when the System is
booting.

   The software solution needs a program (softkicker) and an image of
the ROM. The softkicker allocates RAM, loads the ROM image into the
allocated memory and reboots. Of course you have less RAM after the
Reboot: 256Kb when running Kickstart 1.2 or 1.3 and 512Kb for Kickstart
2.0 or higher.

   There are different Softkickers, some of them needing a MMU (see
68EC0xx). A nearly perfect solution seems to be `kick13' (Aminet,
directory `util/misc') because it has the ROM image included. (With
Commodores agreement!) For newer Kickstarts I recommend SKick 3.43
(Aminet, directory `os20/util') because it doesn't need a MMU and
supports many different Kickstarts. It is rather easy to create the ROM
image using the following program:

         #include <stdio.h>
     
         #define kickorig 0xf80000	/*  0xfc0000 für Kick 1.2 und 1.3   */
         #define kicklen  0x080000	/*  0x040000 für Kick 1.2 und 1.3   */
     
         void main(int argc, char*argv[])
           { FILE *fh;
     
     	if ((fh = fopen("kickstart.file", "w"))  !=  NULL)
     	  { result = fwrite(kickorig, kicklen, 1, fh);
     	  }
     	fclose(fh);
           }

3. Programming
**************

   This chapter handles problems arising for programmers only.

3.1. What documentation do I need to become an Amiga programmer?
================================================================

   The best information available are the RKM's (ROM Kernel Manuals),
3rd edition, by Commodore, published by Addison-Wesley:
     The Amiga ROM Kernel Manual:  Libraries
     The Amiga ROM Kernel Manual:  Devices
     The Amiga ROM Kernel Manual:  Includes and Autodocs
     The Amiga Hardware Reference Manual
     The Amiga User Interface Style Guide

Especially the RKM: Libraries is a must. The RKM: Includes and Autodocs
isn't that much worth: Better get the same stuff on disk instead to
have it online.  See Includes.

   AmigaDOS isn't included in these books. The Autodocs give much
information, but to go deeper you probably need
     The AmigaDOS Manual, 3rd Edition, by Commodore
   published by Bantam Books.

3.2. Where do I get the Amiga includes?
=======================================

   The only legal way to get the includes and autodocs (and you *should*
get them, they are *very* useful!) is to buy the NDUK (Native developers
update kit). Your local Commodore branch should offer this. In the USA
this is
         Commodore Business Machines, Inc.
         Department C
         1200 Wilson Drive
         West Chester, PA 19380

In Germany this is delegated to
         Fa. Hirsch & Wolf
         Mittelstr. 33
         56564 Neuwied
         Tel. 02631/83990
   They cost about 25$ and this seems to me to be a fair price.

   Unfortunately there is only the NDUK for Kickstart 2.0. People say
that 3.0 will come but nobody knows when. The only legal possibilities
to get at least the 3.0 includes (not the autodocs, sigh!) is becoming
a developer (See Developer, but you probably don't want to spend that
much money) or buying or updating a compiler. A good and cheap offer is
`Dice' for about 50$. See Compilers.

3.3. How do I become a developer?
=================================

   You need the ADSP (Amiga Developer Support Program) documents. To
get this write a letter to your local Commodore branch asking for these
documents.  Everything else should be explained there. The german
address is
         Commodore
         Lyoner Strasse 38
         60528 Frankfurt

3.4. What compilers (assemblers) are there?
===========================================

   There is a lot of programming languages on the Amiga, commercial as
well as freely distributable. I will enumerate only those that I know
or which seem it worth to me otherwise.

*Assembler*
     All C-compilers have an Assembler included. Freely distributable
     are A68K and PhxAss (directory `dev/asm' on Aminet or Fish disks
     521 and 906)

*C*
*C++*
     Freely distributable C-compilers are `gcc' (which has its own
     directory `dev/gcc' on Aminet) and the evaluation version of
     `Dice' (for example per FTP from `ftp.uni-paderborn.de', directory
     `/news/comp.binaries.amiga/volume91/languages' or on Fish disk
     491).  `Dice' is Shareware, however, but registering will cost
     only 50$.  The advantage of `gcc' is that you find `gcc' versions
     all over the world and on all computer systems. Another advantage
     is that C++ is included into `gcc'! But it is slow and needs 4Mb
     of RAM or more. `Dice' is very fast. Both compilers seem to be
     reliable.

     Commercial C compilers are `Aztec-C' and `SAS-C'. I cannot
     recommend `Aztec-C', because the compiler doesn't seem to get
     further development. It should be remarked that the commercial
     compilers have especially wonderful debugging utilities (Source
     level debuggers!) that the others are missing. `Dice' will become
     commercial soon too and probably will have debugging utilities
     then. SAS has announced a new release which will have C++ included.

     Comeau C++ is a cross compiler creating C source. That wouldn't be
     a problem, SAS will do the same. But Comeau C++ doesn't have a C
     compiler included.  You need SAS-C, Aztec-C or Dice additionally.
     But it supports the newest standards. And like gcc it runs on many
     platforms. Maxxon C++ is offered in Germany. I cannot say anything
     on it. Both compilers are commercial.  Comeaus address is:
              Comeau computing
              91-34, 120th Street
              Richmond Hill, NY, 11418-3214
              USA
          
              EMail: Greg Comeau, comeau@bix.com

*Forth*
     JForth is said to be an excellent Amiga port of Forth. Among its
     advantages are object oriented extensions, full Amiga interface
     and an application generator. It is available from:
              Delta Research
              P.O. Box 151051
              San Rafael, CA   94915-1051
          
              Phone: (415) 453-4320
              EMail: Phil Burk, phil@ntg.com
          	   Mike Haas, haas@starnine.com

*Fortran*
     (Sigh! Still people who need it :-<) Freely distributable are BCF
     (Fish disk 470) and f2c, a Fortran to C converter (Aminet,
     directory `/dev/misc'). A commercial compiler is offered from
     ABSoft. All these are Fortran 77 compilers, I don't know any
     Fortran 90 compiler on the Amiga.

*Lisp*
     Freely distributable Lisp compilers is XLisp (Fish disk 181) and
     OakLisp (Fish disk 530).

*Modula 2*
     M2Amiga is offered in Europe, Benchmark Modula-2 in the U.S. Both
     are said to be very good, have a powerful souurce-level-debugger,
     a large library.  Especially M2Amiga has great support by a german
     user-group (AMOK) which for example offers own PD disks.

     M2Amiga is offered by:
              A+L AG
              Daderiz 61
              2540 Grenchen
              Schweiz
          
              Tel.: +41/65/52 03-11
              Fax:              -79

     Benchmark Modula-2 is available from:
              Armadillo Computing
              5225 Marymount Drive
              Austin, Texas 78723
              USA
          
              Phone/FAX: 512/926-0360.
              EMail: Jim Olinger, jolinger@bix.com

*Oberon*
     AmigaOberon is offered by A+L too. It is integrated into a full
     developers environment and has a large library of modules. Library
     linker and source level debugger are available. The AMOK user goup
     supports AmiOberon as well as M2Amiga.

*Pascal*
     There is a PD-compiler called PCQ (Directory `dev/lang' on Aminet
     or Fish disk 511). It doesn't support all of Pascal and major
     features are missing. P2C, a pascal to C converter is on disk 341
     Additionally there are two commercial compilers called HiSoft
     Pascal and KickPascal. HiSoft Pascal claims to be Turbo compatible
     up to 5.0 and has a source level debugger included.

4. Applications
***************

   This chapter offers informations about major Applications.

4.1. Text Editors
=================

   Text Editors are programs allowing to enter and edit unformatted
text.  Generally, this means text that is meant to be manipulated by
machine, rather than human. Programmers use these to enter the text for
compilers.  Since UNIX machines don't typically have word processors,
most text processing starts with a text editor, then is filtered
through a page layout system (TeX, for example) to produce attractive
paper results.

*Commercial Products*
     CygnusEd Professional and TurboText seem to be the main contenders
     in the professional realm. The Fred Fish disks contain dozens of
     other shareware text editors. A demo version of TurboText is on
     Fish disk 445.  A very old demo of CygnusEd is on Fish disk 95
     (testament to its lasting-power). In the following some freely
     distributable editors will be discussed.

*Emacs*
     Gnu Emacs (the "G" is not silent) comes from Unix and is probably
     the king of editors - it's huge (about 1 Megabyte), feature-packed
     (it does windows and even contains a game!) and extensible (if you
     know lisp you can write new emacs functions and bind them to any
     key combination).	On the other hand, it may be too huge, its
     feature-ladenness is imposing, and its extensibility often means
     you can't use someone else's emacs configuration. Source: Aminet
     (directory `util/gnu').

*Vi*
     The leaner, less configurable, non-extensible cousin to gnu emacs
     is vi (pronounced "vee eye"). Unix people like vi especially
     because you find it on *any* Unix machine. What you choose is
     personal preference, and will mark you for life. Vim is a good vi
     for the amiga, and is on Fish disk 591 or in the `util/gnu'
     directory of Aminet.

*DME*
     Many Amiga programmers like DME. It's fast, fully configurable;
     menus may be created and any key may be mapped. It's much easier
     to learn DME than than Emacs or Vi. There are three different
     versions: AmokEd, DME and XDME. It's a matter of opinion which you
     prefer. (Oberon and Modula programmers like AmokEd because it's
     written in Oberon and supports M2Amiga and AmiOberon error
     messages, C programmers like DME or XDME.) Sources: Aminet
     (directory `util/edit'), Fish disk 776 (XDME) and 749 (AmokEd),
     AMOK 90.

4.2. What word processors are there?
====================================

   A word processor is the typical application for writing notes,
letters or reports on a computer. Unless you prepare newsletters on a
weekly basis, your word procesor is probably your workhorse program.
Thus choosing one you are comfortable with determines how comfortable
you are with your computer. Word processors can offer a variety of
features, and many can approach the sophistication required for Desktop
Publishing (see DTP) but no one uses them for programming, for which
text editors are more suited.

   One distinguishes between Wysiwyg programs (What you see is what you
get) and page layout languages. Wysiwyg programs should be fast,
comfortable and easy to use. Most people prefer them. The alternative
is an approach that works similar to compilers. You feed text files to
a a program that produces the layout which may be previewed on screen
or printed. LaTeX takes this approach. See TeX. Lout is another such
system which seems smaller, easier to learn and has full documentation
included, but it is nonstandard.  Lout produces Postscript output. (I
don't know if this is an advantage or disadvantage. ;-) See Postscript.
Both programs are freely distributable.

   There are a lot of wysiwyg programs, but only commercial products:
Final Copy II, Wordworth, Word Perfect, AmiWrite, Beckertext II, Maxon
Word and many others. I don't dare to recommend any. ALl I can say is:
Give yourself time to make a selection.

4.3. Desktop Publishing
=======================

   These programs offer features lacking in word processors, usually
tailored to flexible arrangement of text, but often don't provide all of
the text manipulation that a good word processor provides. The best
desktop publishing programs strive to provide the features of both,
just as the best word processors strive to provide the features of
desktop publishing programs. Microsoft Word (Mac, PC) is a good example
of a word processing program that offers many page layout feature.
Framemaker (UNIX, Macintosh, DOS, etc.) is an example of a desktop
publishing system that offers most needed word processing functions. As
yet, no Amiga program has bridged the gap, though the main word
processors are coming close. (On the other hand, even many
sophisticated programs don't support typesetting mathematics, tables,
producing bibliographies, indexes, or cross-references. The page layout
languages do, and programs like Frame are improving their support of
such features.) Unless you need to prepare fancy newsletters or
promotional literature, a word processing program is probably enough.
See Word Processors.

   There are not yet any freely distributable wysiwyg desktop publishing
systems. Commercial products are ProPage and PageStream. They have been
playing leapfrog for the past few years. It appears that PageStream 3.0
is about to leap ahead. A more detailed description of these products
and their differences is welcome. Both programs' list prices are $299.
Student discounts are available (approx 40% discount.)

4.4. What is TeX and where can I get it?
========================================

   TeX is a very powerful wordprocessing system. It can display
mathematical formulas or complex tables as well as function graphs,
creates indices, contents and many other things. Its greatest advantage
is that it is freely distributable (TeX, not the previewers and the
printer drivers!) and that you find TeX all over the world on every
computer family. Its greatest disadvantage is that it isn't very handy
(works similar to a compiler) and it isn't wysiwyg. But many people
like it. (BTW: This document is written using TeX. 8-) See Word
Processors.

   There are two major implementations on the Amiga. The first one,
Amiga-TeX, from Thomas Rockicki and Radical Eye software is commercial.
It is said to be excellent and his owners seem to be very satisfied.
But it costs at least 200$.

   I recommend PasTeX, a freely distributable version. People seem to
have problems installing PasTeX, especially the font loading and
generation (It's a quite complex program.) but I did not here anyone
upset once it was installed. (A friend with knowledge of TeX helps
immensely.) A few words should be said what you need:
   * 5 disks containing the TeX-compiler itself

   * 2 disks containing MetaFont

   * Nothing more Many people ask for fonts. They are included in the
MetaFont-package and can get compiled by you. All you need to do is
setting up your TeX-system in the right way which is described in the
documentation. Please note that the PasTeX disks are compressed using
the program Zoom. (see Endings) Sources: FTP at `ftp.uni-passau.de',
directory `/pub/amiga/tex/PasTeX1.3'.

4.5. Are there any Postscript interpreters?
===========================================

   PostScript is a programming language designed to be used to describe
printing on pages. Apple helped make PostScript popular by selling
printers with built in PostScript interpreters. Many programs have
evolved to produce PostScript programs as their output, making
PostScript the lingua franca of printing. Until recently, in order to
print a PostScript file, you had to have a relatively expensive laser
printer. The development that changed this was the software PostScript
interpreter. These programs allow your computer to interpret PostScript
programs, and produce the matrix of dots to send to your normal
graphics printer.

   One of the benefits of PostScript is that it is resolution
independent.  What this means is that it can support the highest
resolution of your device - and that you can reasonably preview
PostScript on a low resolution screen.

   There are two free PostScript interpreters for the Amiga. Post and
Ghostscript. Post comes as an Amiga shared library along with front
ends for previewing to the screen and printing. This structure allows
others to write programs that can show PostScript images on screen. In
fact, AmigaTeX uses Post's library to support incorporation of
PostScript into documents.  Ghostscript similarly comes in two
programs, but not as a shared library.  Ghostscript is the rendering
engine, and Ghostview is the front end.  Sources: Aminet (directorys
`text/print' and `text/dtp'), Fish disk 669

5. How about Graphics?
**********************

   Graphics is one of the major strengths of the Amiga. Why don't we
have more answers here? :-(

5.1. What are chunky and planar displays?
=========================================

   Simply put, the terms `chunky' and `planar' (short for `bitplanar')
refer to different ways of storing graphics information in a computer's
memory. They are rather easy to understand, as far as things go, but
incredibly difficult to explain:

   Computer images are arranged as a grid of pixels, each of which can
be thought of as a number representing the color number of the pixel,
sort of like a paint-by-numbers scheme.  For example, here's a
simplified example image, in four colors:

        00302132

   The Amiga stores this image in a `bitplane' mode. That is, it is
represented by several planes of bits (binary digits, 1s or 0s). This
is a four-color image, so each color number could be represented by two
bits.  Therefore there are two bitplanes:

        00100110    Here's bitplane 0
        00101011    And here's bitplane 1
        --------    Now, let's add them up, binary style:
        00302132

   Which is the final image. If the image was in two dimensions, it
would truly be composed of bit planes. However, I'd need three
dimensions to show multiple bitplanes overlayed, and therefore for
simplicity we're working in one dimension (which is all we need).

   Now, there's another way of storing this image.  How about if we
localize the bit data in little chunks?

        00 00 11 00 01 10 11 01 = 00302132

   This is the principle of the `chunky' pixel mode.

   Both methods of image storage are perfectly logical, and no one can
say that one is better than the other. However, there are certain
technical aspects which cause certain advantages and disadvantages.

   First, if you've seen colored text scroll on your Amiga, you know
there is a bit of "flicker" that arises. Specifically, what happens is
that while the text is scrolling, its color temporarily changes to
something completely different. What's happening is that the computer's
moving several bitplanes of data while the raster (monitor electron
gun) is sweeping across the screen. What that means is that, if the
raster catches the data while it's being moved, you can end up with some
bitplanes being moved and some not. What if we filled bitplane 1 in the
example above with 0s? Instantly all the 3s become 1s, and the 2s
become 0s! This is what causes "flicker" when certain colors are
scrolled. By contrast, if a chunky pixel display is caught while
scrolling, all we see is a partially-scrolled image; the colors are
preserved (since their units are the small ones).

   That's a disadvantage to planar pixels, but what about chunky pixels?
Well, recall that a computer organizes information in terms of 8 bit
bytes. These groups are static; you cannot decide to all of a sudden
organize data in terms of three bytes or something! Therefore, when
using chunky pixels, things get complicated if we decide to use a
nonconvenient number of bits per pixel. In practice, the 8-bit
(256-color) mode, and 24-bit (16 million color) modes are the most
common candidates for chunky pixel displays.

   Finally, certain effects can be accomplished with the different
systems.  Bitplanar mode is particularly useful for things like shadows
(where an extra bitplane is set with 1s instead of 0s), and chunky mode
is great for perspective and "mapping" (since the data for each pixel is
localized in a single "chunk"). The latter advantage makes chunky pixel
mode really great for games, and is what made Wolfenstein 3-D possible.

   We all know that Amigas use the bitplane system for storing images.
However, the Macintosh and PC(VGA) both use chunky pixel modes. While
we can optimize our RAM usage with "bizarre" modes like 8- and
128-color, they gain the advantages of non-flicker scrolling, and the
programming simplicity of just writing a byte where you want the pixel
to go.

   The difference between the two modes becomes problematic in things
like emulation. EMPLANT has a "chunky to planar" routine which it uses
to convert a Macintosh display into an Amiga one. "Chunky to planar"
routines are also useful for getting chunky-inclined things to run on
Amigas (see TMAPDemo, rotdemo). On a side note, there was some
confusion as to what EMPLANT used the MMU for with regard to chunky to
planar. The MMU itself is incapable of performing the algorithm for the
conversion; rather, it is used to detect what portions of the display
memory are updated from the Mac side, and therefore the processor is
saved from having to perform the chunky to planar conversion for the
entire display.

   I sincerely hope that helped clear up most of the mystery concerning
the terms "Chunky" and "Planar"!

   (Joseph Luk, jluc@eis.calstate.edu)

5.2. What is doublebuffering?
=============================

   Don't be ashamed if you haven't a clue as to what this is. It's
rather simple, really. Imagine you wanted to animate something by
drawing out each frame. Now imagine you had only one piece of paper.
Even if you drew pretty fast, it would be difficult to see what the
animation looks like because you'd have to erase the frame you just
drew, in order to draw the next one!

   What if you had two pieces of paper? Why, then, you could see the
difference between two adjacent frames. First you'd draw your first
frame on the first piece of paper, then you'd draw the second frame on
the other piece.  Then you'd erase the picture on the first piece of
paper, and draw in the third frame. Then you'd erase the picture on the
second piece of paper, and draw in the fourth frame, and so forth.

   This is the principle of doublebuffering. The computer shows you the
picture it just drew, then turns around and draws the next one. It then
swaps the picture in front of you with the one it just drew, and
repeats the process. The result is a smooth animation, because you
never need to see the computer draw; all you see is each finished
product.

   (Joseph Luk, jluc@eis.calstate.edu)

5.3. What monitors will work on my Amiga 1200/4000?
===================================================

   Monitors can be classified after the horizontal scan frequency they
require.  TVs, as well as C='s 1084 monitor, need frequencies around 15
kHz. VGA/SVGA need approx. 30 kHz. Multisync monitors can take many
frequencies.

   In short: You can use any monitor you want with an A1200. BUT:

   - If you use a regular VGA/SVGA monitor, you can only use a few
     display modes (like DblPAL, DblNTSC and/or Productivity). I.e.
     (320|640) x (256|512|1024) for DblPAL. This is great for Workbench
     and all "serious" utilities (DTP etc), but don't expect any games
     to work... they don't use your preferences, just take over the
     machine and assume a 15 kHz monitor. Also, you cannot utilize the
     "Early Startup Control" screen (you know, disable cache, and that
     stuff), which also requires a 15 kHz monitor. Furthermore, VGA
     monitors don't have speakers. And the VGA-type modes don't support
     Genlocks. But for a lot of "serious" work, a VGA monitor is quite
     adequate.

   - You already know what happens with a 15 kHz monitor; the
     flickering in Interlace mode. A small tip: Try to use NTSC instead
     of PAL. This increases the refresh rate from 25 Hz to 30 Hz, at
     the expense of lower vertical resolution (482 lines maximum). The
     NTSC and PAL modes aren't as bad as many people think. If your
     monitor has a lot of phosphorous (long afterglow), PAL Laced can
     be quite OK, and it gives you a resolution of 1448x566 in
     SuperHiRes. That's the highest resolution currently supported on
     AGA Amigas, in _any_ display mode.

   - A Multisync gives you the best of both worlds. The new 1940 and
     1942 monitors from C= are quite OK, although rather cumbersome to
     use... The h/v size and offset must be set manually each time you
     switch display mode.

   For a VGA/SVGA or Multisync monitor, you'd need a little shiny box
which gives you the standard 15-pin "D" connector. It costs around $15.

   There are other alternatives... like the "AmiVGA" box ($50 or so),
which I think is a cheapo version of the Flicker Fixer. (But it's
really a shame to use this on an AGA Amiga.)

   Also, you can get a VGA monitor, and hook up your TV to the
composite or RF port on the Amiga - one monitor for games, one for
serious stuff.

   (Per Espen Hagen, per.e.hagen@ffi.no)

5.4. How do I switch between PAL and NTSC?
==========================================

   PAL and NTSC are two different video standards, the former being
European, and the latter being American. PAL has a slightly taller
screen (256 lines non-interlaced, non-overscanned) as opposed to NTSC
(200 lines), so if you see the bottom portion of a program's screen
getting cut off on your American machine, chances are the program was
written for PAL, and is running on your shorter NTSC screen. PAL and
NTSC differences are somewhat less important to European users; since
their machines default to PAL, running an NTSC program is no more than
a minor annoyance having the screen only appear in the top portion of
the display.

   Therefore, for us NTSC folks, switching into PAL mode becomes
important to avoid loss of some picture on Euro Demos, etc.

   First, the most common misconception about switching between PAL and
NTSC is that you need a Multiscan or special monitor for such a purpose.
Not so! Just about any monitor can handle the minor signal difference
between PAL and NTSC (50Hz vertical refresh versus 60Hz). The 108x,
19xx, and 20xx series, and even most TVs, can display both PAL and NTSC.
Sometimes it is necessary to perform minor tweaking of vertical hold
and/or v. size on your monitor to achieve full display, though this is
trivial.

   What IS needed to switch between PAL and NTSC in software, is a
"Fatter" (1MB) Agnus or better. If your system has more than 512K of
CHIP RAM (use the avail command to find out) you have this chip. If you
do not, ou can still construct a hardware switch (see below).

   The following directions assume you're an NTSC user who wants to
switch into PAL mode, but the procedure for going from PAL to NTSC is
much the same.

   The most common use of switching into PAL is for self-booting games,
demos, etc.  The best way to accomplish this on pre-3.0 systems is to
use Chris Hames' Degrader program (most recent version: 1.30). Once you
have procured this program, the switch is as simple as selecting
"50Hz", and "50Hz System", then installing the program's ROMTag (little
program that runs at boot-time) by pressing the "Survive Reset(s)"
button.

   AmigaDOS 3.0 added a PAL/NTSC switch feature to its Boot Menu, and
all you need to do in order to access this is hold down both mouse
buttons as the computer boots. Select Display Options, Display
Mode/PAL, and then Boot. If the program still fails to go into PAL mode
(Zool is one I've found), you may wish to get Degrader anyway and try
that.

   Software PAL/NTSC switching is easy and painless. Some people have
gone even further by installing hardware PAL/NTSC switches. This
results in a system which even the most nasty hardware-banging programs
can't bring to its original configuration (if it has been switched).
The procedure is simple - most Amigas have jumpers already - but beyond
the scope of this document.

   Therefore, if your screen is too short or cut off, seek the different
screen mode. You'll "see new horizons", literally!

   (Joseph Luk, jluc@eis.calstate.edu)

6. Emulators
************

   What? The Amiga isn't good enough? You really want it to be another
machine?  Well, look here...

6.1. Can I run Unix on my Amiga?
================================

   Actually there are three Unix versions on the Amiga. All of them
need at least 68030 (see 68EC0xx), probably a 68040 in the near future
and seem to have problems with many hard-drive-controllers. You should
have a good look into the documentation before installing it. Unix
needs much resources, say at least 10Mb RAM and a 150Mb Unix-partition
on the hard-drive.

  1. Commodore offered a System V Unix in the past. It contained TCP/IP,
     X11 and other software and seemed to make a good job, but it was
     expensive and after all Commodore has dropped developing it.
     Commodore-Unix needs a streamer because it is distributed on tapes.

  2. A Linux port is prepared. But actually there is not very much than
     the kernel. Specialists might like to use it, but it cannot be
     recommended for now. Linux is freely distributable and can be
     found for example per FTP at `ftp.uni-paderborn.de', directory
     /pub/amiga/linux.

  3. NetBSD is freely distributable too. Like Linux it isn't ready for
     now, but it seems to make big steps. Most GNU software is said to
     run, especially emacs and gcc. I think it's worth to have a look
     on it. Per FTP you get NetBSD for example from
     `ftp.uni-paderborn.de', directory /pub/amiga/NetBSD.

7. Miscellaneous
****************

   This last chapter contains some questions that don't fit in the
chapters above.

What are files ending with ...?
===============================

   Most endings on FTP sites or Fish disks tell you that the file is
compressed and/or is an archive containing more than one file. Some
programs even archive whole disks. Frequently found endings and
programs to handle the related files are:
*.lha*
*.lzh*
     Compressed archives; recommended: LhA (`util/arc/LhA_e138.run' on
     Aminet  or Fish disk 715) or Lx (`util/arc/lx100.lha' on Aminet),
     Unix version available (`misc/unix/lha-1.00.tar.Z')

*.dms*
     Disks compressed using DMS (`util/arc/dms111.sfx' on Aminet or
     Fish disk 406)

*.zom*
     Disks compressed using Zoom (`util/arc/Zoom_5.4.lha' on Aminet,
     Fish disk 682); an older version which you probably need for
     uncompressing PasTeX is found on Fish disk 459.

*.zoo*
     Compressed archive; recommended: Zoo (`util/arc/zpp2-10.lzh' on
     Aminet or Fish disk 527)

*.Z*
*.z*
*.gz*
     Compressed files; recommended gzip (`util/arc/gzip-1.2.3bin.lha' on
     Aminet), note that this are Unix files in most cases

*.tar*
     Acrhive; recommended: tar (`util/arc/tar.lha' or
     `util/arc/gtar10.lha' on Aminet or Fish disk 445), note that tar is
     a Unix archiver and you often find soething like `.tar.Z'.

*.arj*
     Compressed archive; recommended unarj (`util/arc/unarj-0.5.lha' on
     Aminet)

*.zip*
     Compressed archive; recommended UnZip (`util/arc/unzip-5.1.lha' on
     Aminet), note that this are MS-Dos archives in most cases

Is there a Stacker-like utility to pack my hard drive?
======================================================

   XFH does a good job. It operates as a handler and uses the
XPK-libraries, so you have different compression modes (NUKE is a good
choice) and possibly even more in the future. The only disadvantage is,
that the size of a file is limited by RAM: Don't use it with less than
2MB of RAM. Sources: Aminet (`util/pack/XFH134.lha' and
`util/pack/xpk25usr.lha'), Fish disk 754.

   Another possibility is EPU. It's shareware and should offer the same
as XFH, but without limiting the file size. Sources: Aminet
(`util/pack/epu14.lha'), Fish disk 858.

Where and how do I get Software?
********************************

   Three questions arise in this context: Which programs can be found,
where are they and how to get them and transfer them home?

Files and databases on freely distributable software
====================================================

   Of course you need to know where you find things. Many good choices
are listed in this paper, as I hope. Other sources are:

*AmigaSciSchool*
     is a list of software and where you find it in Ascii format. It is
     posted monthly to the newsgroups `comp.sys.amiga.applications',
     `comp.unix.amiga', and `news.answers'. Additionally you will find
     it on Aminet sites (`text/doc/AmigaSciSchool-4.01'). It handles
     everything listed here and many more, for example GNU software,
     libraries (linked and shared), shells, Unix commands, educational
     and scientific software and much more.

*FishCon*
     are lists of the Fish disk contents. (`fish/doc/fishcon-???.lzh' on
     Aminet)

*FishXref*
     is a cross reference list of the Fish contents.
     (`fish/doc/fishxref-???.lzh' on Aminet) FishXref and Fishcon are in
     Ascii format.

*KingFisher*
     A Fish disk database, (`fish/doc/Kingfisher1_30.lha', which is the
     program and `fish/doc/KFData850.lha' ,which contains the data, on
     Aminet or Fish disk 863) allows search by name and context. See
     Fish.

Getting files from a FTP server
===============================

   Things are easy for those who have access to the Internet and a
program called FTP (File Transfer Program). Nearly all Unix computers
have it, but not all of them allow the use of FTP.

   FTP allows you to gain access to some other machines and store and/or
retrieve files. Normally one needs an acoount on the remote machine to
use it, bat a number of machines have a setup that allows everybody to
log in as the user `ftp' or `anonymous', so anybody may get files from
them. The most important of this servers are the Aminet servers, which
mirror each other and hence should have the same files. They are the
best choice if you are looking for Amiga software. Aminet hosts are
     ftp.luth.se		    (Sweden)
     litamiga.epfl.ch	    (Switzerland)
     ftp.uni-kl.de		    (Germany)
     ftp.cs.tu-berlin.de	    (Germany)
     ftp.uni-erlangen.de	    (Germany)
     ftp.uni-paderborn.de	    (Germany)
     ftp.th-darmstadt.de	    (Germany)
     wcarchive.cdrom.com	    (USA)
     ftp.etsu.edu		    (USA)
     ftp.wustl.edu		    (USA)
     merlin.etsu.edu 	    (USA)
     oes.orst.edu		    (USA)
     src.doc.ic.ac.uk	    (Great Britain)
   All these mirrors have a directory `/pub/aminet', where you will find
much stuff. Please use a mirror close to you! Some other important hosts
are
     wuarchive.wustl.edu	 (USA)
     ftp.funet.fi		 (Finland)
     ftp.cso.uiuc.edu	 (USA)
     grind.isca.uiowa.edu	 (USA)
     ftp.dfv.rwth-aachen.de	 (Germany)
   Note that grind, aachen and erlangen have the full collection of Fish
disks available!

   To connect to a special host (ftp.uni-erlangen.de for example), you
should type
     ftp ftp.uni-erlangen.de

The host answers by requesting your login. You should type
     ftp

No you are asked for a password. Please type your Email address here, if
you have one. If not, use the password ftp.

   Now you're inside the host. There is a number of commands you may
execute here. The most important are:
*?*
     Prints the help text of the FTP command. Additionally you may type
     *? command* to get information on a special command.

*bin*
     Tells the FTP program that you whish to transfer binary files. It
     is always a good choice to type bin as the very first command!
     Files you load without the bin command can be corrupt.

*get <file>*
     Loads the given file from the host. On most Unix machines you can
     type something like `get file.txt -' or `get file.txt |more' to
     show a text on the screen. Note that there *must* be no blank
     between the | and the word more!

*mget <pat>*
     Loads the given files. pat may contain Unix style like wildcards.

*put <file>*
*mput <pat>*
     Like get and mget, but transfer files from you to the remote host.
     This is in most cases not allowed, except for a special directory
     called `incoming'. You can place files here which you want to make
     public.

*cd <dir>*
     Like the usual cd command. The commands get, mget, put, mput, dir
     and ls refer to the current working directory.

*dir [<dir>]*
*ls [<dir>]*
     Like `list' and `dir' on the Amiga. Note that the FTP-dir
     corresponds to the Amiga-list!

*bye*
     Leaves the FTP program.

   When you have used FTP for the first times you will notice, that you
always begin with executing the same steps:
  1. Type the login (ftp in most cases)

  2. Type the password (your mail address in most cases)

  3. Enter the bin command

  4. Change the current working directory (`/pub/aminet' for example)
        This may get executed automatically. What you need is a file
called `.netrc' in your home directory. Note that it needs to be
protected against others! The FTP program doesn't use it, if it can be
read by anything else than you. (Protection is set using the command
`chmod go-rwx .netrc'.) The .netrc file contains some entries for your
most favourite FTP sites, each separated by empy lines. A typicel entry
may look like this:
     machine ftp.uni-erlangen.de
     login ftp
     password <your mail address> or <ftp>
     macdef init
         bin
         cd pub/aminet
   Note that on some machines it is possible to use the machine name
`default' which meets all machines not listed in .netrc.

Getting files from a Mail server
================================

   Another way to get files is to use a mail server. This assumes that
you can send mail to Internet addresses and get mail from Internet
hosts. It works by sending a mail to the server specifying some
commands, for example send commands for the files you want. Important
mail servers are
     ftpmail@decwrl.dec.com
     mailserver@nic.funet.fi
     ftp-mailer@ftp.informatik.tu-muenchen.de
     mrcserv@janus.mtroyal.ab.ca
     mail-server@ftp.cs.tu-berlin.de
     mail-server@rtfm.mit.edu

The most important commands are:
*Help*
     Tells the server that you wish to get an Ascii file containing
     detailed explanation how to use the server.

*Limit <number>*
     Specifys that you wish to get not more than <number> Kbytes per
     mail.  Larger files get splitted into small pieces of at most
     <number> Kbytes which are sent as separate mails each. Note that
     the mails may get larger because of overhead.

*Cwd <dir>*
     Sets the current working directory to <dir>. This directory is
     used by the commands send and dir.

*Index*
     will return a list of files and/or directories that the server
     offers. Note that this may be *very* large!

*Index <item>*
     returns a list of files containing <item> in their names.

*Dir [<dir>]*
     returns a list of the files and directories in the given directory.

*Send <file1> <file2> ... <fileN>*
     Tells the server to send the given files to you.

*Begin*
     Tells the server to ignore all lines above this command.

*End*
     Like Begin, but specifies to ignore the lines below. (A signature
     for example!) A typical session would be to send the following
mail to the mail server:
     BEGIN
     CD /pub/aminet/util/arc
     SEND LhA_e138.run
     END

The Fish disks
==============

   A very good source are the Fish disks. There are almost 900 disks
for now and very much good stuff on it. A local dealer should be close
to you and you should not need to pay more than 3$ per disk.

   Fred Fish will release CD-Roms in the future releasing floppy disks
will terminate with number 1000. Actually it's not clear, how the
CD-Roms will look and if their stuff will be available on floppy disks
by something else's work.

How do I Read and write MS-Dos disks?
=====================================

   No problem for owners of Workbench 2.1 or higher: The program
CrossDos is part of the Workbench. All you have to do is mounting the
device `pc0:' by putting it into the drawer `Devs:DOSDrivers' or by
double-clicking the icon in `Sys:Storage/DOSDrivers'. Ms-Dos disks in
drive `df0:' can now be handled in the usual manner replacing the word
`df0:' by `pc0:'. For example the directory can be shown with the
command dir pc0:.

   People still running Workbench 2.0 or lower need a program called
`MSH'.  You will find this on the Aminet (directory misc/emu) and on
Fish disk 382.  See Sources. After editing the file `devs:MountList' as
described in the documentation you have to say Mount msh: in the CLI
and can now do the same as above replacing the word `pc0:' with `msh:'.

How do I split large files?
===========================

   There are some archives which are too large to fit on one disk. To
transfer them on disks you need to split them into smaller pieces and
transfer each part on a separate disk. Best choice seems to get the
Amiga-FAQ archive.  (see Amiga-FAQ Archive) It's src directory contains
a small file called JWSplit.c which should get compiled on Unix as well
as on the Amiga and most other machines. To compile it, type
     cc -o JWSplit JWSplit.c

To split a file (suggest `gcc233.lha', which contains 3.5MB) type
     JWSplit gcc233.lha 700000

which creates files `gcc233.0' to `gcc233.5' containing not more than
700000 bytes. (The number 700000 may be omitted, default is 720000.) To
join them again, type
     join gcc233.0 gcc233.1 gcc233.2 gcc233.3 gcc233.4 gcc233.5 gcc233.6
          as gcc233.lha

(Note that you must not type `join gcc233.? as gcc233.lha'! The files
may be permutated. The Amiga-FAQ archive contains a file called
JWJoin.c which allows this.) On Unix it's easier: Simply type
     cat gcc233.? >gcc233.lha

The Amiga-FAQ archive
*********************

   The Amiga-FAQ is available in different formats: Ascii format (which
is posted to the nets) AmigaGuide format (which is the adequate format
on the Amiga) and in dvi format (to be printed). Additionally there is
some stuff, that might be useful or interesting, but could not be
included into the Amiga-FAQ:
     txt/amiga.history	On the Amiga's history
     txt/story.txt		The Commodore story (or: the Tramiel story ;-)
     txt/amiga.newsgroups	Overview on comp.sys.amiga.*
     txt/amiga.sites 	List of FTP sites
     txt/AmigaOverview.tex	A short overview on the Amiga-Soft- and Hardware
     txt/Hardware.tips	For those people who can't live without solder
     src/JWSplit.c		The source of a file splitter
     src/JWJoin.c		The opponent to JWSplit
     src/addtoc.c		Utility to add a toc to texinfo-created docs
     			(this document uses it)

   I decided to collect these in the Amiga-FAQ archive. It is called
AmigaFAQxxxxxx.lha (where xxxxxx is the date of the last release) and
can be found on Aminet, directory `text/docs'.

Contributions
*************

   This FAQ can neither get useful nor hit further development without
your help. Suggestions, contributions, new answers, critics, anything
is rather welcome.

   Please note, that very major subjects are absolutely missing yet:
Nothing about sound, nothing on graphic cards, no Animation. These are
some of the Amiga's best points! But I don't know them ... :-(

   So grab your keyboard (Your pencil? Well, if there's no other way...)
and send mail to:

           Jochen Wiedmann
           Am Eisteich 9
     72555 Metzingen (Germany)
           Tel. 07123 / 14881
     
           Internet: wiedmann@mailserv.zdv.uni-tuebingen.de

Credits
*******

   My thanks go to:
*Reinhard Spisser and Sebastiano Vigna*
     for the Amiga version of texinfo. This is written with it.

*The Free Software Foundation*
     for the original version of texinfo and many other excellent
     programs.

*Dylan McNamee*
     for contributing the sections on Editors, Word Processors, DTP and
     Postscript and some wording fixes.

*Joseph Luk*
     for help in the section on chunky/planar, double buffering and
     PAL/NTSC

*Urban Dominik Mueller*
     for the FAQ on FTP and Mail-servers.

Index
*****



 .arj                                   Endings
 .dms                                   Endings
 .gz                                    Endings
 .lha                                   Endings
 .lzh                                   Endings
 .netrc                                 FTP
 .tar                                   Endings
 .z                                     Endings
 .Z                                     Endings
 .zip                                   Endings
 .zom                                   Endings
 .zoo                                   Endings
 68EC020                                68EC0xx
 68EC030                                68EC0xx
 Amiga-FAQ archive                      Amiga-FAQ Archive
 AmigaSciSchool                         Infos
 Anonymous                              FTP
 Assemblers                             Compilers
 AutoDocs                               Includes
 C                                      Compilers
 C++                                    Compilers
 CATS                                   Includes
 Chunky displays                        Chunky vs. Planar
 Commodore, Frankfurt                   Developer
 Compilers                              Compilers
 Contributions                          Contributions
 Credits                                Credits
 CrossDos                               MS-Dos disks
 Desktop Publishing                     DTP
 Developer                              Developer
 Doublebuffering                        Doublebuffering
 DTP                                    DTP
 Editors                                Editors
 Emulators                              Emulators
 endings                                Endings
 Enforcer                               68EC0xx
 file endings                           Endings
 Fish disks                             Fish
 FishCon                                Infos
 FishXref                               Infos
 Forth                                  Compilers
 Fortran                                Compilers
 FPU                                    FPU
 FTP servers                            FTP
 GigaMem                                68EC0xx
 Graphics                               Graphics
 HD compression                         HD-Compression
 Hirsch & Wolf                          Includes
 history                                Amiga-FAQ Archive
 Includes                               Includes
 KingFisher                             Infos
 Lisp                                   Compilers
 Mail-server                            Mail
 Memory, virtual                        68EC0xx
 MMU                                    68EC0xx
 Modula 2                               Compilers
 Monitors                               Monitors
 MS-Dos disks                           MS-Dos disks
 Msh                                    MS-Dos disks
 Multiscan                              Monitors
 NDUK                                   Includes
 NTSC                                   PAL-NTSC
 Oberon                                 Compilers
 packers                                Endings
 packers on Unix                        Endings
 Page Layout Languages                  Word Processors
 PAL                                    PAL-NTSC
 Pascal                                 Compilers
 Planar displays                        Chunky vs. Planar
 Postscript                             Postscript
 RKM's                                  Manuals
 Rom Kernel manuals                     Manuals
 Splitting files                        Splitting
 Stacker                                HD-Compression
 TeX                                    TeX
 Text Editors                           Editors
 VGA                                    Monitors
 Word Processors                        Word Processors
 Wysiwyg                                Word Processors
 XFH                                    HD-Compression
 XPK                                    HD-Compression

