Article #38859 (38954 is last):
From: wilson@inf.ufrgs.br (Wilson Roberto Afonso)
Newsgroups: alt.folklore.computers
Subject: alt.folklore.computers FAQ - Part 01
Date: Tue Mar  9 09:41:40 1993


Archive-name: afc-faq-1
Last-modified: 04-Mar-1993

This is the alt.folklore.computers list of Frequently Asked Questions
(FAQ).  It is maintained by Wilson Afonso (wilson@inf.ufrgs.br)  All
contributions and corrections are welcome, but I'm ultimately
responsible for what appears here.  Contributors are acknowledged, if
possible.

This is a three-part file.  The first part contains mostly generic questions.
The second is a small hitory of computers, and the third is a list of books
which are more or less related to computer folklore.

File 1 (this file):
I   - Introduction
II  - Generic questions
III - General folklore
IV  - Origins
V   - Firsts
VI  - Jokes
VII - Net Resources
VIII- Acknowledgement
IX  - Things I am looking for

File 2:
X   - A Chronology of Digital Computing Machines (to 1952)

File 3:
XI  - List of computer-folklore related books


 -------------------------------------------------------------------------

I - Introduction

1 - What is folklore ?

According to Webster's:
               Folklore: 1. Traditional customs, tales, or sayings
                 preserved orally among a people. 2. A comparative 
                 science that investigates the life and spirit  of
                 a people as revealed in their folklore [recursive
                 definition?] 3. A widely held unsupported specious
                 notion or body of notions

In this newsgroup, all of the definitions above seem to be supported.
One can say that discussions in this group approach discussion about
history of computation, but that is not quite right.  Ultimately, the
difference between history and folklore is that history deals with
great and important facts and folklore deals with minor, day-to-day
facts.  We obviously discuss facts that fit in "History", too, but
that is a side-effect of the overall discussion.


II - Generic questions

II.1 - What is the origin of the term XXX ?  What does XXX mean ?

Answer to questions like this can be found in a big (I mean it!) file
called The Jargon File.  This file contains, among other things, the
meaning of thousands of words used by computers people.  If you ever
heard of a computer-related word, it is probably in this file.  Be 
aware, however, that this file is not a lexicon of technical terms.
It mostly contains words that you _don't_ find in computer dictionaries.
You can get it by anonymous ftp, in prep.ai.mit.edu (18.71.0.38), in
directory pub/gnu, as the file named jargon2911.ascii.Z  Its size is 507845
bytes (compressed), and uncompresses to a file with 1125880 bytes.  It is
also a published book, _The New Hacker's Dictionary_ (see below, question II.3).


II.2 - Is {famous person} on the net?

There is also a file with information on it.  It was posted to a.f.c
in Feb. 26th, 1993.  As far as I know, it is not in any FTP site, and
I don't know if it is being updated.  More information on it as soon as
I get it.


II.3 - What are some good books on computer folklore?

Look at the third file of this FAQ.  It contains a large list of such books.


II.4 - Where can I find {interesting file} ?

Try archie.  But, sometimes it is really difficult to know the name of
the file, even if you know the title of the article.  I include a small
list below:

- 'Why Pascal is Not My Favorite Programming Language', by Brian Kernighan :
it was posted to a.f.c. as ASCII.  It is also available as a PostScript file
in research.att.com:netlib/toms/100.Z

- 'Real Programmers don't use Pascal', by Ed Post: it was posted to a.f.c, too.
It is available via FTP from leif.thep.lu.se (130.235.92.55) as 
pub/Misc/realprog

- 'The Tao of Programming': it is copyrighted material, so it cannot be
distributed via FTP.  Anyway, it was posted to a.f.c in Feb. 1993.

- This FAQ: by now, nowhere.  I will see to it.



III - General folklore

III.1 - I heard that one of the NASA space probes went off course and
        had to be destroyed because of a typo in a FORTRAN DO loop.
        Is there any truth to this rumor?

The probe was Mariner I.  Intended to be the first US spacecraft to visit
another planet, it was destroyed by a range officer on 22 July 1962 when
it behaved erratically four minutes after launch.  But the problem was not
a DO loop.  This is what happened:

| #  During the launch the Atlas booster rocket was guided with the help
| #  of two radar systems.  One, the Rate System, measured the velocity of
| #  the rocket as it ascended through the atmosphere.  The other, the
| #  Track System, measured its distance and angle from a tracking
| #  antenna near the launch site.  At the Cape a guidance computer
| #  processed these signals and sent control signals back to the
| #  tracking system, which in turn sent signals to the rocket.  Its
| #  primary function was to ensure a proper separation from the Atlas
| #  booster and ignition of the Agena upper stage, which was to carry
| #  the Mariner Spacecraft to Venus.
| #  
| #  Timing for the two radar systems was separated by a difference of
| #  forty-three milliseconds.  To compensate, the computer was instructed
| #  to add forty-three milliseconds to the data from the Rate System
| #  during the launch.  This action, which set both systems to the same
| #  sampling time base, required smoothed, or averaged, track data,
| #  obtained by an earlier computation, not the raw velocity data
| #  relayed directly from the track radar.  The symbol for this smoothed
| #  data was ... `R dot bar n' [R overstruck `.' and `_' and subscript n],
| #  where R stands for the radius, the dot for the first derivative
| #  (i.e., the velocity), the bar for smoothed data, and n for the
| #  increment.
| #  
| #  The bar was left out of the hand-written guidance equations.  [A
| #  footnote cites interviews with John Norton and General Jack Albert.]
| #  Then during launch the on-board Rate System hardware failed.  That in
| #  itself should not have jeopardized the mission, as the Track System
| #  radar was working and could have handled the ascent.  But because of
| #  the missing bar in the guidance equations, the computer was
| #  processing the track data incorrectly.  [Paul's EndNote amplifies:
| #  The Mariner I failure was thus a {\it combination} of a hardware
| #  failure and the software bug.  The same flawed program had been used
| #  in several earlier Ranger launches with no ill effects.]  The result
| #  was erroneous information that velocity was fluctuating in an
| #  erratic and unpredictable manner, for which the computer tried to
| #  compensate by sending correction signals back to the rocket.  In fact
| #  the rocket was ascending smoothly and needed no such correction.  The
| #  result was {\it genuine} instead of phantom erratic behavior, which
| #  led the range safety officer to destroy the missile, and with it the
| #  Mariner spacecraft.  Mariner I, its systems functioning normally,
| #  plunged into the Atlantic.

But there was also a problem with a DO loop.  This is the history, as told by
Fred Webb in alt.folklore.computers in 1990:

|  I worked at Nasa during the summer of 1963.  The group I was working
|  in was doing preliminary work on the Mission Control Center computer
|  systems and programs.  My office mate had the job of testing out an
|  orbit computation program which had been used during the Mercury
|  flights.  Running some test data with known answers through it, he was
|  getting answers that were close, but not accurate enough.  So, he
|  started looking for numerical problems in the algorithm, checking to
|  make sure his tests data was really correct, etc.
|
|  After a couple of weeks with no results, he came across a DO
|  statement, in the form:
|       DO 10 I=1.10
|  This statement was interpreted by the compiler (correctly) as:
|       DO10I = 1.10
|  The programmer had clearly intended:
|       DO 10 I = 1, 10
|
|  After changing the `.' to a `,' the program results were correct to
|  the desired accuracy.  Apparently, the program's answers had been
|  "good enough" for the sub-orbital Mercury flights, so no one suspected
|  a bug until they tried to get greater accuracy, in anticipation of
|  later orbital and moon flights.  As far as I know, this particular bug
|  was never blamed for any actual failure of a space flight, but the
|  other details here seem close enough that I'm sure this incident is the
|  source of the DO story.




III.2 - I heard that Gary Kildall missed the chance to make CP/M the
        IBM PC operating system because he decided to go flying on
        the day the IBM reps had an appointment.  Is this true?

I am not sure by now.  I am waiting for somebody who seems to know the
history to tell me.


III.3 - Is there really a coke machine attached to the Internet?

They say so.  Actually, it's address is coke.elab.cs.cmu.edu (128.2.209.43).
It cannot be fingered every time (sometimes it refuses connection, and
sometimes it answers an empty line).  They seem to be still working in the
software, and the format of the information is probable to change.  But, if
you finger it today, the information you get back is something like this :

wilson@tatu 21 % finger @coke.elab.cs.cmu.edu
[coke.elab.cs.cmu.edu] 
WARNING: This software still contains at least one bug!
Coke Server Ver 0.99 2-26-93
Information may not be correct, use at your own risk.
Coke:           Cold:  10   Warm:   0          Buttons
Diet coke:      Cold:   6   Warm:   0        C: EMPTY 
Sprite:         Cold:   2   Warm:   0    C: COLD    D: EMPTY 
                                         C: COLD    D: COLD  
                                         C: EMPTY   D: COLD  
                                                    C: COLD  
                                                    S: COLD  

wilson@tatu 22 % finger bargraph@coke.elab.cs.cmu.edu
[coke.elab.cs.cmu.edu] 
WARNING: This software still contains at least one bug!
Coke Server Ver 0.99 2-26-93
    M & M                      Buttons
   /-----\          C: CCCCCCCCCC................
   |*****|        C: CCCCCCCCC....  D: CCCCCCCC.....
   |*****|        C: CCCCCCCCC....  D: CCCCCCCCCC...
   |*****|        C: CCCCCCCCCC...  D: CCCCCCCCCCC..
   |*****|                          C: CCCCCCCCCCCC.
   \-----/                     S: CCCCCCC......
      |        Key:
      |          0 = warm;  9 = 90% cold;  C = cold;  . = empty
      |          Leftmost soda/pop will be dispensed next
   ---^---


And, in RFC1288 (The Finger User Information Protocol), the use of vending
machines on the net is supported :

#2.5.5.  Vending machines
#
#   Vending machines SHOULD respond to a {C} request with a list of all
#   items currently available for purchase and possible consumption.
#   Vending machines SHOULD respond to a {U}{C} request with a detailed
#   count or list of the particular product or product slot.  Vending
#   machines should NEVER NEVER EVER eat money.
#



III.4 - I heard there was a POKE command on the {your computer here}
        that would physically damage the hardware.  Is this true?

For those not used to it, a POKE command put some value in some position in
memory.  Thus, POKE 16510,0 changes the number of the first line of a BASIC
program in a Sinclair ZX81 to 0 by overwriting the real number in that
position.  

About physical damage: apparently, you could make the monitor of a PET computer
catch fire with a POKE.  The poke controlled the size of the screen for the
electron beam (which was under computer control).  The idea was that you could
change the screen size if you wanted to get around variations on the screen. 
Anyway, setting to Zero meant the computer would try to paint the entire
screen in the center of the screen, thus burning out the phosphor on the
monitor.

Also, in some IBM PC hardware you could burn the flyback transformer inside
the monitor with an OUT, reprogramming the MGA video card.

Finally, I heard a story about a virus that actually changed something in
the monitor of the infected computers, and caused them to explode (or burn).
Does somebody know something about it ?



III.5 - What should I do to an old CD ?

Microwave it.  Put in in the microwave oven, above a cup turned upside
down (the cup, not the disk), set the power to HIGH, the timer to 5 seconds,
turn off all the lights, and make sure you watch.  You will never use this
CD again.  The microwave oven is left apparently intact.



III.6 - Is it true that there is a cat printed on the motherboard of 
        Sun SPARCStations IPX ?  Why ?

Yes, it is true (don't believe me ? open yours !).  It is supposed to
be the comic strip caracter "Hobbes" (from Calvin and Hobbes).  The Sun
internal name for the IPX is "Hobbes" (the SparcStation 2 is Calvin).



III.7 - Why did IBM choose the 8088 rather than the 68000 as the processor for
        their first PC?

The IBM PC was supposed to be a low-end model machine that would compete
with CP/M machines and the Apple II, but not with IBM's planned larger
"PC's" (which never left the ground). For that reason, it needed a 16-bit
CPU, but not too much memory.

With its 8-bit data bus, the 8088 would lead to cheaper hardware
than a 68000-based machine. The limited address space (1MB, further
reduced by IBM's designers to 640 KB) wasn't perceived as a problem
since nobody could imagine anyone needing so much RAM in a PC 
anyway.
   
Also, the 8088 has the advantage of allowing easy proting of 8080/Z80 
code. This meant that lots of software could be produced very quickly
by porting existing CP/M programs (such as Microsoft Basic and the
WordStar word processor).



III.8 -  What does VAX mean? Why did early VAXen have model numbers starting
         with "11",like 11/780, 11/750, and so on?

Rumour has it that the 11/780 was originally intended as the PDP 11/78 with
"Virtual Address eXtension" (i.e. virtual memory), but Digital choose
to present their new 32-bit line of computers under the name "VAX" 
rather than "PDP".

The 11/xxx series of VAX machines all had a special "compatibility mode"
in which they can run PDP-11 code. 
   
   

IV - Origins

IV.1 - What are the origins of Usenet ?

Read the FAQs :-).  Actually, it is posted to news.answers, with
the subject "USENET software: History and Sources".


IV.2 - ... C ?

Quoted from _The_Secret_Guide_To_Computers (a GREAT book, by the way),
(c) 1991 by Russ Walter (15th edition):

   In 1963 at England's Cambridge University and the University of London,
researchers developed a ``practical'' version of ALGOL and called it the
Combined Programming Language (CPL). In 1967 at Cambridge University, Martin
Richards invented a simpler, stripped-down version of CPL and called it Basic
CPL (BCPL). In 1970 at Bell Labs, Ken Thompson developed a version that was
even more stripped-down and simpler; since it included just the most critical
part of BCPL, he called it B.
   Ken had stripped down the language _too_ much. It no longer contained
enough commands to do practical programming. In 1972, his colleague Dennis
Ritchie added a few commands to B, to form a more extensive language. Since
that language came after B, it was called C.
   So C is a souped-up version of B, which is a stripped-down version of BCPL,
which is a stripped-down version of CPL, which is a ``practical'' version of
ALGOL.



IV.3 - ... Unix ?


IV.4 - ... structured programming ?

Not sure, but this must have originated at the end of the '50s,
probably connected with the Algol 58 report.



V - Firsts

V.1 - When/what/where/who/... was the first {something} ?

It is usually a controversal issue.  Many many times the first {something}
wasn't documented, or is poorly documented, and nobody knows anything
about it except from hearsay.  Anyway, here goes a small list:

- Computer:  look at the second file of this FAQ.  It contains a little 
history of computers.

- Computer programmer: Lady Ada Lovelace was one of Lord Byron's daughters,
and a friend of Charles Babbage.  She wrote numerous programs for the Analytical
Engine, and so qualifies as the world's first computer programmer.

- Stored program to run: The Manchester Mark-I-Prototype ran the first stored
program in the world (a program to find greatest common factors) on 21st June
1948.

- E-mail message: probably internal messages were around for as long as there
was systems providing it.  It can be probably by 1963 or 1964.

- Computer game:  people have been programming games for as long as there
have been computers. There was research in getting computers to play
Tic-Tac-Toe, chess and checkers going on already in the early 1950's.  Also,
the following quotation sheds some light in the issue:

        "...The Mark I's random number generator ... supplied some fun
        and games.  F.C. Williams ... wrote a little gambling program
        that counted the number of times a given digit, from 0 to 9, was
        produced by a run of the generator.  But Williams adjusted the
        generator to lean toward his favorite number, and he enjoyed
        betting against unsuspecting visitors.  The beginnings of
        computer crime!"

                -Bit by Bit, Stan Augarten p. 212, ISBN 0-89919-302-1

- "Adventure" game: ADVENT, also known as Colossal Cave, by Crowther and Woods
(see the rec.{games,art}.int-fiction FAQ's for more info). There was an
earlier precursor, though: "Hunt the Wumpus", which is not an adventure game
as we know it, but it is the first game with a stored map. See the Jargon File
under "Wumpus".

- Graphics computer game:

- Use of microprogramming:  Maurice Wilkes on the EDSAC.

- Use of virtual memory: Atlas at Manchester University.

- High level language : Fortran, designed at IBM in 195?.



VI - Jokes 
 
I am not sure of what sort of thing could be put here.  We may even do it 
in another file, and post it less frequently to the net.  I accept any 
suggestion. 
 
 
VII - Net resources 
 
VII.1 - Who do I call if I have a problem with <something> ? 
 
[The suggestion of this question came from peter@NeoSoft.com (Peter da Silva) 
and I don't have any idea of what to put here.  Should it stay here, I would 
need information.  Somebody ?] 
 
VIII - Acknowledgement

Contributions were received from :

bryan o'connor <bryan@fegmania.wustl.edu>
del+@CMU.EDU (Daniel Edward Lovinger)
forbes@cbnewsf.cb.att.com (Scott Forbes)
Malcolm Shute <mshute@computer-science.manchester.ac.uk>
nelson@eagle.natinst.com (Nelson Bishop)
Dave (whitten@fwva.saic.com)
ig25@fg70.rz.uni-karlsruhe.de (Thomas Koenig)
"T.G.A." Rushton <T.G.A.Rushton@durham.ac.uk>
Mark Harrison <snow@dcs.warwick.ac.uk>
faught@zeppelin.convex.com (Danny R. Faught)
silveira@inf.ufrgs.br (Fernando da Silveira Montenegro)
jelson@circle.cs.jhu.edu (Jeremy Elson)
msb@sq.sq.com (Mark Brader)
eeyimkn@unicorn.nott.ac.uk (M. Knell)
weisberg@ee.rochester.edu (Jeff Weisberg)
Peter Neumann <neumann@csl.sri.com>



IX - Things I am looking for

IX.1 - The real story of why IBM couldn't reach Gary Kildall in 1981.

IX.2 - Suggestions on what to do to sections VI and VII

IX.3 - Origins of Unix

IX.4 - The old story about viruses in printers (Gulf War, Iraq, etc.)

IX.5 - Interesting stories that fit (anything !)

IX.6 - Should I put the answer to question II.2 (famous persons in the net) as
a 4th separate file ?  If the original mantainer of that list can't keep
doing it (I am trying to contact him; the last information is that he is on
vacations in Brazil), I can take the job.

IX.7 - First graphics computer game

IX.8 - Virus that exploded monitors (see III.4)

Thanks to everybody.
-- 
Wilson Roberto Afonso  | Instituto de Informatica - UFRGS
wilson@inf.ufrgs.br    | Porto Alegre  -  RS  -  Brasil 
"..If you own a machine, you are in turn owned by it, and spend your time
serving it...."    The Forbidden Tower, Marion Zimmer Bradle



Article #38860 (38954 is last):
From: wilson@inf.ufrgs.br (Wilson Roberto Afonso)
Newsgroups: alt.folklore.computers
Subject: alt.folklore.computers FAQ - Part 02
Date: Tue Mar  9 09:50:36 1993


Archive-name: afc-faq-2
Last-modified: 05-Mar-1993

This is the alt.folklore.computers list of Frequently Asked Questions
(FAQ).  It is maintained by Wilson Afonso (wilson@inf.ufrgs.br)  All
contributions and corrections are welcome, but I'm ultimately
responsible for what appears here.  Contributors are acknowledged, if
possible.

This is a three-part file.  The first part contains mostly generic questions.
The second is a small hitory of computers, and the third is a list of books
which are more or less related to computer folklore.

File 1:
I   - Introduction
II  - Generic questions
III - General folklore
IV  - Origins
V   - Firsts
VI  - Jokes
VII - Net Resources
VIII- Acknowledgement
IX  - Things I am looking for

File 2 (this file):
X   - A Chronology of Digital Computing Machines (to 1952)

File 3:
XI  - List of computer-folklore related books


 ----------------------------------------------------------------------------

X - A Chronology of Digital Computing Machines (to 1952)

Computers, as we know them know, weren't just invented out of thin air.  They
evolved from simpler machines, taking ideas from a number of different places.
So, here comes a little history of computing devices.  This covers the
development of machines that approach the definition of "computer", up to
1952, when real computers are already working.  This history comes from a
post to comp.misc by Mark Brader, and it's being copied here with his
consent.

           ----------------------------------------------------
           A Chronology of Digital Computing Machines (to 1952)
           ----------------------------------------------------

This material was compiled mainly from two sources:

        Bit by Bit: An Illustrated History of Computers.
        By Stan Augarten, pub. 1984 by Ticknor and Fields, New York.
        ISBN 0-89919-268-8, 0-89919-302-1 paperback.

        Encyclopedia of Computer Science and Engineering, 2nd edition.
        Editor Anthony Ralston, Associate Editor Edwin D. Reilly Jr.,
        pub. 1983 by Van Nostrand Reinhold, New York.  ISBN 0-442-24496-7.

There was an article on the Atanasoff-Berry machines in the August 1988
issue of Scientific American.  One detail cited below about them comes
from a book by Clark Mollenhoff.

The criteria for including a machine in this chronology were that it either
was technologically innovative or was well known and influential; certain
particularly innovative concepts have also been included as of the first
time that they were described.  When I refer to a machine as being able to do
some operation, I mean that it can do it more or less without assistance from
the user.  This disqualifies the abacus from consideration, for instance;
similarly, a user wanting to subtract 16 on a 6-digit Pascaline could do it
by adding 999984, but this does not count as ability to do subtraction.

Where I do not describe the size of a machine, it is generally suitable for
desktop use if it has no memory and is unprogrammable or if it is a small
prototype, but would fill a small room if it has memory or significant
programmability (of course, the two tend to go together).

The names Tuebingen, Wuerttemberg, and Mueller should have an umlauted
"u" in place of the "ue" used here.

           ----------------------------------------------------

1623.   Wilhelm Schickard (1592-1635), of Tuebingen, Wuerttemberg (now in
        Germany), makes his "Calculating Clock".  This is a 6-digit
machine that can add and subtract, and perhaps includes an overflow
indicator bell.  Mounted on the machine is a set of Napier's Rods, a
memory aid facilitating multiplications.  The machine and plans are lost
and forgotten in the war that is going on.  (The plans were rediscovered
in 1935, lost in war again, and re-rediscovered by the same man in 1956!
The machine was reconstructed in 1960 and found to be workable.)
        Schickard was a friend of the astronomer Kepler.

1644-5.  Blaise Pascal (1623-1662), of Paris, makes his "Pascaline".  This
        5-digit machine can only add, and that probably not as reliably as
Schickard's, but at least it doesn't get forgotten -- it establishes the
computing machine concept in the intellectual community.  (Pascal sold about
10-15 of the machines, some supporting as many as 8 digits, and a number of
pirated copies were also sold.  No patents...)
        This is the same Pascal who invented the bus.

1674.   Gottfriend Wilhelm von Leibniz (1646-1716), of Leipzig, makes his
        "Stepped Reckoner".  This uses a movable carriage so that it can 
multiply, with operands of up to 5 and 12 digits and a product of up to 16.
But its carry mechanism requires user intervention and doesn't really work
in all cases anyway.  The calculator is powered by a crank.
        This is the same Leibniz or Leibnitz who co-invented calculus.

1775.   Charles, the third Earl Stanhope, of England, makes a successful
        multiplying calculator similar to Leibniz's.

1770-6. Mathieus Hahn, somewhere in what is now Germany, also makes a
        successful multiplying calculator.

1786.   J. H. Mueller, of the Hessian army, conceives the idea of what came
        to be called a "difference engine".  That's a special-purpose calcu-
lator for tabulating values of a polynomial, given the differences between
certain values so that the polynomial is uniquely specified; it's useful
for any function that can be approximated by a polynomial over suitable int-
ervals.  Mueller's attempt to raise funds fails and the project is forgotten.

1820.   Charles Xavier Thomas de Colmar (1785-1870), of France, makes his
        "Arithmometer", the first mass-produced calculator.

1822.   Charles Babbage (1792-1871), of London, having reinvented the differ-
        ence engine, begins his (government-funded) project to build one by
constructing a 6-digit calculator using similar geared technology.

1832.   Babbage produces a prototype segment of his difference engine,
        which operates on 6-digit numbers and 2nd-order differences (i.e.
can tabulate quadratic polynomials).  The complete engine was to have
operated on 20-digit numbers and 6th-order difference, but no more than
this prototype piece was ever assembled.

1834.   Pehr George Scheutz, Stockholm, produces a small difference engine
        in wood, after reading a brief description of Babbage's project.

1836.   Babbage produces the first design for his "Analytical Engine".
        Whether this machine, if built, would have been a computer or not
depends on how you define "computer".  It lacked the "stored-program"
concept necessary for implementing a compiler; the program was in read-only
memory, specifically in the form of punch cards.  In this article such a
machine will be called a "program-controlled calculator".
        The final design had three punch card readers for programs and data.
The memory had 50 40-digit words of memory and 2 accumulators.  Its program-
mability included the conditional-jump concept.  It also included a form of
microcoding: the meaning of instructions depended on the positioning of
metal studs in a slotted barrel.  It would have done an addition in
3 seconds and a multiplication or division in 2-4 minutes.

1842.   Babbage's difference engine project is officially cancelled.
        (Babbage was spending too much time on the Analytical Engine.)

1843.   Scheutz and his son Edvard Scheutz produce a 3rd-order difference
        engine with printer, and the Swedish government agrees to fund
their next development.

1853.   To Babbage's delight, Scheutz and Scheutz complete the first really
        useful difference engine, operating on 15-digit numbers and 4th-order
differences, with a printer.

1858.   The difference engine of 1853 does its only useful calculation,
        producing a set of astronomical tables for an observatory in Albany,
New York.  The person who spent money to buy it is fired for this, and the
machine ends up in the Smithsonian Institute.  (The Scheutzes did make a second
similar machine, which had a long useful life in the British government.)

1871.   Babbage produces a prototype section of the Analytical Engine's
        "mill" (CPU) and printer.  No more is ever assembled.

1878.   Ramon Verea, living in New York City, invents a calculator with an
        internal multiplication table; this is much faster than the shifting
carriage or other digital methods.  He isn't interested in putting it into
production; he just wants to show that a Spaniard can invent as well as
an American.

1879.   A committee investigates the feasibility of completing the Analytical
        Engine and concludes that it is impossible now that Babbage is dead.
The project becomes somewhat forgotten and is unknown to most of the people
mentioned in the last part of this chronology.

1885.   Dorr E. Felt (1862-1930), of Chicago, makes his "Comptometer".
        This is the first calculator where numbers are entered by pressing
keys as opposed to being dialed in or similar awkward methods.

1889.   Felt invents the first printing desk calculator.

1890.   US Census results are tabulated for the first time with significant
        mechanical aid: the punch card tabulators of Herman Hollerith
(1860-1929) of MIT, Cambridge, Mass.  This is the start of the punch card
industry (thus establishing the size of the card, the same as a US $1 bill
(then)).  The cost of the census tabulation rises by 98% from the previous
one, in part because of the temptation to use the machines to the fullest
and tabulate more data than formerly possible.  The use of electricity to
read the cards is also significant.

1892.   William S. Burroughs (1857-1898), of St. Louis, invents a machine
        similar to Felt's but more robust, and this is the one that really
starts the office calculator industry.  (The calculators are still hand
powered at this point, but electrified ones follow in not too many years.)

1937.   George Stibitz (c.1910-) of Bell Labs, New York City, constructs a
        demonstration 1-bit binary adder using relays.

1937.   Alan M. Turing (1912-1954), of Cambridge University, England, publishes
        a paper on "computable numbers", which solves a mathematical problem
by considering as a mathematical device the theoretical simplified computer
that came to be called a Turing machine.

1938.   Claude E. Shannon (c.1918-) publishes a paper on the implementation of
        symbolic logic using relays.

1938.   Konrad Zuse (1910-) of Berlin completes a prototype mechanical
        programmable calculator, later called the "Z1".  Its memory used sliding
metal parts and stored about 1000 bits.  The arithmetic unit was unreliable.

Oct 1939.  Stibitz and Samuel Williams complete the "Model I", a calculator
           using relay logic.  It is controlled through modified teletypes
and these can be connected through phone lines.  Later machines in the series
also have some programmability.

c.Oct 1939.  John V. Atanasoff (1903-) and Clifford Berry, of Iowa State
             College, Ames, Iowa, complete a prototype 16-bit adder.  This
is the first machine to calculate using vacuum tubes.

c.1940. Zuse completes the "Z2", keeping the mechanical memory but using
        relay logic.  He can't interest anyone in funding him.

Summer 1941.  Atanasoff and Berry complete a special-purpose calculator for
              solving systems of simultaneous linear equations, later called
the "ABC" ("Atanasoff-Berry Computer").  This has 60 50-bit words of memory
in the form of capacitors (with refresh circuits) mounted on two revolving
drums.  The clock speed is 60 Hz, and an addition takes 1 second.
        For secondary memory it uses punch cards, with the holes being burned 
rather than punched in them, moved around by the user.  (The punch card
system's error rate was never reduced beyond 0.001%, which wasn't good enough.)
        Atanasoff left Iowa State after the USA entered the war, and
apparently lost all interest in digital computing machines.

Dec 1941.  Zuse, having promised to a research institute a special-purpose
           calculator for their needs, actually builds them the "Z3", which
is the first operational program-controlled calculator, and has 64 22-bit
words of memory.  However, its programmability doesn't include a conditional-
jump instruction; Zuse never had that idea.  The program is on punched tape.
The machine includes 2600 relays, and a multiplication takes 3-5 seconds.

Jan 1943.  Howard H. Aiken (1900-1973) and his team at Harvard University,
           Cambridge, Mass. (with IBM's backing), complete the "ASCC Mark I"
("Automatic Sequence-Controlled Calculator Mark I").  This is the first
program-controlled calculator to be widely known:  Aiken was to Zuse as Pascal
to Schickard.  The machine is about 60 feet long and weighs 5 tons; it has
72 accumulators.

Dec 1943.  Alan Turing and his team at Bletchley Park, near Cambridge, England,
           complete the first version of the "Colossus".  This is a secret,
special-purpose decryption machine, not exactly a calculator but close kin.
It includes 2400 tubes for logic and reads characters (optically) from 5
long paper tape loops moving at 5000 characters per second.

Nov 1945.  John W. Mauchly (pronounced Mawkly; 1907-80) and J. Presper Eckert
           (1919-) and their team at the Moore School of the University of
Pennsylvania, Philadelphia, complete the "ENIAC" ("Electronic Numerator,
Integrator, Analyzer, and Computer") for the US Army's Ballistics Research
Lab.  (Too late for the war and 200% over budget -- problems that would face
Eckert and Mauchly again on later projects.)
        The machine is a secret (until Feb 1946) program-controlled calculator.
Its only memory is 20 10-digit accumulators (4 were originally planned).
The accumulators and logic use vacuum tubes, 17648 of them altogether.
The machine weighs 30 tons, covers about 1000 square feet of floor, and
consumes what is either 174 kilowatts (233 horsepower) or 174 hp (130 kW).
Its clock speed is 100 kHz; it can do 5000 additions per second, 333 multip-
lications per second.  It reads data from punch cards, and the program is
set up on a plugboard (considered reasonable since the same or similar
program would tend to be used for weeks at a time).
        Mauchly and Eckert apply for a patent.  The university disputes
this at first, but they settle.  The patent is finally granted in 1964, but
is overturned in 1973, in part because of the previous work by Atanasoff.

1945-46.  John von Neumann (1903-1957) joins the ENIAC team and writes a
        report describing the future computer eventually built as the
"EDVAC" ("Electronic Discrete Variable Automatic Computer" (!)).  This
report was the first description of the design of a stored-program computer.
An early draft which fails to credit other team members such as Eckert
and Mauchly gets too-wide distribution, leading to von Neumann getting
too much credit, e.g., the term "von Neumann computer" which is derived from
this paper.

Jan 1948.  Wallace Eckert (1902-1971, no relation to Presper Eckert and not
           mentioned again in this article) of IBM, with his team, completes
the "SSEC" ("Selective Sequence Electronic Calculator").  This techonological
hybrid has vacuum tube logic with 8 20-digit registers, 150 20-digit words
of relay memory, and a program that is partly stored but also controlled
by a plugboard.  IBM considers it the first computer.

Jun 1948.  Max Newman, F. C. Williams, and their team at Manchester Univers-
           ity, Manchester, England, complete a prototype machine called the
"Mark I".  This is the first machine that everyone would call a computer,
because it's the first with a true stored-program capability.
        It uses a new type of memory invented by Williams, which uses the
residual charges left on the screen of a CRT after the electron beam has been
fired at it.  (The bits are read by firing another beam through them and
reading the voltage at an electrode beyond the screen.)  This is a little
unreliable but is fast, relatively cheap, and much more compact (with room
for about 1024 or 2048 bits per tube) than any other memory then existing.
        The Mark I uses six of them, but I don't know of how many bits.
        Its programs are initially entered in binary on a keyboard, and
the output is read in binary from another CRT.  Later Turing joins the
team and devises a primitive form of assembly language, one of several
developed at about the same time in different places.
        Newman was the first person shown Turing's 1937 paper in draft form.

1949-51.  Jay W. Forrester and his team at MIT construct the "Whirlwind" for
          the US Navy's Office of Research and Inventions.  The vague date
is because it advanced to full-time operational status gradually.  Originally
it had 3300 tubes and 8900 crystal diodes.  It occupied 2500 square feet
of floor.  Its 2048 16-bit words of CRT memory used up tubes so fast they
were costing $32000 per month.
        This was the first computer designed for real-time work, hence the
short word size; it could do 500000 additions or 50000 multiplications
per second.

Spring 1949.  Forrester conceives the idea of magnetic core memory.  The first
              practical form, 4 years later, will replace the Whirlwind's
CRT memory and render all then existing types obsolete.

Jun 1949.  Maurice Wilkes (1913-) and his team at Cambridge University
           complete the "EDSAC" ("Electronic Delay Storage Automatic Computer"),
which is closely based on the EDVAC design report from von Neumann's group.
This is the first operational stored-program computer of greater than
prototype size.  Its I/O is by paper tape, and it has a sort of mechanical
read-only memory, made from rotary telephone switches, for booting.
        Its main memory is of another new type, invented by Eckert: the
"ultrasonic" or "delay line" memory.  In this type, the data is repeatedly
converted back and forth between electrical pulses and ultrasonic pulses;
only the bits currently in electrical form are accessible.  (The ultrasonic
pulses were typically fired from one end of a tank of mercury to the other,
though other substances were also used.)  In the EDSAC, 32 mercury tanks
5 feet long give a total of 256 35-bit words of memory.

Aug 1949.  Eckert and Mauchly, having formed their own company, complete
           the "BINAC" ("Binary Automatic Computer") for the US Air Force.
Designed as a first step to in-flight computers, this has dual (redundant)
processors each with 700 tubes and 512 31-bit words of memory.  Each
processor occupies only 4 square feet of floor space and can do 3500
additions or 1000 multiplications per second.
        The designers are thinking mostly of their forthcoming "UNIVAC"
("Universal Automatic Computer") and don't spend much time making the BINAC
as reliable as it should be, but the tandem processors compensate somewhat.

Feb 1951.  Ferranti Ltd., of Manchester, England, completes the first
           commercial computer, yet another "Mark I".  8 of these are sold.

Mar 1951.  Eckert and Mauchly, having sold their company to Remington Rand,
           complete the first UNIVAC, which is the first US commercial computer.
It has 1000 12-digit words of ultrasonic memory and can do 8333 additions
or 555 multiplications per second; it contains 5000 tubes and covers
200 square feet of floor.

1951.   Grace Murray Hopper (1906-1992), of Remington Rand, invents the
        modern concept of the compiler.

1951-52.  The EDVAC is finally completed.  It has 4000 tubes, 10000 crystal
          diodes, and 1024 44-bit words of ultrasonic memory.  Its clock speed
is 1 MHz.

1952.   The IBM "Defense Calculator", later renamed the "701", the first
        IBM computer unless you count the SSEC, enters production at
Poughkeepsie, New York.  (The first one is delivered in March 1953; 19 are
sold altogether.  The memory is electrostatic and has 4096 36-bit words;
it does 2200 multiplications per second.)

1952.   Grace Murray Hopper implements the first compiler, the "A-0".
        (As with "computer", this is a somewhat arbitrary designation.)


-- 
Wilson Roberto Afonso  | Instituto de Informatica - UFRGS
wilson@inf.ufrgs.br    | Porto Alegre  -  RS  -  Brasil 
"..If you own a machine, you are in turn owned by it, and spend your time
serving it...."    The Forbidden Tower, Marion Zimmer Bradle



Article #38863 (38954 is last):
From: wilson@inf.ufrgs.br (Wilson Roberto Afonso)
Newsgroups: alt.folklore.computers
Subject: alt.folklore.computers FAQ - Part 03
Date: Tue Mar  9 09:52:27 1993


Archive-name: afc-faq-3
Last-modified: 04-Mar-1993

This is the alt.folklore.computers list of Frequently Asked Questions
(FAQ).  It is maintained by Wilson Afonso (wilson@inf.ufrgs.br)  All
contributions and corrections are welcome, but I'm ultimately
responsible for what appears here.  Contributors are acknowledged, if
possible.

This is a three-part file.  The first part contains mostly generic questions.
The second is a small hitory of computers, and the third is a list of books
which are more or less related to computer folklore.

File 1:
I   - Introduction
II  - Generic questions
III - General folklore
IV  - Origins
V   - Firsts
VI  - Jokes
VII - Net Resources
VIII- Acknowledgement
IX  - Things I am looking for

File 2:
X   - A Chronology of Digital Computing Machines (to 1952)

File 3 (this file):
XI  - List of computer-folklore related books


 -------------------------------------------------------------------------

XI - List of computer-folklore related books


This is a list of computer-folklore related books.  I have no way to keep
it up to date, since I am far from USA, where most of the books are
released.  This list dates from Sept. 1st, 1992.

-----------------8<-----------------8<---------------8<-------------8<--------
: Computer History/Biography/NonFiction Book List
: <version 2.0>
: September 1, 1992

 A good source for the following books is supposedly the Boston Computer
 Museum Catalog.  Call them at 617.426.2800 and ask for one.

=============================================================================
Accidental Empires
 How the boys of Silicon Valley make their millons, battle foreign 
 competition, and still can't get a date.
 Robert X. Cringely
 324p
 Reading MA, Addison-Wesley, c1992
 0-201-57032-7

Accidental Millionaire
 The rise and fall of Steve Jobs at Apple Computer
 Lee Butcher
 224p, ill
 New York, Paragon House, c1988
 0-913729-79-5

Ainsi naquit l'informatique (The Computer Comes of Age)
 The people, the hardware, and the software
 Rene Moreau, Translated by J. Howlett
 227p, ill
 Cambridge MA, MIT Press, c1984
 0-262-13194-3

Big Blue
 IBM's use and abuse of Power
 Richard Thomas DeLamarter
 393p
 New York, Dodd Mead, c1986
 0-396-08515-6

Bit by Bit
 An Illustrated History of Computers
 Stan Augarten
 324p, ill
 New York, Ticknor & Fields, 1984
 0-89919-268-8 (hard)
 0-89919-302-1 (soft)

Blue Magic
 The people, power, and politics behind the IBM personal computer
 James Chposky and Ted Leonsis
 228p
 New York, Facts on File, c1988
 0-8160-1391-8

Breakthrough to the Computer Age
 [???]
 Harry Wulforst
 185p, ill
 New York, Scribner, c1982
 0-684-17499-5

The Computer Entrepeneurs
 Who's making it big and how in America's upstart industry
 Robert Levering, Michael Katz, Milton Moskowitz
 481p, ill
 New York, New American Library, c1984
 0-453-00477-6

The Computer from Pascal to von Neumann
 [???]
 Herman H. Goldstine
 378p, ill
 Princeton NJ, Princeton University Press, 1972
 0-691-08104-2

Computer Lib; Dream Machines
 [texts bound together back-to-back and inverted]
 Ted Nelson
 178p 153p, ill
 Redmond, WA, Tempus Books of Microsoft Press, 1987
 0-914845-49-7

A Computer Perspective
 Background to the computer age
 by the office of Charles & Ray Eames
 174p, ill
 Cambridge MA, Harvard University Press, 1990
 0-674-15626-9

The Computer Pioneers
 The making of the modern computer
 David Ritchie
 238p, ill
 New York, Simon&Schuster, c1986
 0-671-52397-X

The Cuckoo's Egg
 Tracking a spy through the maze of computer espionage
 Clifford Stoll
 326p
 New York, Doubleday, c1989
 0-385-24946-2

Cyberpunk
 Outlaws and hackers on the computer frontier
 Katie Hafner and John Markoff
 368p
 New York, Simon&Schuster, c1991
 0-671-68322-5

The Decline and Fall of the American Programmer
 [???]
 Edward Yourdon
 352p, ill
 Englewood Cliffs NJ, Yourdon Press, c1992
 0-13-203670-3

The Devouring Fungus
 Tales of the computer age 
 Karla Jennings
 237p, ill
 New York, W.W.Norton, c1990
 0-393-02897-6

Early British Computers
 The story of vintage computers and the people who built them
 Simon Lavington
 139p, ill
 Bedford MA, Digital Press, c1980
 0-932376-08-8

Electronic Computers
 A Historical Survey
 Saul Rosen
 Computing Surveys v1#1, March 1969

Fire in the Valley
 The making of the personal computer
 Paul Freiberger
 288p, ill
 Berkeley CA, Osborne/McGraw-Hill, c1984
 ???

>From Dits to Bits
 A personal history of the electronic computer
 Herman Lukoff
 219p, ill
 Portland OR, Robotic Press, c1979
 0-89661-002-0

Fumbling the Future
 How Xerox invented, then ignored, the first personal computer
 Douglas K. Smith and Robert C. Alexander
 ???p
 New York, Quill, 1990
 0-688-09511-9

Hackers
 Heroes of the computer revolution
 Steven Levy
 458p
 Garden City NY, Anchor Press/Doubleday, 1984
 0-385-19195-2

Hard Drive
 Bill Gates and the making of Microsoft empire
 James Wallace and Jim Erickson
 426p, ill
 New York, Wiley, c1992
 0-471-56886-4

The Media Lab
 Inventing the Future at MIT
 Stewert Brand
 285p, ill
 New York, Penguin Books, 1988
 0-14-009701-5

The Micro Millenium
 [???]
 Christopher Evans
 255p
 New York, Viking Press, 1980
 0-670-47400-2

The New Alchemists
 Silicon Valley and the microelectronics revolution
 Dirk Hanson
 364p
 Boston, Little Brown, c1982
 0-316-34342-0

Odyssey
 Pepsi to Apple - A journey of adventure, ideas, and the future
 John Sculley with John A. Byrne
 450p, ill
 New York, Harper&Row, c1987
 0-06-015780-1

The Origins of Digital Comptuers
 Selected Papers
 Brian Randell, ed.
 580p, ill
 New York, Springer-Verlag, 1982
 0-387-11319-3

Portraits in Silicon
 [???]
 Robert Slater
 374p, ill
 Cambridge MA, MIT Press, c1987
 0-262-19262-4

Programmers at Work
 Interviews with 19 programmers that shaped the computer industry
 Susan M. Lammers
 391p, ill
 Redmond WA, Tempus Books of Microsoft Press, 1989
 1-55615-211-6

The Soul of a New Machine
 [data general]
 Tracy Kidder
 293p
 Boston, Little Brown, c1981
 0-316-49170-5

Sunburst
 The Ascent of Sun Microsystems
 Mark Hall and John Barry
 297p
 Chicago, Contemporary Books, c1990
 0-8092-4368-7

West of Eden
 The end of innocence at Apple Computer
 Frank Rose
 356p
 New York, Penguin Books, c1989
 0-14-009372-9

-- 
Wilson Roberto Afonso  | Instituto de Informatica - UFRGS
wilson@inf.ufrgs.br    | Porto Alegre  -  RS  -  Brasil 
"..If you own a machine, you are in turn owned by it, and spend your time
serving it...."    The Forbidden Tower, Marion Zimmer Bradle



