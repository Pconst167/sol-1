<-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><->
<->                                                         <->
<->            The Beginner's Guide to Internet             <->
<->                                                         <->
<->            Written by Weapons Master                    <->
<->                                                         <->
<-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><->

    I remember the day I told one of my friends that I had hacked 
some Unix accounts.  "Five accounts!", I said.  "I hacked five 
unix accounts!"
    "Well", my friend said, "I guess that's cool.  What can you 
do with a unix account?"
    I thought for a minute.  "Hmm...  I dunno."
    Well, that was a long time ago, and since then, I've been 
learning what you can do with a unix account.  The cool thing 
about having an account on a unix is not the processing power of 
the unix.  Those things seem pretty slow, especially once you 
have several users on the thing.  The software on them generally 
sucks, except for a couple cool things you can do.  I mean the 
unix OS is nice, and it's fun being able to run jobs in the 
background, but it's really nothing to get excited about.  
(Though I'm sure some Unix fanatics would disagree with me.)
    Unless your system has access to internet.  Then you've 
stepped into a whole new world.
    What can you do with internet?  Well, here's the main things:
    + Send mail to anyone else on internet (includes Compuserve).
    + Call any other system on internet.
    + Chat with anyone on any system on internet.
    + Call many systems (several hundred) and download files.
    + Play multi-player games with other people.
    + Access outdials to call LD boards for free
    Sounds pretty cool, huh?  Damn straight.  Before I talk about 
how to do all of these things, I'll talk about what internet is 
and how you can be a part of it.
    There's an incredible number of unix systems worldwide, and 
most of them are pretty powerful mainframes or minicomputers that 
are connected to each other with high speed transfer lines and 
dialups.  All these systems combined, plus some outdials, vaxes, 
and other assorted technogoodies make up internet.  If you have 
an account on one of these systems, then you have access to 
internet and actually are a part of internet.
    Everything on internet has an address.  It can be stated in 
two ways, mnemonics or numbers.  Mnemonics looks something like 
this: pogo.ai.mit.edu.  This is the addess of one of the MIT 
unixes.  Numbers look like this: 192.55.239.132.  See the 
similarities?
    Everybody on internet has an address.  If I'm logged in on 
that MIT unix I spoke of earlier, suppose under the account 
"joe", my address would be joe@pogo.ai.mit.edu.  If someone 
wanted to leave me mail, they'd send it to that address.
    So to be a part of internet and access it, you need to be 
logged into a system on intrnet, usually a unix.  How do you get 
a unix account?  Well, that's your problem.  Most colleges and 
universities have several unix systems.  Many have guest 
accounts, but if you can't find one of those, you'll probably 
have to hack one.  But that's no big deal, unix accounts are the 
easiest things in the world to hack, especially if you already 
have access to one account on the system.  If possible though, 
get your own.  That way you can have your own little mailbox, and 
there's less confusion.  Sharing an account can be a pain.
    So how do you do all those nifty things I spoke of above?
Well, in this article I'll give unix examples, because that's the 
systems I work with most, and the ones you'll probably be working 
on.

SENDING MAIL TO SOMEONE ELSE

    This is easy, just type "mail <person's address>".  Type your 
message, and the last line is a line with just '.' and a cr.  The 
mail will be transferred from system to system until it gets to 
where it's going.  If it goes around for a while, and then 
realizes that the address is false (i.e. no such thing as 
frank.ai.ber.edu), it'll be returned to you, maybe within a few 
minutes if you're mailing somebody on your system, maybe within a 
day if it has to go all over the country.  Mail is usually sent 
within 24 hours, depending how far it has to go.

SEEING WHO IS LOGGED IN AT A SPECIFIC SYSTEM

    Type "finger @<system address>", so "who @pogo.ai.mit.edu" would 
see who is logged in on that system.  This is useful to see if a 
system is free, so you can hack it at will, or a system 
administrator is there.  Also good for seeing if one of your 
friends is there, so you can chat with them.

GETTING INFORMATION ON A USER ON A SPECIFIC SYSTEM

    The command is "finger <username>@<system address>", so 
"finger joe@pogo.ai.mit.edu" would give you some info on joe, 
such as when he last logged on, wether he is currently on the 
system, his name, and some other stuff.

TALKING TO SOMEONE ELSE IN REAL-TIME

    Two ways to do this.  One is a two-way chat mode like you get 
on boards.  To do this, type "talk <username>@<system address>".  
It'll page the person on the other end, and then they can type 
"talk" and then your address.  Then you have a two way chat mode.
    If you just want to have a message appear on his console, 
type "write <username>@<system address>".  Then type the message 
you want displayed, and then type ctrl-D.  (At least that's what 
it is on my system.)  The guy on the other end will see "Message 
from <so&so>", it'll beep, and then show your message.

CONNECTING TO REMOTE SYSTEMS

    Use the Unix command "telnet".  "telnet <system address>" will 
connect you to a foreign system.  Just typing "telnet" by itself 
will get you to the telnet command mode.  You'll see the 
"telnet>" prompt.  Then you can type "open <system address>", or 
just abbreviate that to "o <system address>".
    Anyway, when you call, you'll see "Trying...".  If the system 
exists, this shouldn't take more than a few seconds, unless 
you're connecting to something in Europe or Australia.  In any 
event, at this point you can abort the attempt by typing ctrl-c, 
or whatever the break key is on your system.  When you see 
"Connected", you know you've succeded, and it'll tell you the 
terminal escape character, ctrl-[ on my system.  Also, it may say 
"Connection refused by foreign host." or something to that 
effect.  When you call a system, the system probably won't get 
your username (though don't count on this), but will be informed 
of where the call is coming from.  Some systems only accept calls 
from certain systems.  Also, the system could be down for some 
reason.
    Once you've connected, you're communicating with the system 
normally, albeit a little slower due to all the packet switching.  
At any time you can type ctrl-[ (though your terminal escape 
character may be something else), and see the "telnet>" prompt.  
You can just hit enter, and resume your dialog.  Or you can type 
"close" or "c" to close the connection, or "q" to quit.  You can 
also do a shell escape, by typing "z".  The telnet process will 
be suspended, and you are back in a shell.  When you wish to 
resume, you can continue the telnet process by typing "%1".
    Telnet is a hacker's best friend, because from a unix, you can 
call another unix, and from there another, and completely obscure 
your trail.  It is almost impossible to even tell what part of 
the country you are calling from, let alone trace you to your 
home.

GETTING FILES FROM A REMOTE SYSTEM

    There are many ways to do this, but I typically use FTP.  
"ftp" is a Unix command that allows you to connect to remote 
systems and leech their files.  FTP is very similar to telnet in 
command syntax, in that you can type "ftp <system address>", or 
type "ftp" and enter an interactive ftp mode.
    When you connect to a system, assuming successful connection, 
you'll be greeted with:
   Login: (name etc etc)
You DO NOT want to hit return, or the system will send your 
username, and it won't work.  Type "anonymous", as the majority 
of systems support that.  Next it'll ask you for password.  Just 
hit return, or type "anon".  Hopefully, you'll be connected.
    btw usually your username and system location are sent 
anyway.  If you're going to be ftping something sensitive, you 
probably want to be on a guest account.  That way the system will 
only know that it's sending files to "guest@<whatever>", and 
nothing can be traced back to you.
    Once you're on, you'll be sitting at the ftp prompt of 
"ftp>".  There are a variety of commands you can use, mostly for 
finding your way through the remote systems directory tree and 
sending or recieving files.  Here is a list of some of the more 
useful:

quit :disconnect and quit ftp.

ls :show files in current directory.  Shows names only.

ls -l :show files in current directory.  Shows names, filesize, & 
permissions.

cd <directory> :Change current directory.  Syntax is exactly like 
the cd command in unix, i.e. "cd .." will move you back one 
directory, "cd /" will move you to the root directory, "cd 
/usr/lib" will move you to the directory /usr/lib, and so forth.

recv <filename> :File is sent from the remote system to your 
system.  Wildcards are not allowed.  The file will be copied into 
your current directory.

mget <filename> :Like "recv" above, but wildcards are allowed.  
However, confirmation is requested for each file.

? :list commands availabe in ftp.

    Transfer times are extremely fast, as least to someone like 
me with a 2400 baud modem.  A 100k file might take eight seconds.  
Times do vary though.
    btw you probably don't need me to tell you this, but feel 
free to ftp the /etc/passwd file from a remote system, and use a 
password hacker to bust in the accounts.  It's one of the best 
uses of ftp.

PLAYING ONLINE GAMES ON A UNIX

    This varies greatly from machine to machine.  I've seen some 
good multi-player games out there, and heard of many more.  
Hopefully you can find a system with one.  If not, my only 
suggestion is to get the source somewhere, and try to compile it 
on your machine (a tedious task).

PLACES TO CALL

    So now that you know how to use all these tools, you need 
someplace to ftp to or telnet from.  Well, here are a few, but 
this list only scratches the surface.

Guest Accounts:            login
pogo.ai.mit.edu            guest
geech.ai.mit.edu           guest
churchy.ai.mit.edu         guest
gnu.ai.mit.edu             guest

Internet BBS's:
(All these places are PD, but that's life.  But in my opinion, 
there's only one place to call, and that's mars.  It has multi-
user chat, a library with ALL the phracks, a good TelComm 
section, and you can often find some elite people there.  (If 
not, you can rag on the lmaers.)  Anyway, if you see a guy named 
Weapons, say hi.  It's probably me.)

address (mnemonic)    (numeric)   login   details
* indicates that it recognizes rlogin option -l login correctly
vaxb.acs.unt.edu      129.120.1.4  bbs     Small BBS for U of N. Texas
samba.acs.unc.edu  128.109.157.30  bbs    *XBBS system
uafcseg.uark.edu   130.184.64.202  bbs    ?U. of Arkansas; usenet, irc
mars.ee.msstate.edu   130.18.64.3  bbs    *Full-screen (neat)
naval acad. bbs    131.121.161.71  <cr>   ?Single-user system, so keep trying
tolsun.oulu.fi        128.214.5.6  box    *Finland; IRC, Usenet
vtcosy.cns.vt.edu    128.173.5.10  ---    ?Must apply for an account
quartz.rutgers.edu      128.6.4.8  bbs    *Citadel system, very active
star96.nodak.edu  134.129.107.131  20     ?UnaXcess BBS
 
Libraries (Unix shareware, mostly):
melvyl.ucop.edu          31.0.0.11  California State libraries
  also 31.0.0.13, 31.1.0.1, 31.3.0.1, 31.1.0.11
library.bu.edu       128.197.4.200  Boston Univ. Library
nike.cair.du.edu      130.253.1.14  login as carl
rlg.stanford.edu        36.54.0.18
nervm.nerdc.ufl.edu 128.227.128.80  contact fcla@nervm for auth. code
bootes.unm.edu          129.24.8.2  login as student0 through student7
emuvm1.cc.emory.edu    128.140.1.4  press <cr>, DIAL VTAM, LIB, press PF1
ctw.wesleyan.edu    129.133.21.251
lias.psu.edu         128.118.25.13  Use TERM to set termtype
vma.cc.cmu.edu        128.2.253.40  port 1
merit.edu                 35.1.1.6  Which Host? mirlyn
delcat.udel.edu       128.175.13.6  Delcat

Thanks -
    To The Coroner for being a good guy, and giving me information 
when I least expect it.
    To The Raging Golem for helping distribute my files.
    To L. for a putting up a way cool board.
    To D. for standing still in the Photon arena, so I could 
shoot him a whole bunch of times and rack up a pretty good score.

by Weapons Master

Downloaded From P-80 Systems 304-744-2253

