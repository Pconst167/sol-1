                            What is Piracy?
                                  by
                            Ron  J. Goodman

     Am  I a software pirate? The people at Lotus would claim I  am.  I 
disagree. In fact, I think the term "software piracy" needs a new  def-
inition. So let's talk about that first. 
     Okay. Just what is a pirate? The audio, video, and film industries 
know.  They  have real pirates. These are people who make  and  package 
duplicates  of  records, tapes, and films; for  distribution  and  mass 
sale.  They are offered to the public via apparently normal outlets  at 
heavily  cut prices, and the original artists get nothing.  There's  no 
doubt whatsoever that this is illegal. The equivalent would be to  make 
duplicates  of  the Lotus disks and documentation (probably  minus  the 
copy  protection), and sell the package on the open market for 10 %  of 
Lotus's price. I've read that there are shops in China and Japan  which 
do exactly that. I don't; I never have, and my intention is that I nev-
er will. Neither do I know anyone else who does it, has done it, or in-
tends  to do it. And I've yet to hear anyone deny that piracy  of  that 
sort is out-and-out theft, as illegal and immoral as any other form  of 
theft. 
     What I do do, without hesitation or qualm, is make as many  copies 
as  I like of any software I buy, and use them in any way I  choose  on 
any machine I happen to be using. After all, I paid for the damn thing. 
I  don't  care what the so-called "shrink-wrap" license might  say.  It 
isn't worth its weight in horse manure. Any unbiased attorney will tell 
you there's no such thing under the Law as implicit agreement to a con-
tract. Contractual obligations must be agreed to explicitly and specif-
ically.  Even then, they're not binding if they violate  certain  legal 
criteria.  (For  instance, the statements on the back  of  parking  lot 
tickets that say the lot isn't responsible for loss or damage are mean-
ingless. So are many of the clauses in rental leases and agreements.) I 
might use the software on any of several machines I have at home. Or  I 
might  take one or more of my computers to a job, and use the  software 
there......I  work on a contract basis, and do this fairly often. Or  I 
might take just the software to work, and use it on a machine that  be-
longs to the client company. None of these things is legally or morally 
wrong.  Software is a tool for working on information; just as a  drill 
is  a  tool for making holes. When I buy that tool, I'm  not  buying  a 
"license"  to use it only in vendor-specified ways. Once I buy it  it's 
mine,  and I have the right to use it any way I damn well please;  with 
the  single exception of making copies to sell at a profit. After  all, 
Tektronix doesn't try to tell me I can't take one of their scopes  with 
me  to  use at an on-site job assignment. Why should I let  a  software 
publisher tell me not to use a copy of a program I paid good money  for 
in exactly the same way? 
     Of  course, if the program happens to be Lotus 1-2-3, you  "can't" 
make a copy to take to work. Which brings us to the issue of copy  pro-
tection. 
     One of the reasons I despise Apple Computer and would love to  see 
them go under is that, as far as I know, they originated the concept of 
selling copy protected software. This was (and still is) unheard of  in 
the world of CP/M. The first time somebody mentioned copy protection to 
me, I thought the guy was kidding. Like many others, the first thing  I 
do  with  a new software purchase is make backup copies,  and  I'm  not 
about to knowingly spend money for software that tries not to let me do 
that. 
     The  key word is "knowingly." Most of these  outfits  conveniently 
"forget" to mention in their ads that their software is copy protected, 
so it's possible I might buy such a package by mistake. It hasn't  hap-
pened yet; but it could. So what could I do then? 
     A  moralist  might say, "Return it for a refund." But  even  if  I 
agreed, it wouldn't work. The "shrink-wrap" license prevents it.  While 
it  wouldn't hold up in court; there's no way except going to court  to 
force the company to refund your money, once you've opened the package. 
And you're not going to find out about the copy protection until you do 
that. A classic catch-22, right? 
     Wrong.  Because there remains the sweetness of revenge.  I  figure 
that,  if I get in an argument with someone who tries to gouge  out  my 
eyes,  he has no legitimate beef when I block his attempt and ruin  his 
future sex life with a well-placed foot. Copy protecting your  software 
tells me that you feel no obligation to be concerned with the  conveni-
ence of your customers. I therefore need feel no obligation to contrib-
ute to your profits. I'll make it stronger. Doing that puts you  beyond 
the  right to any consideration whatsoever......just like the dude  who 
tries to take out my eye in a fight. 
    Normally,  I'd simply refuse to buy your product. The only way  I'd 
do  so  would be if I didn't know it was copy  protected,  because  you 
"forgot"  to mention that little fact in your ads. Then, as far as  I'm 
concerned,  you've added fraud to your previous sin, and you're  really 
beyond the pale. 
     So the first thing I'd do would be break the copy protection.  The 
second  thing would be to disseminate the information on how  to  break 
the  copy protection as widely as possible, and maybe even give away  a 
few of the unprotected disks. In spite of popular belief, that last  is 
not  illegal. Notice: I said "give," not "sell." The same unbiased  at-
torney will confirm that, for nonprofit purposes, you can legally  give 
away quite a few copies of copyrighted material, such as software.  For 
individuals, the limit is 100. (Beyond that point the Law figures  that 
no  one has that many close friends, so you must be making a profit  of 
some sort.) 
     I wouldn't deliberately buy a copy protected software package  for 
this  purpose. I've got better ways to use my time than  breaking  copy 
protection.  So as long as you clearly label it as such in your  adver-
tising, your copy protected software packages are safe from me.  Though 
I'd like to see it, a consumer protection law banning the sale of  copy 
protected software probably isn't in the cards. However, a law  mandat-
ing that copy protected software must be unambiguously labeled as  such 
in  all advertising would be to the advantage of everyone in the  field  
(except people who deliberately leave it out in order to sell to people 
like  me).  In the meantime, several companies are  marketing  programs 
such  as CopyRight and Copy II PC, which are specifically  written  for 
the  backup of protected software. This is carrying my  inclination  to 
disseminate the information as widely as possible to the ultimate  deg-
ree. If I could control it, the place in Heaven for these people  would 
be  assured,  with the mansions and palaces already prepared.  While  I 
devoutly  hope that there's a special and very hot corner of  Hell  re-
served,  along  with the exclusive attentions of  the  nastiest  demons 
available,  for people like Vault Corporation, who not only invent  and 
market copy protection schemes, but even, (so I've read), have had  the 
colossal  gall to file a Lawsuit against some of the good guys   (Quaid 
Software). 
     A reasonable definition of a software pirate would be someone  who 
makes unauthorized copies for the purpose of creating illegal  profits. 
The  copying  practices described above are unauthorized; but  none  of 
them involves either illegality or a profit motive. Therefore, I  don't 
think they can honestly be described as piracy. 
     What  about the recent flurry of lawsuits? Notice; these have  all 
been against companies. The right to give away copies is only clear  in 
a non-profit situation. A company that buys a single Lotus package  and 
makes  50 copies of the disks and documentation for the use of 50  emp-
loyees  on 50 different machines is on much shakier legal  ground,  be-
cause the company exists for the purpose of making a profit. Even then; 
notice  also that so far, none of these cases has gone to Court.  Lotus 
et al have been careful to sue only companies that they were sure would 
settle without fighting them. This is because it's by no means  certain 
that  they'd win. Eventually, of course, someone is going to  miscalcu-
late and sue somebody who will make them prove it. The Court fight when 
that happens should be very interesting, and the results illuminating. 
     The remaining issue is pricing. 
     In  scores or hundreds of stores and mail order outlets  all  over 
the country, double-sided five inch disks are available for less than a 
dollar apiece. The cost of manufacturing a software package for sale is 
simply  the cost of the media used plus the cost of printing the  docu-
mentation.  Even adding the cost of packaging and mailing, it's  pretty 
hard to get the total above $10 or so. Now, the standard for mail order 
pricing is for the price to be three to five times the cost of  produc-
tion. On that basis, the maximum legitimate price for a software  pack-
age  would be around $50. I'll admit that that might be a  little  over 
restrictive; though Borland International and some others are making  a 
lot of money selling some very heavy duty software in that price range. 
But even granting that now and then it might be possible to justify  as 
much as fifteen times the production cost, the $500 to $2000+ prices on 
some  of this stuff remain outrageous. In fact, they are  neither  more 
nor less than a flat out attempt to rip off the customer. 
     This last is going to produce outraged screams of, "What about our 
development  costs?" Well, what about them? That argument is a  classic 
case of "Figures don't lie; but liars figure." The cost of writing your 
first  program for sale, if any (it's zero if you write it yourself  in 
spare time, which means in time you couldn't otherwise have gotten paid 
for),  is part of your start-up cost; just like the cost  of  acquiring 
the  computer to write it on. Once in operation, writing  new  programs 
and  improving old ones becomes part of your overhead.  Naturally,  you 
have  a right to recover these costs out of your profits. The 200 %  to 
400 % profit margin is designed to allow for that, if you've got a dec-
nt product and a well run operation. After all, few programs take  more 
hours  to write and debug than it takes to write a 100,000 word  novel, 
and  how  many novels go for $50 a book? Never mind $2000+.  The  usual 
argument  given at this point is, "Novels sell more copies  than  prog-
rams." Bull. WordStar, Lotus, Microsoft Basic, MSDOS, CP/M, and lots of 
others have sold in the hundreds of thousands to millions range. That's 
the best-seller range for a novel, and there isn't that big a  percent-
age of best sellers out of all the novels published. Ask any author. 
     If you don't buy that argument; try this one. Compare the software 
manufacturer's situation with that of a hardware manufacturer. Take any 
one of the multitude of IBM PC add-on boards as an example. It takes at 
least as much in the way of skill, talent, and time to develop a  soph-
isticated  board  for a modern microcomputer as it does  to  develop  a 
large  program, and a hell of a lot more in the way of capital  invest-
ment.  Not only do you need the computer it's going to be run  on;  you 
need  a lab full of expensive test equipment to get the breadboard  de-
bugged and running, usually in wire wrap. Then you have to send it  out 
to get a printed circuit card made; after which you have to go  through 
the whole process again, because the PC card is always going to come up 
with  some  bugs that the wire wrap prototype didn't have.  Of  course, 
along  with  this you need a full scale software  development  project, 
because  any such board is going to require some custom software to  be 
useful and salable. Then, once you get debugged production  prototypes, 
you  have to invest another big chunk of cash to get  into  production. 
You  have to set up to buy the parts (including having your  PC  boards 
made); set up an assembly line to put the cards together; hire  assemb-
lers  to do the work; set up a test facility with another batch of  ex-
pensive lab equipment to burn in and check out the assembled cards, and 
hire  some good technicians to do the checkout and fix the  bad  cards. 
There'll  be lots of bad cards; particularly at the beginning. At  this 
point,  you're finally ready to start shipping, and begin to  get  your 
investment back. 
     Contrast this with manufacturing software. Once you've written and 
debugged your program, you don't need to invest a penny in equipment to 
make duplicates for sale. All you need is the computer you already used 
to  develop the software. Your local print shop will run off the  docu-
mentation for you at a cost of one or two cents per page, depending  on 
how  many copies you get at a time. You merely place  your  advertising 
and  wait.  When the orders start coming in, it takes you five  or  ten 
minutes  at the most, starting from scratch, to get each one  ready  to 
ship.  That's  why so many more people go into the  software  than  the 
hardware business. It's orders of magnitude easier and cheaper to do. 
     And yet...try this. Sit down with a parts catalog, and the techni-
cal  manual for any of your plug-in cards that includes a schematic  or 
parts  list.  Add up what it would cost you to buy the parts  to  build 
that card on a standard wire wrap prototype board. You'll almost always 
come  up with better than 50 % of the price for the board from  a  mail 
order  house; sometimes more than 100 %. How can this be? Is the  manu-
facturer  a charitable institution which is losing money, as the  soft-
ware  houses claim they would if they charged a reasonable markup  over 
their production costs? 
     Not hardly. The manufacturer can buy the parts in quantity cheaper 
than  you can in singles, and has invested a lot of time and  money  in 
reducing  his labor cost per unit. He's pricing at a reasonable  markup 
over his real costs (remember, the mail order house also makes a  prof-
it), and making lots of money. In short, he's basing the list price  on 
a  fair  profit margin, rather than on G-R-E-E-D and "All  the  traffic 
will bear." 
     If this doesn't convince you that most software prices are set  on 
a  basis  of greed and "All the traffic will bear,"  nothing  will.  Of 
course,  not  all the publishers do this. Borland  International  sells 
lots  of heavy-duty software in the $50 to $100 range, Some  for  less. 
They  have one of the biggest success stories in the industry. And  how 
many  unauthorized copies of Turbo Pascal have you ever seen? I've  yet 
to run into one, and have passed up more than one opportunity to get  a 
copy for free. 
     Some  other software houses have followed suit. A couple of  years 
ago,  for instance, Eco-Soft dropped their full C language compiler  to 
$49.50.  At the time, I was working in an engineering department  where 
four of us had been looking for C compilers. Now, if we'd decided on  a 
compiler  with  ATTWB pricing, we might've pooled our money,  bought  a 
package  in one name, and made copies for the other three. (The  vendor 
isn't  really hurt by something like that, because he's made a sale  he 
wouldn't  have  made otherwise.) In this case, each of  us  bought  the 
package individually, because we all agreed that the practice of offer-
ing  non-copy  protected, reasonably priced software deserved  all  the 
positive reinforcement we could give it. That's the mirror image of the 
revenge motive I discussed previously, which is at least partly to give 
negative  reinforcement against the sale of overpriced  copy  protected 
software, unlabeled as protected in the ads. 
     That,  I  think, is the real answer to the "problem"  of  software 
"piracy."  Just as I've yet to run into an unauthorized copy  of  Turbo 
Pascal  among the dozens of times I've encountered the program  in  the 
last  couple of years; I've yet to run into an authorized copy of  cer-
tain useful, popular, but overpriced programs...which, for obvious rea-
sons, I won't name here. 
     I think....at least, I hope...that people like Borland,  Eco-Soft, 
and  the others who sell solid, reasonably priced,  non-copy  protected 
software are going to take over. People like Lotus and Vault will eith-
er have to bow to the inevitable and go along, or wind up in Bankruptcy 
Court.  Neither would break my heart. It seems as if the trend has  al-
ready started. Should it go to completion, the "piracy problem" will be 
a thing of the past. There'll always be a few people who are simply out 
to get something for nothing, but the majority of "unauthorized" copies 
are made for motives which are quite different, as I've tried to  show. 
If  the shakeout I expect occurs, those motives will disappear.  And  I 
seriously doubt that the real pirates will ever make a noticeable  dent 
in the industry, particularly under those conditions. 

                               AFTERWORD

     I wrote the above about two years ago. Since then, the shakeout  I 
predicted has been happening. In fact, at this writing, Lotus seems  to 
be almost the ONLY company clinging to copy-protection, though  they're 
still a long way from bankruptcy. However, the virtually universal  bad 
feelings created by their greed-motivated "look and feel" lawsuit might 
just accomplish that little thing.
     Things do sometimes work out for the best.

     Comments and/or questions? Send them to:

                         Ron J. Goodman
                         3720 Northfield Rd.
                         Apt. 215
                         Warrensville, Ohio 44122

P.S. If you'd like a version of this file that will print out as clean,
     micro-justified copy under WordStar 4.0, $5.00 to the above address
     will get it for you.