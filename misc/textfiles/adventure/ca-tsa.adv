================================================================= 
This files constitutes the text of "Computer Adventures, The 
Secret Art".  Following Bruce Sterling's example with "The 
Hacker Crackdown", and cribbing some of his ACCEPTABLE USE POLICY, 
I am now releasing the text of the book as "literary freeware". 
 
Amazon Systems, who originally published the book, have approved 
the electronic distribution of its text in this form, and, indeed, 
expect to make a number of sales of the actual book on the back of it! 
================================================================= 
 
ACCEPTABLE USE POLICY 
 
The documents on this disk are not commodities.  They're not for sale. 
You didn't have to pay any money to get them.  If you did pay anything 
to see this stuff, you've been ripped off. 
 
You can copy them.   You have my permission to do that. 
You can upload them onto boards or discussion groups.  
Please do! 
 
You can print them out. 
 
You can photocopy the printouts and hand them around as long as you don't 
take any money for it. 
 
But they're not public domain.  You can't copyright them as I've 
already done that.  Attempts to pirate this stuff and make money from 
it may involve you in a serious litigative snarl; believe me, for the 
pittance you might wring out of such an action, it's really not worth it. 
 
And don't alter the text, either; that would be pointless. 
 
It's a couple of years since I wrote the book, so I've added 
notes between *** *** where my opinion or where facts have changed. 
 
Mail me and give me your opinions, if you like. 
 
===================================================================== 
 
If you'd like a copy of this book in its original paperback form, 
signed by the author, typeset!!, very much easier to consult than 
a pile of printouts, with full colour cover art and full of super  
illustrations from Andrew Hill, telephone, email or write to: 
 
Amazon Systems, 
Lodge Hill Road, 
Farnham, 
Surrey, 
UK GU10 3RD. 
 
tel (+44) 252-716669 
 
Cost UK pounds 3.00 
     US dollars 4.50 
     UK post free 
     Overseas Post UK pounds 1   US dollars 1.50 
 
     VISA / Mastercard accepted for telephone/postal orders. 
 
Gil Williamson  August 1994. 
 
gil@cix UK 
 
Compuserve 100271,761 
 
 
  
               Chapter 1 
 
               Introduction to the Secret Art 
 
There is no doubt that the writing of adventure games is an art, in  
the same way that writing a book or play is. It is also a secret art  
in that a only a handful of game writers seem to be able to produce  
a gripping game. 
 
I have carefully analysed the features of successful games, and present  
them here in the form of a Do-It-Yourself manual. This book reveals  
the secrets of how to plan, how to write and how to sell computer  
adventure games, also called `interactive fiction'. Irrespective of  
whether your game is a pure text adventure - for some the only `real'  
adventure - or a real-time graphic adventure, or even a text adventure  
with graphic illustrations, the principles of design are very similar. 
 
Is there any point in trying to break into this difficult marketplace?  
Most certainly. There is a shortage of games with the essentials of  
a good adventure, which are plot, atmosphere, challenge and a sense  
of winnability. Advances in technology are much less important to  
the adventure game enthusiast.  
 
 Although the book assumes that you have played one or  
two computer adventure games, and that you therefore understand their  
general structure, it does not assume any programming knowledge. Some  
basic definitions are given in the table overleaf, and the chapter  
on Architecture describes and defines the various elements of an adventure  
in more detail. 
 
  Terms used in this book: 
 
A `Game' takes place in: 
 
`Locations' (or Scenes or Rooms). 
 
`Characters' (People, Monsters etc.) populate the Locations. 
 
 An important Character is the Player 
 Character who represents the game player. 
 
`Items' (or Objects or Nouns) are contained in these Locations or  
may be in `Limbo' - a sort of storehouse for Items whose location  
has not yet been decided - or may be within another Item, or may be  
carried by a Character. 
 
It is also possible for a Character to be contained in an Item. 
 
The player interacts with the game by means of `Commands' input by  
keyboard or other input device. 
 
              A Sexist Note: 
 
In this book, for simplicity, I have used the terms `he' and `him'  
in reference to the player. I do, of course, realise that many ladies  
of the feminine gender are also players, so please accept `he' as  
`he/she' and `him' as `him/her' throughout.  
 
 
               Chapter 2 
 
                   How to Present  
       your Game  
- Text or Graphics? 
 
Most of the comments made in this book are relevant to all types of  
adventure, however presented, but there are always pros and cons.  
This chapter outlines some of the choices and consequences of  adventure  
graphics and sound. 
 
              Presentation  
 
Often, the game-writing system you use will have as much influence  
on the format of your game as anything else. There are some notes  
about game-writing systems in Chapter 6, and in Appendix A. Ensure  
that the medium you choose is adequate to the adventure you plan. 
 
In most adventure games, even those with considerable graphic and  
audio illustration, text is also very important. When you play a text  
adventure game, you probably find that the scenes you create for yourself  
in the mind's eye are just as vivid as any screen image could be. 
 
A new genre of `arcade' adventure games is now becoming available,  
but for the few game writers lucky enough to belong to companies prepared  
to invest in these products, there are still many size and portability  
restrictions that are not experienced by text game writers. Writers  
of arcade adventures would do well to heed the tenets of good design.  
Razzamatazz may sell an individual game, but it will not sell a series. 
 
Think carefully before deciding your game needs graphics. After all,  
though it is possible to print lavishly illustrated books much more  
cheaply nowadays, publishers seldom, if ever, think of illustrating  
a detective novel or book of short stories. In the computer world,  
though word processors and spreadsheets are presented in ever more  
elaborate guises, the properties of late 1970s Electric Pencil and  
Visicalc are still the important elements of these products. 
 
Any game written for a particular piece of hardware will transfer  
most easily to other hardware if it is text-only. The cost and difficulty  
of transfer from machine to machine increases in direct proportion  
to the sophistication of the graphics and audio effects delivered. 
 
Again, many computers in common use, such as IBM PCs or VAXes have  
little or no graphics or sound capability when compared with Atari  
and Commodore games-oriented hardware, and text adventures have become  
a favourite with users of such machines. 
 
              Images: 
 
The technology of screen images, together with the restrictions of  
RAM, backing store and development time, lead to three main types  
of graphic associated with an adventure that can be played on a personal  
computer: 
 
     Hand-drawn still scenes of greater or less quality,  
sometimes with the facility to include characters and items that the  
player character can see; 
 
Digitised still images (sometimes grouped so that a cyclic movie-  
like effect can be delivered); 
 
Arcade-style playfields, sometimes drawn with perspective but operated  
in a 2-dimensional `Platform' format, where the player character,  
other characters and items actually appear, and move appropriately.  
The player character can manipulate the screen environment.  
 
Adventures with still or almost still images often allow the user  
to switch off the pictures, so that the user is reduced to a text  
adventure, with a better response time and more space on the screen  
for informative text. 
 
In the `playfield' style arcade adventure games, or those which depend  
on the use of icons and mice and menus, the total number of locations  
in the game is often restricted, as is the richness of the game. 
 
Some graphic games, I feel, are rather spoiled by having all possible  
verbs on pull-down menus, leaving little or no scope for imagination  
on the part of the player, and there comes a point where real-time  
events are happening on the screen and the game is verging on an arcade-style  
game, or a wargame. 
 
My own personal opinion is that text is the most suitable medium for  
adventure games, but that optional illustrations, well-designed, can  
enhance enjoyment in the same way that good illustrations in a book  
do. Having said that, the shareware game-writing product AGT, which  
I favour, is text only. 
 
In any event, the aspiring adventure writer will find that most game-writing  
systems currently available concentrate on delivering a text adventure  
(with optional still graphics).  
 
*** One or two systems for graphic adventures are now beginning to 
emerge *** 
 
Before leaving the subject of image, it is worth mentioning a useful  
advance on the old scrolling screen technique used in the early adventures.  
This is the `windowing' technique which allows the screen to be broken  
into various sectors such as: 
 
     - Text from the game 
- Graphic 
- Inventory 
- Command 
- Exit directions 
- Map 
- Player status. 
 
Some of these windows may be multi-use - the graphics and map window  
often being the same one. 
 
              Sound Effects and Noises Off: 
 
Though sound may sometimes be used to enhance a game, it is a mistake  
to make proper play dependent on sound. This is not because some players  
are deaf, or want to play while wearing their personal stereos, but  
because adventurers may not wish to disturb those around them with  
synthesised dalek voices, beeps and  laser  blasts. In  my  opinion, 
sound  should  always  be capable of being switched off without spoiling 
the game. 
 
*** The advent of sound boards is allowing sound to become more useful 
and usable *** 
 
 
               Chapter 3 
 
               How to get your Ideas 
 
              The Style of your Adventure: 
 
There are a number of clear forms in which an adventure can be placed.  
The first, and most common, is the one devised for the original Colossal  
Cave adventure. Each scene and its contents are described or drawn,  
and the player is free to attempt to move around, pick up and drop  
items and take action. 
 
In the second form, a simpler one, the scene and contents are described  
or drawn, but the player has a very few alternative actions he can  
take. These alternatives are made clear to the player, and he simply  
selects alternative 1, 2, 3, or 4 etc. The consequences of each alternative  
tend to be more far-reaching than those of the other style of adventure.  
Such adventures resemble those children's interactive books which  
have a page for each situation, and where the reader is invited to  
turn to different pages to see the results of the various actions  
he can take. 
 
A third main stream of adventures is the `role-playing' analogue,  
where there is emphasis on companions working as a team, and attributes  
such as strength, dexterity, stamina, and intelligence are given to  
each character. Magic spells and random combat play a strong part  
in such games, and it is sometimes possible for the player or players  
to act on behalf of more than one character in a single playing session. 
 
 These three basic styles often merge and mingle with each  
other, but it is important to decide the style of your adventure before  
embarking on writing it and maintain the style throughout. 
 
              Inspiration: 
 
It is important to start with a new and different game concept every  
time.  
 
As you plot the game, it will keep trying to resemble other games,  
but you must resist the temptation to go along with these diversions.  
The 1988 AGT Game Contest featured a game based on a Wagner Opera,  
and another based on an SF short story. Both were original concepts  
for an adventure game, and made you want to play them in a way that  
a clone of Zork would not.  
 
On the other hand, there is always room for a well-written satire,  
though PORK has probably spelled the end for Zork satires. It is so  
important that your player's enjoyment is not dependent on him having  
played a certain game. 
 
I have plot outlines for dozens of games, ranging from the ascent  
of mountains to underwater treasure hunting, from a journey on the  
London Underground system to a quest in classical Greece, from a round  
of golf to an E E Smith-style Space opera. I keep them in a spiral  
backed notebook, and keep adding ideas as they occur, until one becomes  
unrefusable and it spills out into implementation. There! I've given  
you six ideas in one breath, none of which closely resemble any game  
I've played. 
 
Very few adventures even remotely approach realism, which is why it's  
a good idea to base them in an artificial, or at least very constricted,  
world. Use consistency in creation to communicate the atmosphere. 
 
An idea should appeal before you consider it for game status. Whenever  
I enjoy a book or movie I consider how well it would translate to  
a game. Occasionally, something will just hit the spot, and it becomes  
a feature of one of your games in the pipeline. The London Underground  
concept grew out of a idea to optimise tube travel in London, not  
a game at all. The quest in classical Greece came from a Sprague de  
Camp book called `An Elephant for Aristotle'. As an ardent, but inexpert,  
golfer, I find that the situations one finds oneself in on a typical  
round more closely resemble `Lurking Horror' than they do `Leaderboard'! 
 
One subject which can be rather delicate is Pornography. In particular,  
Leather Goddesses has a mildly pornographic theme, handled, I think,  
quite tastefully and amusingly. Leather Goddesses takes care to allow  
female players, and delivers alternate text and characters for them.  
Other games which go into much more detail on the mechanics of sex  
are much less appealing, and often insulting to female audiences.  
The buyers of such games would not be the mainstream of adventurers,  
and the games lack subtlety, even when compared to `girly' magazines. 
 
 Once an idea has come to you, you must nourish it for  
a while to give it full value. What you do is to add all the extra  
features the game will support in the form of a `bull session'. In  
this manual, Chapters 4 and 5 are a huge mine of ideas on which to  
base plot elements. I work best by myself, with the Hi Fi turned up  
loud and a pencil and paper in my hand. Drawing a map will often suggest  
other features and plot elements. Reading the book that sparked the  
original inspiration may feed more ideas, and reading books on a similar  
theme should also help. Working with a like- minded friend is also  
a good technique. 
 
              More Theme Ideas: 
 
     The Happy Return:   
Instead of starting the adventure at a point before the quest begins,  
try starting it where the precious item has been recovered, and the  
player has to fight his way back to civilisation. This technique is  
useful for putting the player into the thick of the action early in  
the game. 
 
Breakout:  
A similar idea is to start the game with the player imprisoned in  
some way, and he must escape. 
 
Break-in:  
Penetrate the enemy defences, and free the prisoners - the Teheran/Entebbe  
approach. 
 
Instruction:  
Make your player find his way around the ruins of Knossos, examining  
wall paintings and artefacts. 
 
Expert System:  
Most adventure-writing systems can be used to develop complex diagnostic  
programs for simple situations. 
 
Skirmish:   
Try setting the scene of the game as a relatively unimportant incident  
in a huge Worldwide (to hell with the expense - make that inter-Galactic)  
campaign. This is a super lead-in to a series! 
 
First Contact:  
Explore unexplored territory, excavate archaeological remains, meet  
strange alien peoples and try to avoid shooting them. Have the adventurer  
find some peaceful contact mechanism. 
 
               
 
              Basing your Adventure on an Existing Work: 
 
Whereas in the USA, a copyright owner has to register his copyright  
formally and announce it on the work, in the UK and Europe generally,  
copyright infringement can take place even on unpublished work. 
 
Copyright is not given to ideas, plots or themes, however original. 
 
In the UK, copyright is infringed by the reproduction of any substantial  
part of a copyright work without permission. `Substantial' is hard  
to define. Even a very small quote can qualify if it is important  
to the work as a whole. 
 
In the USA, copyright is infringed by quoting sections of a copyright  
work except for the purposes of non-commercial scholarship, comment  
and news reporting. 
 
Therefore, although it is tempting to use an existing work as your  
basis, you must be extremely careful not to infringe copyright. It  
is a shame to devote lots of work to a game that can never be published.  
It is, perhaps, safer to write an adventure `..in the style of...'.  
Excellent examples of this genre exist. 
 
Another pitfall is provided by Trade Marks. You will find that the  
inspiring name or phrase you might like to use in your game title,  
such as `Batman', `Star Wars', `Dungeons and Dragons', `Popeye' or  
`Lord of the Rings' is someone's registered trade mark, so steer clear  
of  these, too. 
 
Apart from Copyright or trade mark infringement, there are a number  
of problems with using an existing work as your basis. If a player  
has read the book, or seen the movie, he will expect a resemblance  
between your plot and its plot. If you reproduce the plot of the work,  
then it becomes easy to solve. If you don't, the player is disappointed.  
Again, no adventure game, text or graphic, will exactly reproduce  
a book or movie. What the adventure game specialises in is the interaction  
of the game with the player. 
 
I can well remember having a lot of `wheelspin' at the start with  
The Hobbit and other Tolkienesque adventure games, just because the  
plot didn't turn out the way I expected. Another disadvantage is that  
the solution to a problem in a book or film is often based on a character  
having a bright idea out of the blue. This is difficult to suggest  
to the player without broadcasting the solution or is boring to re-enact  
in the adventure. 
 
Probably the best middle course is to borrow the atmosphere and technology  
from your chosen work, but to build your own totally new plot into  
it.  
 
               Chapter 4 
 
               The Plot Thickens 
 
Adventure games offer a feeling of involvement and interaction which  
can surpass even the most exciting book or movie, and it seems a pity  
not to make the most of them. This chapter contains over thirty main  
categories of feature, each of which can spawn hundreds of plot elements. 
 
I advise you to work out a plot before you start writing the adventure.  
I say A plot, not THE plot, as you may contract, extend or modify  
the plot as development continues. 
 
If you sit down to write an adventure from beginning to end, it will  
be a very thin and insubstantial piece of work. You need time to develop  
the theme and plot.  
 
I carry around a spiral-backed reporter's notebook - the poor man's  
laptop - which goes in my briefcase to work, sits beside me as I earn  
my living, and sleeps on the bedside table at night. Every time I  
have one of my brilliant inspirations, I note it down before the damned  
thing escapes again. In fact, a sharp pencil with an eraser on the  
end and a trusty notebook are better than a laptop for this purpose  
- I've tried both systems! 
 
Into this notebook go the maps, the characters, the clues, the traps  
and the problems for the next adventure. 
 
I find the maps to be the most fruitful source of inspiration. Very  
often, a map or the plan of a building can suggest a plot element  
that no amount of abstract thought could generate. 
 
It is also handy to jot down character attributes so that you can  
keep the personalities consistent. 
 
A good adventure does not just fall into your hand like a primed hand-grenade.  
It requires a lot of preparation, thought and creativity. 
 
If you finish writing the adventure with the same set of plot elements  
as you started with, then you have every right to be surprised. Given  
a good basic theme, the very act of developing the details of the  
adventure should suggest other plot elements, which will gradually  
displace some of the original ones. There is nothing wrong with this,  
provided that you retain the basic theme. If that goes, then you either  
have an unstructured monster on your hands or the theme for another  
adventure! 
 
It is no longer sufficient, these days, for a player merely to survive  
all the elaborate threats to his life. There must also be a story  
which is very nearly interesting enough to enjoy for its own sake.  
Atmosphere is also very important and there must be a build-up of  
excitement during game play. 
 
Inject a minor dose of suspense early in the game, and up to three  
or four more important forebodings or anticipations before the end  
of the game. For correct dramatic effect, the last such event should  
be the biggest and best. 
 
More will be said later about clarity and consistency in developing  
adventures, but much can be done to help development by keeping the  
plot well-balanced and paced. 
 
Make sure there's enough territory around which the adventurer can  
roam to keep him interested at any given time. An adventure that starts  
in a cell and stays there until the player figures out how to escape  
will bore the average player quickly. 
 
 Similarly, leave lots of items for him to play with, and  
don't make the adventure too lethal. It is very boring for a player  
to be killed off every time he makes a false move. 
 
              Plot Elements: 
 
To get you started, I've listed the following features to help you  
build your plots. 
 
Try to introduce as much variety as possible to every adventure. Many  
of the ideas in this section are tried and tested, and some are totally  
new. Combine these ideas with your own and try to dress them up in  
a new guise. 
 
         Possession of equipment:  
 
     One of the most typical requirements for problem  
solution is that the player be in possession of certain equipment.  
For example, plimsolls in Scott Adams' Pirate Adventure prevent the  
player falling off the window-sill. I remember this one because I  
discarded the plimsolls at an early stage and still managed to complete  
the adventure by SAVEing just before every trip to the sill. 
 
Sometimes, simple possession of equipment is enough to make the game  
work. Sometimes the player must use the equipment in a certain way  
before it becomes effective. 
 
         Collect and Assemble:  
 
     In many adventures, the player must collect and assemble  
pieces of equipment to make a new item. Again, in the Pirate Adventure,  
he has to collect all the parts for a galleon, and assemble them.  
This is the case where the combination of a set of items makes it  
possible to produce another item which the player needs. 
 
Another neat feature is to require the player to keep the parts list  
with him in order for the item to be assembled.  
 
     In one of my adventures, one of the parts was omitted  
from the list. This part was necessary and should have been obvious  
to the player, but, just in case he hadn't realised, I allowed him  
to retrieve the missing item without too much further difficulty. 
 
     Another typical game feature is to remove a part  
from one item for use on another - for example, taking a battery from  
a torch to make a radio work. 
 
         Transformation: 
 
     A favourite idea is to non-magically transform an  
item from one state into another by washing, cleaning or rubbing it,  
painting it, oiling it, winding it up, putting fuel in it, connecting  
it to the electricity supply, or switching it on or off. 
 
     Very often the game-writing system will favour the  
switching of a non-working item with a working one, so that, although  
the player is theoretically unaware of it, the object is actually  
two items. The item in its first state is visible in the location,  
the other is kept in limbo. When the transformation occurs, the items  
are switched. 
 
     Such transformations are not limited to items. Characters,  
including the player character, can be transformed into a new character  
in analogous fashion to Clark Kent & Superman, Popeye & Popeye with  
Spinach, Jekyll & Hyde, mild-mannered chemist & Incredible Hulk. 
 
   
 
         Discovery: 
 
     Often, an object which is available from a location  
is not visible when the player enters the location. The object must  
be discovered. 
 
     For example, a game may require the player to dig  
in the ground or to move, say, a pile of leaves or a carpet, whereupon  
a new item is discovered.  
 
     Another favourite site for discovery is where a container  
clearly contains one item. Once that item is removed, another item  
is discovered lurking in the bottom of the container. You can hide  
items in unlit locations so that they cannot be discovered until a  
light is introduced. 
 
     Again, from the game-writer's point of view, an item  
may be kept in limbo until the player carries out the action which  
results in discovery. 
 
         Weapons: 
 
     There are two basic types of weapons. A general purpose  
weapon, such as a loaded automatic, will be effective against most  
foes. A specific weapon, such as a wooden stake (anti-vampire) or  
a silver bullet (anti-werewolf), may be uniquely required to kill  
a certain class of enemy. Often, it will also be effective against  
other opposition, though the well-known vampire repellents - sunlight  
and garlic - seem specific to the undead. 
 
     It is unfair to have a specific weapon in a game  
unless its effectiveness is widely known or there is some clue about  
it in the game itself. 
 
     Another aspect of weapons is the number of rounds  
of ammunition they carry. This concept ranges from the six bullets  
in a magazine, through the number of arrows in a quiver and the charge  
(shots left) in an atomic blaster, to the potency of the magic remaining  
in an Elven Sabre. 
 
         Apparel: 
 
     A distinction is often made between items that are  
carried and items that are worn. The VERBs used might be WEAR and  
REMOVE. Clothes can be important for warmth, decency or as a mark  
of rank. 
 
     Some items which are worn have even more special  
significance - for example Cloak of Invisibility, Space Suit, Gun  
Belt or Rucksack. 
 
         Puzzles: 
 
     A puzzle with a logical solution is a delight to  
solve. Examples abound in adventure games and represent a major source  
of pleasure in playing.  
 
     Suppose you have a game in which there is a radio  
without a battery, and a torch with a battery but a broken bulb. There  
is a clear invitation to make the radio work with the torch battery.  
This `collect and assemble' feature also represents a puzzle with  
a solution that makes sense.  
 
     Conversely, illogical solutions to puzzles detract  
from enjoyment. 
 
     Another point to remember is that instead of trying  
to make an item work, you may want the player to stop an item working  
because it is interfering with his objective. 
 
     Many of the features of adventure games present themselves  
as puzzles. The main thing to remember is to keep them fair. There  
is a class of puzzle so illogical that there is little satisfaction  
even in solving it. 
 
    
 
         Bribery:  
 
     In this case, the player must find an item and give  
it to a character or monster in order to secure his/her/its co-operation.  
A favourite plot device is to allow several different items to be  
used to bribe a single adversary. Only one of these can, however,  
be spared. If one of the others is used, it makes the adventure harder  
or impossible to complete. 
 
     Another feature of bribery is the need to carry an  
item so that a companion will stay with the player. For example, the  
player in Pirate Adventure soon discovers that the parrot will stick  
close to him as long as he carries the biscuits. 
 
     Purchase is a special case of bribery. Some games  
allow a pool of money to be accumulated, usually by discovery of treasure,  
and expended in exchange for goods and services in furtherance of  
the quest. In this case, the pot of gold coins is depleted according  
to the value of the commodities purchased and increased by addition  
of treasure trove, plunder and swag. 
 
   
 
         Mazes:   
 
     An adventure has considerable potential for the use  
of mazes but guard against making the maze boring. In some cases,  
the maze is a geographical one, in others it is logical. I shall explain  
the differences: 
 
         Geographical Mazes:   
 
     In a geographical maze, if the maze is drawn on a  
piece of paper, the locations in the maze correspond correctly to  
the direction travelled to reach them. That puts them on a par with  
the kinds of maze you see in children's puzzle books. The way the  
game writer sometimes makes it difficult is to give each location  
the same or similar description.  
 
     To solve these, the player simply maps the maze.  
Extra complications can be introduced by having hidden passages which  
do not appear in the description. 
 
     In Hollywood Hijinks, the author has a large geographical  
maze in which, when the player moves in a given direction, the game  
tells him how many paces he has taken before the next junction or  
dead end. A map is printed out as underlines and `I's, but it is in  
two layers - all the underlines, and all the `I's, and the two printouts  
must be overlaid before the whole maze is revealed. Nevertheless,  
because it is a geographical maze, it was possible to solve with only  
one layer of the map (as I laboriously proved), and would probably  
have been possible to solve with no map at all. Ah, what a feeling  
of satisfaction that accomplishment would have provided! 
 
   
 
         Logical Mazes:  
 
     In a logical maze, the locations in the maze are  
connected together in a bizarre fashion so that a geographical map  
is not all that helpful. Typically, East from location A leads to  
location B, but West from location B does not lead to location A.  
Again, the locations may be similarly or confusingly named. Here is  
a diagram of such a maze:   
 
           Cave 2                             Cave 3 
              ^                                   ^ 
              |                                   | 
Entrance <- [Cave 1] -> Cave 2       Cave 1 <- [Cave 2] -> Cave 3 
              |                                   | 
              v                                   v 
           Cave 3                              Cave 1 
 
 
 
           Cave 2                              Cave 1 
              ^                                    ^ 
              |                                    | 
  Cave 4 <- [Cave 3] -> Cave 2        Exit   <- [Cave 4] -> Cave 2 
              |                                    | 
              v                                    v 
           Cave 1                              Cave 3 
 
 
     The quickest way from ENTRANCE to EXIT would be  E  
to CAVE 1,  S to CAVE 3,   W to CAVE 4 and W to EXIT. Note that if  
the player goes N from CAVE 2, he gets to CAVE 3, then N again returns  
to CAVE 2. Similarly, going E from CAVE 2 always takes the player  
to CAVE 3, and E again takes him back. If the descriptions of the  
four caves were similar, this would appear like an endless series  
of caves. 
 
     The adventure writer's usual convention for these  
apparently illogical mazes is to call them `twisty' in the location  
description. 
 
     Added variety can be provided by having the structure  
of the maze vary with time, or vary according to the player's activities,  
or at random. 
 
          
 
         Variable Geography: 
 
     Two or three examples of variable geography come  
to mind. In Wishbringer, for example, Festerton changes in a sinister  
fashion, part-way through the adventure. A totally new set of locations  
and items appears, each one a sinister version of the ones in the  
original Festerton. 
 
         One-way and Restricted Exits: 
 
     It is frequently useful to allow the player to pass  
from one location to another without being able to return the same  
way. Examples of this are some teleport devices (see transportation),  such  
as chutes, climbing down ropes, falling into pits or rivers and entering  
traps. 
 
     Similarly, some adventures feature a narrow exit  
which can be negotiated by the player only if he is unladen or lightly  
laden. 
 
     Too many such exits can prove burdensome to the player.  
Use the facility sparingly and logically. It is a useful feature for  
forcing the player to solve additional puzzles. In Sir Ramic, for  
example, the player enters a set of caverns by one route, but must  
leave by another if he wants to take the large item he has assembled  
in there. 
 
         Secret Exits: 
 
     Although a location description usually describes  
all the exits from the location there is no compulsion to do so. Therefore,  
an exit can remain secret by virtue of not being described, until  
the player invokes a SHOW EXITS command or tries a direction. A natural  
convention is to say in the location description `There are exits  
in many directions' so that the player knows he may have to try several. 
 
     A useful `secret' exit is provided in a pond or pool  
if the swimmer dives. Then he can take an underwater passage. 
 
     Another idea is not to have a conventional exit at  
all in the secret direction, but to `teleport' the player to the next  
location when he performs a certain action, such as moving a book  
in the bookcase or saying a magic word. Secret exits are therefore  
often one-way exits. 
 
     Sometimes, a hint can be left that a secret exit  
exists, such as a rectangular hairline crack in the wall, or a character  
disappearing from the location unaccountably. 
 
         Knowledge:  
 
     An important plot feature is giving the player knowledge  
which he can use to deal with an obstacle. For example, in Leather  
Goddesses of Phobos, there is a simple way of dealing with one of  
the monsters. To stumble upon that method would be very difficult,  
but deciphering a coded note gives you the information you need.  
 
     To maintain `fairness', some adventures with this  
kind of knowledge-based problem solution will not allow the knowledge  
to be applied unless the player has previously, in this particular  
instance of the game, encountered the item that offers the clue. 
 
     A rather over-used ploy is to use a number written  
on some document as a telephone number or lock combination. See also  
copy-protection. 
 
     Another knowledge-based ploy involves the player  
researching in reference books, or in the handbook supplied with the  
game. This method forms one of the principal features of instructional  
adventures. 
 
           
 
         Curtains and Carpets: 
 
     If you are concealing a scene or exit behind a curtain  
or wall hangings, then if the player moves the fabric, it must be  
replaced with another item which describes the scene or exit. 
 
     A carpet frequently conceals a trapdoor, leaves cover  
cave entrances, and so on. The same sorts of description rules apply  
to these, and the simplest mechanism for the game writer to use is  
Transformation, described above. 
 
         Elaborate Patterns of Behaviour:  
 
     Often, and this is most entertaining for the player,  
he must build up, by trial and error, an elaborate behaviour pattern  
to circumvent a single obstacle. A great example of this is the method  
of obtaining a Babel Fish in Hitchhiker, where the player must forestall  
several different accidents, and divert a robot before he can get  
hold of the fish. The messages from the game are humourous, and it  
is a pleasure to solve. In another commercial adventure, some elaborate  
behaviour is spelled out in a printed enclosure - acting as a sort  
of copy-protect mechanism. 
 
         Richness of Methods:  
 
     Another entertaining feature is to provide different  
methods of achieving the same objective. In Paul Daniels' Magic Adventure,  
there were three ways of getting from the Airport to the Hotel - bus,  
taxi and hire car. All three methods worked, but each had different  
problems to surmount, and players were amused to hear about the routes  
they hadn't used. Another device to enrich a game is provided by giving  
the player a variety of roles to adopt, so that the story develops  
differently because of the different powers of the role taken. 
 
          
 
         Door Openers:    
 
     There are lots of door-opening methods, ranging from  
the trivial KNOCK or RING to such elaborate solutions as a coin in  
the slot or solving a numeric combination. The classic ones are requiring  
a key to unlock the door or needing to say a magic word, like `OPEN  
SESAME', or having to show a pass.  
 
     Another complete set of solutions involves a door  
being locked until certain other doors are closed (as in an air-lock)  
or unlocked only for a certain period after another event. 
 
     A door may be inscribed with runes or code of some  
kind which reveal the way to open it. The solution to the code might  
be a feature of copy protection. 
 
   
 
         Riddles:   
 
     Riddles are a favourite technique. Make sure, though,  
that the solution you favour is truly unique and self-evident once  
guessed. There are two really annoying mistakes some game-writers  
make with riddles. The first is a riddle so obscure that it cannot  
be solved. The other is one to which you know one or more possible  
answers but cannot think of the words the game-writer expected you  
to use. 
 
     An example of a `fair' riddle (Gollum in The Hobbit): 
 
         Q. Alive without breath, 
     As cold as death; 
     Never thirsty, ever drinking; 
     All in mail, never clinking. 
 
A. Fish. 
 
 
     An example of an obscure riddle: 
 
         Q. What's green, hangs in a tree and 
     whistles? 
 
A. A herring. (see Polish folklore for the 
     explanation of this) 
 
     An example of a riddle with too many or complicated  
answers: 
 
         Q. What's white and dangerous? 
 
A1. Polar Bear; 
A2. Blizzard / Avalanche / Iceberg; 
A3. Seagull with a hand grenade...etc. 
 
   
 
         Transportation:    
 
     There are wonderful varieties of vehicles in adventures,  
from magic carpet to teleportation device. If they are to be used  
repeatedly, though, make sure that they are easy to operate. For example,  
if you are only using a vehicle once, to make an essential bridge  
from one location to another, then it is fair practice to make it  
hard to operate. If, on the other hand, you are using it a lot, then  
it is boring to the player to have to, for example: 
 
         PUT KEY IN IGNITION 
TURN KEY 
PRESS CLUTCH 
SELECT FIRST GEAR 
RELEASE HANDBRAKE 
RELEASE CLUTCH 
 
     .... and so on. 
 
Peter Cartwright, in his new Lady in the Swamp adventure, accumulates  
a list of destinations for his car. Once the player has solved the  
clue for another possible destination, that destination is added to  
a numbered list with which he is presented when he suggests driving  
the car. 
 
A number of anomalies occur with transportation. If the player character  
actually enters the vehicle, then commands like East, West and so  
on may really apply to the directions inside the vehicle. This is  
fine if the vehicle is large, like a spaceship, but not if it is a  
car, for example, when these commands might be appropriate for the  
whole vehicle and contents. When you are in the vehicle at some location  
or other, do you describe the location, or do you describe the interior  
of the vehicle?  
 
   
 
     There are two or three ways of dealing with this,  
as follows: 
 
         If the vehicle is a horse or other vehicle which  
is not enclosed, then you can move it to the new location with the  
player in response to a direction command. In this method, the player  
has to be `on' the horse or `on' the motorbike. This you can ensure  
by forcing him to use a `mount' command, then setting a flag to ensure  
that he dismounts before he does anything other than travel from location  
to location. 
 
If the vehicle is like a car, in that it is enclosed, but the outside  
world can be seen from it, it can be handled by having several locations  
such as `At the Town Hall in the car', `Outside your home in the car',  
`At the Beach in your car'.  
 
You move from `At the Beach' to `At the beach in your car' and vice-versa  
by ENTER and EXIT. Travel is effected by moving the player from one  
`... in the car' location to another. Elevators are also dealt with  
in this fashion. 
 
If the inside of the vehicle is actually a set of locations like this,  
each with a different view from the window, then be sure when you  
`move' it to the Town Hall that you also move any items the player  
has dropped in it when he was parked at the beach, as well as reproducing  
any controls inside the car. 
 
Also, ensure that the player can only travel between these locations  
by car, otherwise he will find on walking back to the Town Hall that  
the car he left at the beach has mysteriously driven itself to join  
him! 
 
         Alternatively, you can implement vehicle operations  
by moving the exits around while the player is inside the vehicle.  
The vehicle is one location (or even a group of locations if it is  
a ship or spacecraft). This is handy if you are prepared to describe  
the journey rather than the destination. Some of the adventure game-writing  
systems will not allow this type of solution, as exits cannot be altered. 
 
     Teleportation is a very handy system. Often what  
seems to be transport is actually teleport. The player is removed  
from location X to location Y. If the locations are not `in the vehicle'  then  
the vehicle must also be teleported. It is also used to deal with  
secret exits and resurrection, and is even a major feature of some  
games, such as Star Portal. 
 
One commercial game has an ingenious `black hole' teleportation device.  
Entering any of the black holes takes you to a predictable destination.  
There is even one hole which the player must make for himself, another  
which is cleverly concealed inside something else and another whose  
destination moves in a predictable manner. 
 
   
 
         Death and Resurrection: 
 
     As cautioned elsewhere, try not to kill the player  
too readily. However unsuccessful his ploys, it is unfair to make  
them a capital offence. 
 
Resurrection is a fairly frequent device to prevent the player from  
having to restart the game. For a serious player, however, it is unsatisfactory  
to win a game as a result of a resurrection and he would reload a  
saved game in these circumstances. If you do provide a resurrection  
facility, make sure that the game is re-set in a playable form. Sometimes,  
the game-writer maroons the player without access to the items needed  
to complete the adventure, which makes the exercise pointless. It  
is quite in order to make the game harder by scattering the items  
the player character carried in his inventory around the accessible  
locations at random. 
 
     There are special cases where apparent suicide on  
the part of the player character or a companion is beneficial in the  
way that sacrificing a piece in Chess can be. 
 
         Push, Pull, Turn and Play: 
 
     Most adventurers, after EXAMINEing an item, will  
PUSH, PULL, TURN or PLAY it, depending on its description. Very often,  
this is exactly what the player was intended to do. However, it is  
always advisable to have some relevant responses to these attempts,  
even if they do not advance the game. 
 
         Containers:  
 
     The use of containers can be extremely helpful, particularly  
when the contents are nested. In some adventures, there is a limit  
to carrying capacity which can be over-ridden by the use of a container  
to carry the smaller items.  
 
     Again, the difficulty of opening successive levels  
of container can provide a pleasurable experience to the player. It  
is also possible to perform cartoon-like incongruities in which a  
small item contains a very large one.  
 
The usual mechanisms for container manipulation are OPEN and CLOSE,  
but UNLOCK and LOCK may also be relevant. Most game-writing systems  
do not allow transparent containers, so that any contained objects  
are not visible when the container is closed. 
 
         Invisibility: 
 
     Invisibility is a very useful attribute for a player  
character. In this state, the player can usually avert monster attack  
and can eavesdrop with impunity. 
 
Invisibility offers a great deal of scope for the author's imagination.  
The effect can be of short or unpredictable duration, may have adverse  
physical effects, and may prevent the invisible character from carrying  
or even touching items. 
 
The invisibility can be invoked in a number of ways. For example,  
 
 
         magic spell 
wearing a ring or cloak 
consuming a potion. 
 
     Remember to deliver handy clues regarding the invisible  
player's state and limitations, otherwise the benefit of invisibility  
may become almost totally incomprehensible to the game player. 
 
          
 
          
 
         Codes & Ciphers: 
 
     The easiest method of introducing codes and ciphers  
to a game is via a discovered note. Another method of making codes  
seem natural is the translation of alien languages or character sets,  
including runes.  
Most adventurers are quite capable of interpreting a message simply  
anagrammed, coded or ciphered. A typical trick for short messages  
is to take the message and transpose all letters in the following  
regular fashion: 
 
         A-D; B-E; C-F; .... W-Z; X-A; Y-B; Z-C 
 
 
     so that HELP becomes KHOS. 
 
To make it harder, we could reverse or otherwise anagram the message,  
and/or break the message into regular groups. The purpose of this  
is to hide the identity of common words such as `a', `of', `to' and  
`the', so that translation cannot be based on recognising word length. 
 
 
         HELP I AM TRAPPED INSIDE A COMPUTER  
 
     might become: 
 
         HELPI   AMTRA   PPEDI   NSIDE   ACOMP   UTER  
 
     before being transposed to: 
 
         KHOSL   DPWUD   SSHGL   QVLGH   DFRPS   XWHU. 
 
     However, there is a limit to the patience of your  
audience. The method usually employed to decode transposed messages  
is to count the letters, and then assume that the most frequent will  
be E, the next T, then A, O, I, N, S, H, R, D, L, U and so on, which  
tends to work fine for English with the regular frequency of `the'  
`a' and so on. 
If it is a regular transposition, the player assumes the most frequent  
letter is E, then T, then A and so on, until the message springs to  
view. 
 
Let us analyse the message above: 
 
 letter	no of occurrences 
	E 		4 
	A		3  
	I		3 
	P		3 
	T		2 
	R		2 
	D		2 
	 and all the rest 1. 
 
 
     Your player would have a reasonable chance of decoding  
that message if you used a regular transposition. 
 
On the other hand, if the message is a long one, you can afford to  
have an irregular transposition such as: 
 
         ABCDEFGHIJKLMNOPQRSTUVWXYZ 
 
      matching to: 
 
         XFJQZKESVDNPIUWHARTYOBCGMP 
 
     for example. 
 
You could even make the message very short and the transposition immensely  
complex if you overtly or secretly include the key in your game instructions,  
as I did in the Paul Daniels Magic Adventure or in a codewheel or  
other device in the game pack. (See also the section on Copy Protection.) 
 
          
 
          
 
         Following: 
 
     Many discoveries can be made only if the player follows  
a non-player character or monster to find out what he/she/it is doing. 
 
It is especially useful to allow the player to eavesdrop on other  
characters in order to determine the magic words that open doors or  
quell demons. 
 
Sometimes following will permit directions and paths which are not  
available to the player moving independently. In at least one adventure,  
following an animal is a good way to get out of mazes. 
 
         The Senses: 
 
     Smell and hearing can be useful adjuncts to an adventure.  
At least one adventure was issued with a `scratch and sniff' card,  
and Hitchhiker has a situation where the player must use senses other  
than sight to continue play. 
 
Characters with heightened senses may be able to detect danger at  
a greater distance than usual. 
 
         Proxy Actions: 
 
     Actions which might be undertaken by a player may  be  
delegated to a non-player character, usually a companion to the player.  
This delegation may be made explicit by command of the player, or  
implicit by virtue of the presence of the character.  
 
For example, Trent/Tiffany in Leather Goddesses always performs spontaneously  
to protect the player character if he/she is present. 
 
There is more discussion of this under the subject of Characters and  
Monsters. 
 
          
 
         Time Dependence: 
 
     Another important feature in adventures is time.  
For some of these, time is `real' time, but it is more usual for time  
to be proportional to the number of moves made. 
 
Many adventures expect the game to be solved within a certain timescale,  
counted in turns, and close the adventurer down if he has not reached  
the end. 
 
Important use can be made of the effect of time. For example, a maturing  
element can be introduced, in which an item transforms into another  
over the period of several turns. A caterpillar might transform to  
a butterfly. A seed, once watered, might grow into a plant. 
 
Conversely, a leaking bucket might become empty within a few turns,  
or, most typically, a torch burns out after twenty or so turns. The  
torch device has been over-used in adventures, in my opinion, but  
there is no harm in introducing some new time- dependent wear and  
tear. 
 
Finally, there is the `critical moment' feature, where something happens  
at, say, turn 27 of the game, or 27 turns after another event. The  
player must be ready for the event or he will miss it. It is important  
to inform the player that the event has occurred, or he may never  
realise he is too late. 
 
Ambushes are often time-related. A non-player character intercepts  
the player on the basis of the number of turns performed or on the  
basis of the number of turns performed in a single location. 
 
          
 
          
 
         Weather: 
 
     Another feature which is often time-related, but  
probably deserves its own category, is weather. 
 
Mist or Fog can reduce visibility. Cold weather might freeze the moat  
the player needs to cross. Hot weather might dry it up. The fire-breathing  
dragon probably stays home in rainy weather. 
 
         Skills, Powers and Magic Spells: 
 
     This is a very handy plot device. The player, or  
one of his companions, acquires the power to make a transportation  
device work, to defeat monsters or to control some other important  
feature of the game. 
 
It can, however, make a game tedious if taken to extremes. For example,  
if the player has the strength to lift a ten-ton rock, it is inconsistent  
that he must use a key to open a door, or use a silver bullet to kill  
a werewolf. Surely he could apply a ten-ton rock or his Fist of Iron  
to either problem. While a role-playing Dungeon master can deal  
with frivolous use of powers when the game is played by people in  
a non-computer context, an adventure writer would be hard put to anticipate  
all possible misuses of a strange power. The power must be carefully  
constrained to a small range of effects. 
 
  
 
         Logical Traps: 
 
     Fiendish glee can be obtained from the delivery of  
a trap in the form of a clue. For example, watering a dry plant might  
transform it into a man-eating Arcturian Tiger Orchid!  Or the player  
might be tempted by a clue to bribe a guard, only to discover that  
guards react very badly to bribery. 
 
Similarly, the game might tempt the player to use a piece of wood  
to break a window, only to reveal, when the player picks it up, that  
the piece of wood was supporting the ceiling. 
 
         Physical Traps: 
 
     Physical traps usually reside in a specific location.  
They may consist of, for example, a hole in the floor into which the  
player has a percentage chance of stepping, or a monster which lives  
in that location. Rock-climbing or Monster-killing equipment, respectively,  
might protect the prudent player in these locations. Traps should  
be distinguished from ambushes, where the danger stalks the player  
and may strike in a number of different locations. 
 
The trap may either be passive, where it actuates either regularly  
or randomly without the player's intervention, or active, where a  
player has to do something incautious to trip it. 
 
There is no limit to the ingenuity of the game-writer in delivering  
a trap. A falling rock or missile, a bright flash that blinds the  
player character or an illusory exit are just the tip of a large iceberg. 
 
          
 
          
 
          
 
         Alarms: 
 
     A variation on the Trap is the Alarm. Allow the player  
to trip an alarm by entering a location or doing something. This alarm  
can then set a counter which guarantees to bring the Horrid Goblin  
Hordes rushing to the scene very soon, and the player has perhaps  
three turns to escape or render himself invisible. 
 
         Darkness, Obscurity and Illusion: 
 
     It is natural to render a player vulnerable (to Grues,  
usually) and disoriented when in a dark room. The game-writer can  
decide whether the player can move out of the dark area, and how many  
turns he has before the grue descends upon him. A dark room can usually  
be lit by a general purpose light source, but it is often useful to  
make a room's appearance and contents visible only when a certain  
object - analogous to a light source - is being carried by the player.  
For example, a Helmet of Clear Seeing. 
 
Another handy device is Obscurity. This resembles a thick fog in which  
the player can move around freely, but cannot find anything and may  
have to make several attempts to leave the location, often exiting  
in a direction different from that which was intended. Obscurity can  
accompany Ambush. 
 
Illusion is an excellent feature. It consists of a location, item  
or character appearing different from reality (whatever THAT is in  
an adventure game). From the game-writer's point of view, substitute  
characters or items are used if the illusion is limited, or variable  
geography may even be used for extensive illusions. 
 
          
 
          
 
   
 
         Ambushes: 
 
     Ambushes are a type of trap in which a non-player  
character, such as the thief in Zork, mugs the player, often killing  
him. The exact location of the ambush is not necessarily predictable.  
It could be engendered by a time-related formula, by the value of  
the player's inventory or by the length of time the player remains  
in a certain location. 
 
Typically one allows the player's possessions to be lost for good,  
or to be scattered around the locations of the adventure. 
 
It is usual to allow the player to be able to ward off ambushes by: 
 
         - reacting to the ambush by taking one of a 
  number of allowed actions 
 
- avoiding the circumstances which lead to 
  an ambush - for example, by not standing 
  still for too long! 
 
         Helping Out: 
 
     Sometimes it's a good trick to show a creature or  
character in distress. If the player helps that creature, the creature  
then, or perhaps much later, helps the player. It is a useful feature  
to make helping the creature optional at the time the help is required.  
In this way, there is virtue in providing the help and the subsequent  
reward is well-deserved. 
 
          
 
          
 
          
 
         Clues: 
 
     There are many ways of delivering clues. 
 
Non-player characters can include hints in their conversation. In  
particular, lies and contradictions may provide oblique clues. Cryptic  
clues - like those in crosswords - may also suit a particular type  
of adventure. 
 
Characters deliver hints in two forms - either as an unprompted statement  
like the loquacious parrot in Pirate Adventure, or on request as with  
the owl in Sir Ramic Hobbs. 
 
The most direct method of delivering a clue is in response to a HELP  
request from the player. I would advise against inviting him to buy  
a hints booklet, as some games do. I always feel that HELP should  
provide an opportunity for the game writer to deliver a relevant hint  
or at least a meaningful response then and there. 
 
Often a clue can be hidden in a riddle, but make sure it's a fair  
riddle. 
 
The most subtle, and most satisfactory method of delivering clues  
is within the location and item descriptions. For example `The plant  
is dry and withered' is a clear invitation to water it. 
 
A method which I used in Sir Ramic concerns the use of a magic carpet.  
There is a device which controls the carpet, but which seems to be  
intended for something else. When the player uses the device in the  
more obvious manner, the carpet whooshes away. This tells him, or  
should do, at any rate, how the carpet works. 
 
          
 
          
 
         Food and Drink: 
 
     There are two reasons for including edible and drinkable  
items in a game. 
 
The first concerns the need for the player character to keep body  
and soul together during the game. As a player, I find it very tedious  
to keep having to go through such housekeeping activities time and  
time again. Game writers should make sure that the caches of food  
and drink, however hard to find, are sufficient to sustain the player  
for a considerable proportion of the game once taken. 
 
The other purpose is to use comestibles to make important (usually  
magical) changes in body size, visibility, awareness, state of health  
and so on. Conversely, feeding suitable items to enemies may disable  
or kill them. 
 
         Unusual Uses: 
 
     A game is often enriched by providing an everyday  
object which is to be applied to the game in an unusual manner - for  
example, to use a food mixer as the propulsion unit for a boat. 
 
Provided enough clues are given, this can be a very entertaining feature.  
Unfortunately, examples of bad planning abound. Some problems appear  
time and time again in fan magazines and bulletin boards. 
 
 
 
               Chapter 5 
 
               The Cast of 
 Characters 
 Assembles 
 
An important component of any plot is the characters who must help  
the player act it out. While you need not have your full complement  
of characters before you start development, it is helpful to have  
selected the leading players, as they will suggest plot elements to  
the writer. 
 
Characterisation is one of the hardest parts of adventure creation.  
There are few really memorable heroes or villains in adventures. This  
section should give you some ideas on how to create interesting characters  
and communicate their personality to the player. 
 
              The Player Character(s): 
 
There are no clear rules for choosing the attributes of a player character.  
That character is the one whom the player controls like a puppet,  
and who represents the game player's interests.  
 
In an arcade adventure, the puppet is usually clearly seen strutting  
around the screen, and text messages clarifying the situation are  
preferably kept to a minimum. Personal identification between the  
player and the character is often weak, because the figure on the  
screen does not look much like the player. 
 
Even in an illustrated text adventure, the player character does not  
often appear in the graphics. In essence, the graphics represent what  
the player character can see. Since there is often an option to switch  
off the graphic image, the character's appearance on the screen must  
be non-essential to the characterisation. 
 
In other words, the attributes of the character are usually communicated  
to the player by some intellectual process, rather than pictorially. 
 
In my adventures, the quality and disposition of the player character  
are communicated by the way the game reacts to him. It is quickly  
made clear, for example, that Sir Ramic Hobbs is an unathletic, drunken  
character with considerable courage but a misplaced faith in his own  
capabilities. 
 
As an author, you ought to give careful thought to these personality  
considerations, and, once the player character has been created, maintain  
a consistent reaction to him/her throughout the game or explain why  
the attitude changes. 
 
              Other Characters and Creatures: 
 
         Characteristics: 
 
     The attributes of a non-player character or creature  
are communicated to the player by what they say or do, and consistency  
is again the watchword here. That does not mean that the character  
should be bad through and through or unwaveringly good. What it means  
is that once you have decided on the personality, don't let him/her  
act `out of character' without reason. As novelists have discovered,  
it is appealing if the baddies have a redeeming feature and the goodies  
some flaw in their personality. 
 
It is sensible to assemble a set of characteristics, and give each  
character and monster a score out of ten against each characteristic  
in the style of a role-playing game. If desired, too, the profile  
and current condition of the player character and all the other characters  
in the game can be maintained throughout.  
 
     When the character is attacked, or goes without food  
or travels a long distance you can use his attributes to decide how  
he will take the strain and what his eventual condition will be. 
 
This can be taken to the point of resolving combat with the use of  
chance factors, hit points, armour class and damage tables. 
 
The effect of poisons, spells and cures can also be reflected in the  
attributes of the characters. TSR's excellent Dungeons and Dragons  
handbooks are a great source of inspiration for such logical world  
structures. 
 
Health may be restored to an ailing character by antidote, spell,  
food & drink, sleep, infusion of old batwings and toadsbreath or the  
undying love of a fair member of the opposite sex (or even an unfair  
member of the opposite sex). 
 
         Character Actions: 
 
     Much of a game's enjoyment often springs from the  
seemingly independent action of other characters. These actions may  
be programmed to appear truly spontaneous, or to react to the player's  
actions or requests. 
 
The spontaneous actions of characters can provide warnings or clues.  
For example, it is reasonable to cause a canine companion to detect  
the smell of enemies approaching, and behave in a way which warns  
the player. 
 
   
 
     Hostile and murderous characters (often monsters)  
provide a great deal of the challenge of adventure games, but, unlike  
space invaders, it is not great sport just to zap them all with superior  
strength or by being lucky. It is more rewarding to subvert, trick,  
bewitch or befriend the opposition, sometimes with the aid of friendly  
companions. 
 
The antics of the living (and undead) denizens of your world can provide  
entertainment, even when such behaviour does not directly advance  
the game. 
 
         Proxy Actions: 
 
     Sometimes, a player may cause his player character  
to issue an instruction to another character in the game. As the game  
author, this complicates your job somewhat, because you have to deal  
with all these sorts of action as well as the player character's own. 
 
The complication has its reward in cases where a companion is able  
to distract or defeat a monster, working in partnership with the player,  
where the player would not have been able to win single-handed. 
 
Alternatively, the non-player character, by virtue of some special  
characteristic, could be able to do something the player character  
cannot, like climb a rope, lift a great weight or cast a spell. 
 
   
 
         Character Utterances: 
 
     Similarly, the speech of other characters is often  
a very considerable feature of a game. 
 
Use speech to communicate the attributes of the character, and to  
deliver clues to the player. These clues should be spontaneously offered,  
or offered in response to a request or as a reaction to player activity.  
 
 
I sometimes find it useful instead of writing: 
 
          `The parrot says: "Watch out for the Jabberwock!" '  
 
 
     to employ the dramatic convention: 
 
          `Parrot: Watch out for the Jabberwock!' 
 
     and indent the speech if it runs to more than one  
line. This distinguishes speech from location and action description. 
 
     Characters may speak spontaneously or may respond  
to information requests and deliveries such as: 
 
          `ASK PARROT ABOUT MAGICIAN'  
 
     or  
 
         `TELL POLICEMAN ABOUT THIEF'. 
 
     Extra interest can be brought to the game if each  
character speaks in a different manner. In Hobbs, the narrator (Prang)  
speaks in a withering and sarcastic tone, while the owl always speaks  
in a grovelling, ingratiating whine.  
 
   
 
         Lies and Contradictions: 
 
     Like real people, characters in adventures often  
lie and contradict themselves. These falsehoods often give the player  
an insight on the truth, or on the true nature of the character. 
 
Detective adventures are the principal medium in which this kind of  
behaviour gives clues to the player, but there is something to be  
said for using the feature in other types of adventure, as a guide  
to personality or as a clue. 
 
         Companionship: 
 
     It is usual for the player character or hero of an  
adventure to be accompanied by one or more companions who may act  
on the player's behalf either spontaneously or on request. 
 
It is often also possible for a player to choose to be a different  
character on a subsequent play of the game. Some multi-user systems  
allow a number of players to wander the realms of the adventure simultaneously. 
 
As described under Proxy Action, it is possible to instruct different  
companion characters to perform actions that the player character  
cannot carry out. This is in line with the role-playing convention  
of sending a group of adventurers on the same quest, typically a warrior,  
a thief, a priest, a witch, a dwarf, an elf and so on. 
 
It is common for companions, once encountered, to follow the player  
character everywhere. On other occasions, it is necessary for the  
player to press them into service by bribery or simply by requesting  
them thus: 
 
         `THESEUS, FOLLOW ME'. 
 
         Monsters: 
 
     Beware of stereotypes in monster design. Every monster  
should be a well delineated character in itself. The fact that an  
ogre wants to eat the player character is not in itself evil. It is  
in the nature of ogres to eat adventurers, in the same way that it  
is in the nature of pike to eat perch. 
 
If he is to be really evil, the ogre must be seen to kick puppies  
and pull the wings off butterflies. He may also have one robust redeeming  
feature like cheating on his taxes or selling his mother-in-law into  
white slavery. 
 
It is these little points which make him a really rounded character,  
and a positive pleasure to lure into the path of a combine harvester. 
 
Monsters can also have specific powers such as poisonous stings which  
act over a period of time, or the ability to become invisible or roam  
the locations or follow the player character. 
 
As mentioned under Weapons, a monster may be vulnerable to a specific  
weapon as opposed to a general-purpose one. Equally, it may succumb  
to attack by a particular companion character, or it may have a vulnerable  
time of day, or the famous soft underbelly. 
 
Monsters can range from pools of sentient corrosive slime, through  
renegade Asimov-eating robot, to God of Greek Mythology. 
 
 
 
               Chapter 6 
 
               How to Develop and Test your Game 
 
Having decided on your theme and setting, and put together a plot  
and the leading characters for your adventure, the next stage is to  
actually develop the game, using the game-writing system or systems  
you have chosen. 
 
The first part of this chapter discusses the__ art__ of conveying  
atmosphere and excitement to the player. Next, come some notes on  
the __craft__ of the game-writer. The third section concerns the  
__technology __of game-writing systems. 
 
              Art: 
 
The art of the adventure game writer bears a close resemblance to  
that of the short story writer. He must create an atmosphere with  
as few words as possible, and build and sustain excitement with economy. 
 
How are atmosphere and excitement to be achieved?  
 
However inspiring the subject matter of the game, the key areas are: 
 
     - Clarity 
- Consistency 
- Responsiveness 
- Progress 
- Reward 
- Anticipation. 
 
These are, in fact, substantially the same key elements as all games  
require. 
 
          
 
         Clarity: 
 
Except where obscurity or illusion are intentional it must be clear  
to the player, either in words or in graphics, what the current situation  
and objective are. In addition, it is helpful for the player to know  
the overall objective of the game, even if that objective is quite  
irrelevant to the current situation. 
 
The geography of the game in general and of each scene must be clear.  
This is particularly important in graphics games where the constraints  
of the drawing method or the screen resolution can perversely make  
perspective and direction difficult to perceive. 
 
Sometimes it is fun to conceal the true nature of an item, but most  
of the time you have to work quite hard to describe them clearly.  
Again, this can be hard in graphics games. A `zoom' or text feature  
is often necessary.  
 
Sometimes, a handbook issued with the game provides a detailed description  
of important items and of the geography of all or part of the game.  
This can also be a useful copy-protection device. 
 
In writing and testing your adventure, you must always place yourself  
in the position of a `dumb' user who has not helped you write the  
game, and make sure that he will always know what his target is, what  
has happened, where he is, who and what are sharing the environment  
with him, and, to a large extent, his degrees of freedom to act. 
 
         Consistency: 
 
A game must be consistent. That doesn't necessarily mean realistic.  
Because few adventures even remotely approach realism, you rely on  
the consistency of an imaginary world. Consistency encourages the  
creation of atmosphere. 
 
If an effect works in one part of the world, it should work in all  
parts. For example, your `dissolve rock' spell should dissolve rocks  
encountered anywhere in the game, not just on the wall you need to  
penetrate. Paint should make a mark wherever you daub it, not just  
where you need it. 
 
The fulsome description or detailed graphics you deliver for the early  
locations should be maintained for all scenes in the game. If the  
quality is bunched at the start of the game, the whole game starts  
to look very thin. This is harder to achieve than you might think.  
By the time you are half-way through an adventure, the end will appear  
more distant than it did before you started, and a panicky haste will  
descend upon you. 
 
If you are really restricted on resources, it is probably best to  
reserve the best graphics for the first and climactic scenes. This  
avoids the impression that the game is gradually fading out. 
 
         Responsiveness: 
 
Interactivity distinguishes adventure games from the books and movies  
which are much richer in other ways. It is important for the game  
to return a fairly high quality of response. `You can't do that..'  
is going to be returned all too often as it is. If you, as the game  
writer, can anticipate some of the ploys a player may try, it is certainly  
your duty to build appropriate responses to them, even if the player's  
action does not advance the game. 
 
If his action is `getting warm' - for example, if he has tied one  
end of the string to the right lever - make an encouraging response. 
 
 In arcade adventures, the antics of your player character  
are eventually going to become boring when a player is trying to retrace  
his steps. Make his response to direction control very positive so  
that the player can gallop through the areas he knows well. 
 
         Progress: 
 
The game must move forward to remain interesting. One way of doing  
this is to open up new avenues of exploration to the player. It's  
no good to move him from one anonymous cave to another. The new cave  
must be interesting in its own right. The player should always have  
a reasonably large territory to explore unless he is in a tight spot  
of some kind. There should be enough items and clues lying around  
to keep him interested for a while. As emphasised in __Clarity__,  
he should have a general idea of the geography and objective of the  
game, so that he can see he is getting somewhere. 
 
Avoid tedious mazes and avoid killing the player too readily. Obviously,  
the player can use SAVE and RESTORE to anchor his progress, but it  
can be tedious to keep reloading in order to recover from sudden death. 
 
Putting a `security lock' on the RESTORE verb can be all you need  
to dishearten a player from using a pirated copy. Going back to the  
beginning of the game after every mistake is even more tedious than  
RESTOREing. This can be the basis for copy protection. 
 
Often, it is worth having a character appear and brief the player  
on the solution to a problem if he has been stuck in a situation for  
a large number of turns. I see no virtue in wandering the corridors  
of a dungeon for year after year, with nothing new ever coming to  
light, and the solution ever elusive. These games are meant to be  
interactive fiction, not eternal purgatory. 
 
Make your clues meaningful. I have often delivered a clue that seems  
as broad as a barn door to me, but which turns out to be too subtle  
for my audience. Remember, you know what the solution is. Your player  
is going to have to work much harder than you, and if he fails to  
make progress, he will become bored. This is a difficult balance.  
You must maintain the impression of progress for the inexperienced  
player, while giving a challenge to the Seventh Dan adventurer. In  
short, an adventure game should be challenging, but not unreasonably  
difficult to play. 
 
Apart from any other consideration, it is a terrible waste of your  
own creative spark if most players never reach the end of your game.  
That would be like an author expecting most of his readers never to  
reach the end of his novel. 
 
         Reward: 
 
Reward is the mechanism by which the game author can indicate progress  
to the player. It is also a mechanism for keeping the player interested  
even when he is actually making no progress at all. 
 
It can vary from the opening up of a new and interesting set of caves  
to the appearance of a new character or an amusing consequence of  
something the player tries. 
 
Nothing keeps a player interested like a well-communicated sense of  
`winnability'. If he really believes he can complete the game, he  
will work much harder than if he constantly feels discouraged. 
 
Often, alternate methods, one clever, the other laborious, of solving  
the same problem can be used to give the player confidence that he  
will solve all the puzzles one way or another, or that he doesn't  
just have one chance of winning. 
 
It is useful to use different responses (selected at random) to reply  
to different instances of the same or similar stimulus. This keeps  
the player trying much longer. If the invariable response to `TOUCH  
item' is `Nothing happens' then the player will become bored more  
quickly. He will keep playing around with the items in a more creative  
manner if the responses are richer such as: `You'll take the shine  
off it!' or `Careful how you touch the ...'. 
 
Another way of rewarding the player is by giving him points for progress.  
Points scores in an adventure are, however, less motivating than they  
are in an all-action arcade game. Nobody plays adventures for the  
pleasure of seeing their points score, though it is often used to  
measure whether the player has completed the whole adventure. It __is__  
important to make it clear to the player that he has completed the  
adventure, by making a positive statement to that effect. 
 
         Anticipation: 
 
Nothing builds excitement like anticipation. It is a vital element  
of any successful game. If you can convey to your player that something  
exciting is going to happen before it does, you will add greatly to  
his enjoyment. 
 
As described in the chapter on plotting, there should be a build-up  
of suspense throughout the game, consisting of events which are anticipated. 
 
The character of these events, and the manner by which the anticipation  
is delivered will vary from broad hints like `You can hear the tramp  
of iron-shod boots approaching' to more subtle clues such as small  
animals scurrying in the opposite direction and `an unnatural silence  
descends upon the countryside'. Alternatively, you may give the player  
hints of something wonderful on the opposite side of a canyon that  
he must cross, or the form of the geography may indicate that he is  
about to stumble upon an important discovery. 
 
Surprises are very much part of an adventure game, but they should  
not be delivered in a bald style like: 
 
`SUDDENLY A HUGE OGRE LEAPS OUT UPON YOU'. 
 
Repeated events of this nature are no longer surprising nor even interesting  
if they are largely unrelated to the player's actions.  
 
If the huge ogre leaps out of a hat box the player has just opened,  
or the pond he has decided to swim turns out to be inhabited by man-eating  
ducks, then the player will start to anticipate surprises. 
 
 For a build-up of tension, you need to establish that  
almost anything can happen if the player is careless, and then have  
a period of relative peace between incidents. 
 
              Craft: 
 
The craft of the adventure author lies in his use of image, sound  
and text. However cleverly designed, the game stands or falls by the  
craft applied to its development. 
 
         Images: 
 
Be careful when making your graphics for the game to make each image  
professional. Drawing a childish image just for the sake of having  
`graphics' can easily devalue an otherwise excellent piece of work.  
It is better not to provide an image at all than to provide an inferior  
or misleading one. 
 
The recent advent of digitisers, which can take a picture and turn  
it into a screen image, has made it easier to produce good screen  
images, but again at a cost in storage. 
 
*** This paragraph has been left in the dust of progress*** 
Remember, in any case, that some of your users will have low resolution  
graphics. To ensure a wide distribution, you must design to the lowest  
common denominator, which in the case of Spectrums, C64s, Amigas and  
STs is a TV set, and in the case of IBM PCs is a CGA-compatible laptop  
with LCD. In short, do not presume a high resolution. Design your  
picture so that it is balanced and well-proportioned. Then, even if  
it appears in shades of grey, it will still look good, especially  
from a distance. This does not prevent you from producing stunning  
graphics for the top-of-range computers, what it does is to widen  
your marketplace. 
 
*** So has this one *** 
Ideally, we would often like our graphics to be like Foss or Roger  
Dean paintings - in fact, like the cover of this book or an LP. Bear  
in mind, though, that these illustrators are dealing in detail at  
hundreds of dots per inch and three thousand shades of colour, while  
we computer artists are dealing in tens of dots per inch and tens  
(at best) of colours. 
 
*** But these haven't! *** 
 
 This is not a book on graphics, but here are some starting  
points for the beginner: 
 
     Study perspective. So many promising computer graphics  
are spoiled by a lack of understanding of how objects diminish with  
distance, and parallel lines converge in perspective. 
 
Get a book on artistic composition. There are two helpful outcomes  
of this. A well-composed picture is easy on the eye, and suggests  
an atmosphere much more readily than a cluttered one. In addition,  
a well-composed picture will tend to have large blank areas on it,  
which saves you work. Avoid fiercely symmetrical pictures, and ones  
which have the focus of attention in the centre, or which are divided  
in half by a horizontal. 
 
Try not to fill the screen with the picture. You will save storage  
and produce a better effect if you frame a section of the screen and  
place the picture in that. 
 
Study the masters. Walt Disney backgrounds and Chinese paintings are  
masterpieces of economy and composition. The recent spate of Kung-Fu  
arcade games has spawned a particularly fine series of oriental backgrounds  
for their zapping and kicking. Snow scenes are good, too. Christmas  
cards often display an admirable economy with a well-wrought atmosphere.  
Beardsley pictures are beautifully balanced, but you won't be able  
to match his line. 
 
*** No longer strictly true.  Now that stunning colour graphics are the 
norm, even on PCs, the problem of the stepped diagonal line has 
largely disappeared, and graphics that rely on line drawing are 
much less satisfactory that those that rely on subtle colour.*** 
 
Possibly best of all models to use are high quality comic books. They  
can suggest stunning scenery and events with great economy of detail  
and colour. Their resolution and pallette range is much closer to  
the one we must use. 
 
*** Nor is this, though there are some execrable examples of poor 
perspective in characters *** 
 
 In arcade adventures, you will have to bear in mind  
the fact that your puppet will probably not vary in size as you move  
him around, so you have to make the playfield shallow from front to  
back and avoid natural perspective. In effect, you have a stage. Use  
the artificial perspective set designers employ. A study of set design  
will be rewarding in many respects. Don't clutter the stage with extraneous  
items. Make sure the entrances and exits are wide enough so that your  
actor can get through them easily. Make sure your scene changes are  
so slick that the player doesn't get bored. 
 
The golden rule for all computer graphics is... keep it simple. 
 
         Sound: 
 
*** This section on sound preceded sound boards.  I still think 
all games should be playable in silence if desired, however.*** 
 
While sound is an important feature of arcade games, in adventures  
it is often a needless distraction. An adventure game must not, in  
my opinion, be dependent on sound, and must allow the sound to be  
suppressed. Although they are largely an intellectual medium, some  
adventures are accompanied by a little tune that plays throughout  
the game. Luckily, the tune can usually be switched off before it  
drives the player insane. 
 
Sound can also be used as an additional `warning' stimulus about the  
approach of danger. Sometimes a sound in the middle of an otherwise  
silent game gives an agreeable surprise, when, for example, a magician  
appears or a monster is killed. 
 
Recently, in the more highly developed arcade adventures, synthesised  
voices have been used. Regrettably, too, the speech is often hard  
to comprehend. 
 
In common with high quality graphics, recognisable speech and sound  
effects is very greedy of RAM and backing store and games with both  
typically require special or top-of-the-range hardware and many kilobytes  
of backing store to operate at an acceptable response level. 
 
On the other hand, music and conventional beeps and grunts are relatively  
easy and relatively economical of computing resources. 
 
              Text: 
 
The use of language in adventures is not simply a matter of spilling  
your ideas onto the screen. 
 
There is a duty upon any person who delivers words to the public to  
employ proper spelling, grammar, punctuation and construction. You  
may not be writing great literature, but like every wordsmith, you  
should have a dictionary and thesaurus to hand and be ready to use  
them in earnest. 
 
A thesaurus is particularly useful in finding the right word to use  
in any context, to form lists of synonyms, and to find alternate names  
for similar objects so that the player does not have a problem distinguishing  
between them. 
 
         Style: 
 
In my own adventures, the player is usually addressed by the game  
in a very personal fashion thus: 
 
`You are in a dimly-lit cavern. There is a dark entrance  
to the South, where you first entered this cave, and a flight of rough  
steps leading downwards to the North. 
 
There is a heavy sword here. 
 
Your faithful cat is by your side.' 
 
The game delivers the view as it is seen by the character, and the  
items, if connected to the character, are so described. 
 
Whenever the game reacts to player input, it does so as game author  
to player, sometimes, as in Hobbs, putting my words into the mouth  
of a constant and inseparable companion. The reaction to `ATTACK MAGICIAN'  
might be: 
 
`You thrust the heavy sword at the advancing magician,  
but miss, due to overconfidence and bravado. Why not try again?' 
 
 Sword and Sorcery exponents often prefer the present  
tense narrative form with implied prior knowledge of the environment,  
thus: 
 
`Grey Paladin stands in the Ancient Hall of the Wierdmage.  
North lies the Terrible Staircase, South the Hall of Arch Conjurors. 
 
The great sword Toadpricker invites his steel grip. 
 
Mogg the Mouse-slayer stands by his side.' 
 
Whenever the game reacts to player input, it does so in the narrative  
form again: 
 
`Grey Paladin thrusts Toadpricker at Hrrdtczx the  
Parsoneater.' 
 
The style does create a different atmosphere, appropriate to certain  
themes. 
 
 The present tense is, of course, optional. The narrative  
can read like an historical epic instead. 
 
         Output Text: 
 
In text adventures, keep your descriptions brief and to the point.  
There are two reasons for this. In the first place, the player is  
not there to read a Sir Walter Scott novel, and may become bored if  
your descriptions are too fulsome and detailed. In the second place,  
the more features of the scene that you mention, the more likely the  
player is to use a word from your location description in his command,  
and become disappointed when that item is not actually there.  
 
In most successful adventures, a single location description seldom  
exceeds 300 characters. 
 
Try to remember, when writing location descriptions, that unless the  
location is a `YOU ARE DEAD' type of location, the player may visit  
the location a number of times. Do not write the location description  
as it would appear if the player only visits it once. The description  
should fit for the first and subsequent occasions, and any exceptional  
text like `At last! You've found it' should be programmed to appear  
only the first time the location is visited. 
 
The same applies to the short messages that signal item or character  
presence, such as `There is a sharp sword here'. 
 
Detailed item and character descriptions, on the other hand, may need  
to be longer. As the player should not need to access the same description  
very often, it cannot become boring.  
 
It is often helpful to have both a description and a text for things  
that can be read.  
 
For example `There is a large notice here' has a description `The  
notice is four feet high and three feet wide' (perhaps to indicate  
it could be used to wrap something) and might have a text such as: 
 
`NO TRESPASSING. TRESPASSERS WILL BE EATEN.' 
 
          
 
         Input Text: 
 
Most adventure game systems have reasonable parsers, able to separate  
the parts of a user's input, and deliver each part of a composite  
command separately. 
 
It is important, however, that you make sure that synonyms for verbs  
and items are provided wherever possible. If you feel the need of  
an abbreviation, make sure the abbreviation is communicated to the  
player. He is not going to start guessing which words you have decided  
to abbreviate. 
 
Try, too, not to lock a problem solution in on a particular phrasing.  
I remember one US offering which required the player to guess `CRAWL  
THRU THE HOLE'.  
 
`GO INTO THE HOLE', `ENTER HOLE' and `SOUTH' (the hole was the only  
Southward exit) did not work.  
 
Another pitfall concerns the way other characters are spoken to.  
 
The best format I have come across allows  
 
`ASK HAROLD ABOUT THE VAMPIRE'  
 
for information seeking.  
 
`TALK TO HAROLD ABOUT THE PARTY'  
 
enables information giving.  
 
`HAROLD, EAT THE PIE'  
 
issues an instruction to Harold.  
 
The worst was `"HAROLD, VAMPIRE'  as the only form of conversation  
(note the lone double quote!). There was no other way of communicating  
with characters. The results of such requests were usually even grimmer  
than the format required. 
 
Very common verbs may be attached to function keys or icons. It may  
be possible to menu-select items. It is indeed surprising how few  
verbs are required to conduct even an elaborate game. They consist  
of: 
 
     - all the standard game management verbs, such as  
 
HELP, INVENTORY, LOOK, EXAMINE, SAVE, RESTORE, SCORE, QUIT; 
 
- all the direction verbs - ie  
 
N, S, E, W, NW, NE, SE, SW, UP, DOWN, ENTER and EXIT; 
 
- all the common action verbs which appear in many adventures, including  
 
 
ATTACK, KILL, EAT, DRINK, OPEN, CLOSE, LOCK, UNLOCK, GET, DROP, PUT  
x IN y, PUSH, PULL, TURN, PLAY, ASK x ABOUT y, TELL (TALK TO) x ABOUT  
y, LIGHT, EXTINGUISH, GIVE x TO y, READ, FOLLOW.  
 
Even if these are not essential to the game, it is best to have sensible  
responses to a player's attempts to use them; 
 
- action verbs particular to the current game - such as:  
 
SWIM, PAINT, RUB, TIE x TO y, UNTIE x, COOK, BUILD, BURN, CUT, CLEAN,  
USE, KISS. 
 
Remember to synonym as many verbs as you can, so that the player does  
not himself have to resort to a thesaurus to guess the word you are  
expecting him to use.  
 
For CUT, it is reasonable to synonym: 
 
SLICE, CHOP, SEVER, SLASH, SAW, SLIT and STAB. 
 
              The Technology of Game-Writing Systems: 
 
In this section, I will outline some of the basics of game writing  
systems. No matter which system you choose, you should have most of  
these facilities or their equivalents. Appendix A lists a number of  
packages currently available. 
 
         What does a game-writing system do? 
 
In general, you specify all locations, items, characters and special  
circumstances to the game-writing system, and the system produces  
a game. 
 
In the case of some commercially available game-writing systems, an  
editor is built into the product, allowing you to test-run the adventure  
bit by bit as you put the data in. 
 
Most of the time, however, the data for the game is prepared using  
an editor of your own choice, and the ASCII file is fed into a `compiler'.  
The output from the compiler together with some system routines/programs  
is the runnable adventure. This technique usually eases transfer of  
adventures between machines. 
 
If this is your first foray into adventure-writing, it does not much  
matter which system you choose for your first game. The important  
thing is to get some experience with a usable system that runs on  
your hardware.  
 
*** I reckon AGT is now the best, and ADVSYS has not seen the light 
of day since I wrote this*** 
Of the text-only systems, I favour AGT for ease of use and cross-machine  
compatibility. Use ADVSYS for extra power if you can handle object-oriented  
programming. 
 
I have used GAC on the Commodore 64, and found it very good. Its graphic  
interface was usable, and it had some nice facilities. GAC's successor  
for the Atari ST - STAC - has a similar interface. 
 
A product called The Quill, which also has a graphics capability,  
has been very popular in the Sinclair Spectrum sector of the market  
in the UK. I have not used it, but have been agreeably surprised by  
some of the products produced with it. Quill's successor is PAW -  
Professional Adventure Writer. 
 
*** AGT no longer lacks graphics*** 
*** A new arcade adventure system - RAGS - is due out soon *** 
At the `top' end for logic facilities and cross-machine compatibility,  
but lacking graphics, are AGT and ADVSYS, which feature virtually  
a programming language for their command handling structure. PAW,  
GAC and STAC all have a good instruction system, too. GAGS, which  
was the fore-runner of AGT, had virtually no instruction structure,  
but a good adventure could still be written with it. 
 
At run-time, each game-writing system has a particular sequence in  
which it processes standard locations and items, performs location  
changes, and obeys instructions. These vary from system to system.  
Some systems require the writer to specify two sets of instructions,  
one set which must be executed before the player can input his command,  
and the other for processing after the command. 
 
At run-time, game systems vary in the number and sophistication of  
standard responses they give to standard and error conditions, and  
how many standard command verbs they understand and act upon. 
 
The system I wrote for the Atari 800 (not commercially available)  
was unique in that it read and interpreted the data file at run- time.  
Its main advantage was that I could include software routines in the  
data to deal with special situations, including moving graphics and  
elaborate sound. 
 
 If you are a programmer, and decide to build your own  
adventure game system, I can recommend the approach of separate editor,  
compiler and runtime system. It is cleaner, and more economical in  
resources. 
 
         What does the system require from the author? 
 
All locations, items and characters (and their synonyms) are described  
and defined according to a set of criteria specified by the game-writing  
system. These definitions will be similar to those described in Chapter  
8. 
 
If there are graphics, the graphics are either connected firmly to  
a location, or, more usually, there is a picture file so that multiple  
locations can use either the same graphic or different combinations  
of more than one graphic, and so that special instructions can invoke  
an image. 
 
The set of synonyms for standard verbs is defined, together with a  
number of extra verbs that the game will recognise. The game writer  
supplies instructions to deal with these extra verbs. 
 
The `special situation' instructions are then defined. This is where  
the greatest variation arises between systems. The instruction structure  
is used to define the game's behaviour in special circumstances. Some  
systems have virtually no instruction structure at all, embedding  
a few special cases in the location and item descriptions. Most have  
a system for testing conditions and taking action according to the  
result. It is most useful if the instruction system can `see' the  
player's input and the current situation, so that the game can react  
to the use of a particular verb/noun combination in a particular location. 
 
Using the instructions composed by the author, the game will be able  
to recognise special situations and carry out the corresponding actions. 
 
An independent set of messages, coupled to the instructions, is also  
prepared. Some systems feature a unified set of messages so that the  
writer can alter the system standard messages if desired. 
 
It is important to keep track of your progress at this stage. I usually  
use an editor, such as BRIEF, which allows me to edit multiple files  
simultaneously. This also gives me the possibility of keeping a journal  
file with all the things I might forget, like the numbers of special  
variables and the numbers and names of locations and items. If I didn't  
have this facility in the editor, then the notebook would come in  
useful again! 
 
         Getting your Adventure Working: 
 
The previous section makes it look as though you just pour the ingredients  
in one end and get the result out of the other. Unfortunately, it  
isn't like that. At any rate, the result when you do so would not  
be the success you were striving for. 
 
The usual procedure is to input some data, compile and test. Then,  
when that is working, input some more. 
 
In order to speed up the testing process, it is usually possible to  
put temporary short cuts in the first location to skip to much later  
stages of the game. One or more of the NW, NE, SW, SE exits are usually  
available in an early location for this purpose.  
 
Alternatively, you may be able to alter the start location. Equally,  
you may find you have to temporarily re-locate some items so that  
latter stages of the game can be played. 
 
As all programmers know, the surest way to cause a bug is to cure  
another bug. Be sure to regression-test every time you make an alteration  
to an adventure. In the last instance, this means playing it all through  
again.  
 
Remember, too, that the direct path through the adventure is not the  
only one. You have to walk down all the dead ends and do a few silly  
things, too.  
 
The more sophisticated game-writing systems offer more opportunities  
for making an error. 
 
 Remember to read what your descriptions and messages  
say. Very often, it is obvious that the game-writer has never actually  
inspected his text for mis-spelled, missing and duplicated words.  
We often see what we expect to see, so run the files through a spelling  
checker if you have one or ask a friend who can spell to read through  
them if you haven't. 
 
When testing the adventure, after you think you've taken all the bugs  
out of it, watch someone else play it, and note their behaviour in  
your book. The results will tell you lots about the quality of your  
game, and how to improve it. The alternative to writing it all down  
is to print a journal of the play session if the game permits it,  
though sometimes what the player says and the expression on his face  
whilst playing are a lot more significant than what he types!   
 
Children are excellent play-testers, and for the really awkward user,  
choose someone who never plays adventures or who dislikes them. And  
make sure to use someone who feels no obligation to be polite to you.  
Close relatives are therefore a good choice! 
 
For the best results with arcade games, including arcade adventures,  
we videotape both the game and the player. 
 
 Remember that a bug left in the game will not only torture  
your players, it will return to extract its vengeance from you. 
 
  
 
               Chapter 7 
 
               How to Publish and Copy-Protect your Game 
 
              Publishing: 
 
No-one REALLY sits down to write an adventure without hoping to see  
it played by as many people as possible. There are a number of ways  
of publishing it. You can advertise it in a games magazine and sell  
it direct, you can upload it to a bulletin board and allow it to be  
distributed free or as shareware, or you can offer it to a software  
publisher to advertise and distribute for you. 
 
Each of these ideas has advantages and pitfalls.  
 
         Self-Publishing: 
 
Doing your own publishing gives you the best profitability if the  
product is successful, but it is full of pitfalls for the inexperienced,  
and time-consuming to do the job properly. 
 
One way is to upload your product to one or more bulletin boards for  
the computer-owning public to download by telephone. The documentation,  
also uploaded, requests the player to send you a contribution if he  
likes the game. This is called __shareware__. Shareware depends  
on trust between the supplier and the user, and there is a danger  
that some users will never send in their contribution. The considerable  
advantages are that your overheads are low and that you can find out  
how good your game-writing skills are, as a new shareware package  
often excites lots of comment on the networks.__ 
 
 In any event, you must ensure that you obtain the necessary  
licences from the owners of the game-writing system to distribute  
games developed using their system. Each product has a different policy.  
 
 
Some of the possibilities are: 
 
     They grant the licence by virtue of you buying their  
system 
 
They require that you submit a once-only payment and a copy of each  
game distributed 
 
They request a small royalty if you sell more than 150 copies 
 
They sell you a different version of the product for public distribution. 
 
*** AGT is now Freeware *** 
There will almost certainly be no possibility of the copyright owner  
allowing you to upload his software to a bulletin board, unless, like  
ADVSYS and AGT, the game-writing system is itself a shareware product. 
 
Organise the packaging. This may be an expensive activity, especially  
if you want to copy-protect the game and make its packaging look attractive.  
Only if the product is not on public display, but sold exclusively  
by mail order, can you afford to skimp on packaging quality. 
 
 When you are sure you have a complete and packaged product,  
arrange for an advertisement in a suitable magazine. You must expect  
any display entry, even a black and white one, to be expensive compared  
with classified small ads. You will find that regular advertising  
in a number of magazines is disproportionately more successful than  
a single entry. 
 
         Using a Publisher: 
 
A software publisher should take licencing, packaging, production,  
distribution, advertising and other worries off your shoulders.  
 
However, most large software publishers are surprisingly unwilling  
to distribute a game they haven't commissioned. There is pressure  
on them to justify the cost of full-page colour adverts. Wholesalers  
require big mark-ups on the selling price of games and the overheads  
of games publishers are so immense that they have to be fairly sure  
of selling thousands of copies of a product before they will market  
it. 
 
This they ensure, most of the time, by picking up syndicated properties  
like Superman, Batman and James Bond and commissioning a game with  
a clear idea of what they want to see in it. Even then, they are burnt  
sufficiently frequently to make them extremely wary of any product  
that isn't a SURE FIRE WINNER and STATE-OF-THE-ART.  
 
Surprisingly, the games that sell well tend to be copies of existing  
best sellers and are often inferior in intellectual content. This  
pattern does not suit us adventure writers at all. 
 
Smaller companies like Amazon Systems advertise on a less costly basis,  
and will advertise several titles in the same entry. While sales volumes  
are inevitably smaller, direct mail order cuts out the markup expected  
by retail outlets. There is, however, a limit to the number of titles  
such companies can market at any one time, though a specialist company  
of this sort may have a very good mailing list of potential adventure  
game customers. 
 
 In summary, if you can persuade a publisher to distribute  
your product, that probably gives you the best long-term return on  
your investment of time and effort. Royalty levels for software run  
at a very low level, but remember that you can become rich on a small  
percentage of a winner! 
 
              Copy Protection: 
 
If you do sell an adventure, be prepared for it to be pirated if at  
all possible. How can you copy-protect it? 
 
*** Nowadays, CD is a great security device if you can afford it!*** 
Hardware protection methods can be expensive, and may cost the distributor  
more sales than they save. Discs with indelible identifiers and dongles  
can be effective, but there's often some piece of `compatible' hardware  
that the system does not work with. Add to that the fact that amateur  
pirates have all the spare time in the world to work round the problem  
as an academic exercise, then they freely distribute their security-cracking  
system on bulletin boards, advertising it as a back-up feature, and  
that's the end of that.  
 
There is a growing movement against hardware-enforced copy-protected  
software from people who insist on their right to have a security  
copy of software, or who dislike mounting an unnecessary piece of  
hardware every time the game is run, and large software suppliers  
are tending to rely more on documentary and legal safeguards. 
 
The principle to follow is to ensure that it is hardly worth the casual  
buyer's effort to pirate your work. To achieve this, your product  
must be cheap and easily obtainable. Many US adventures were pirated  
just because very few High Street traders stocked them and Mail Order  
distributors took forever to obtain them from the USA because they  
advertised without having them in stock. 
 
         How, then, can your software be copy-protected? 
 
An excellent protection for adventures is to supply a piece of printed  
matter or a product that is essential to the game or highly desirable  
but hard to reproduce. 
 
 Desirable commodities include lavish colour illustrations  
of characters and items, maps and plans, posters that look good above  
the buyer's computer, badges, scorecards, models and plastic trinkets. 
 
         How can printed matter or products be essential to  
the game?   
 
Well, for a start, they can contain the key to a code that has to  
be cracked in the adventure. It may be a map, or it can contain essential  
information to answer a question. A good place to put such questions  
is before a SAVE file can be RESTORED. This means the adventure can  
be played, but probably cannot be won without the information. 
 
It is helpful if the fact that the game needs the enclosures is hidden  
until the player has gone some way into the game. People often take  
a pirate copy of something because they want to see what it's like  
before buying. If the game hooks them and it's inexpensive, they buy  
their own copy. 
 
         How do you make printed matter hard to reproduce  
in these days of photocopiers?   
 
There are three ways: 
 
     It can be big in terms of pages or in format 
 
It can be in colour or transparent 
 
It can be on the original disc or cassette. 
 
A big insert can be a booklet. Some commercial products have a booklet  
with many pages which are hard to photocopy - they are small, and  
embarrassing to be found doing in the office!  The only purpose of  
the booklet is that the player is going to have to use it to crack  
a code or is going to have to reply to questions like: What is the  
third word on the sixth line of page seventeen in the book?  
 
Alternatively, the booklet may be intrinsically desirable, and contain  
essential details of characters and equipment featured in the game.  
 
 
Another ruse is to print the insert at A2 or A1 size, so that it cannot  
be readily photocopied. No-one really likes using something that is  
stuck together with sellotape. If you print an apparently insignificant  
number at the foot of a legal size (or foolscap) sheet, the pirate  
may omit to copy the number when taking an A4 photocopy. A serial  
number printed on the game box may be missed during a photocopying  
session, too. 
 
**** Groan... until the advent of cheap colour scanners, that is.*** 
A coloured insert of large size is an excellent idea, because colour  
photocopying costs about 15 times as much as monochrome. Most pirates  
find this an even bigger turn-off than sellotape! From your point  
of view, however, colour printing is very expensive - much more than  
four times the cost of monochrome, especially for print runs of less  
than 1000. 
 
One of the elaborate forms of colour printing is red-green 3-dimensional  
pictures. There are also other forms of 3-D printing including a process  
for producing hologram-like pictures, which would be impossible to  
copy cheaply. 
 
To make colour printing worth your while, it must have either beauty  
in itself, or importance to the game. In these circumstances the would-be  
player may find it worthwhile to buy your game rather than steal it.  
The down side of colour documentation for copy protection is that  
colour-blind players may be at a disadvantage. 
 
Though it is possible to photocopy onto transparent sheets, it is  
again more the province of the professional office, and difficult  
to do casually or cheaply. Such a sheet could form part of a code-breaking  
or password identification system, particularly if it combined colour  
with transparency. 
 
Just in case you were thinking of trying it, never put a floppy disc  
in a photocopier. There's a good chance you will damage the data on  
it. For that reason, and because no-one looks closely at disc labels,  
it's a good security idea to print some essential data on the label  
of the original disc. We did that with the Paul Daniels Magic Adventure,  
and some pirates even had the cheek to 'phone us up to find out what  
the information was! 
 
One game publishing firm hit upon a good idea. They had a habit of  
filling their packages with various trinkets and pieces of paper.  
For example, one product was sold as a dossier in a colourful folder  
filled with sheets of paper of different and odd sizes and colours,  
and with photographs and other items. It was not obvious which one  
was going to be important for copy protection, so the potential pirate  
had to copy them all, with the result that it became unattractive  
to make a copy for someone else. 
 
Three more ideas that come to mind are: 
 
     codewheel - a sort of circular ready-reckoner with  
multiple discs which are a bother to reproduce 
 
scytale - a combination of a printed item and a cylinder of a certain  
size. The paper is wrapped around the cylinder to reveal one or more  
secret messages 
 
security lens - an optical device which must be placed over a small  
section of the screen to decipher a codeword. 
 
 Copy protection is a tricky subject and can even have  
a damaging effect on overall sales. Therefore, make sure your protection  
is either entertaining or at least trouble-free for the bona-fide  
user.  
 
              Cheat Protection 
 
A subject allied to copy protection is cheat protection. Many of the  
early adventures could be solved by running the game's data file through  
an editor program and reading the messages. Even though the instructions  
could not be readily comprehended, the messages could give away the  
secret of how to do something.  
 
Typically, a message might read: 
 
As you put the coin in the slot, you hear a click. 
 
which is pretty revealing. 
 
The way to prevent this happening is for the game-writing system to  
encipher the data files before distribution, and decipher the data  
in the messages just before displaying it.  
 
Even then, smart users are going to be able to decipher them. This  
they tend to do, not by being cipher experts, though many of them  
undoubtedly are, but by tracing the code that the game-writing system  
uses to decipher the messages. This is a laborious process that most  
of us programmers hate, but which will eventually reveal the cipher  
algorithm. 
 
Having found out the method, they apply the same algorithm to the  
data files and reveal the messages for themselves. 
 
One such system to `crack' the encipherment used by one major games  
company was launched onto the world's public  bulletin boards some  
years ago, though the victim company quickly dealt with the problem. 
 
 You must assume that a small percentage of your users  
will take the trouble to peek at your messages. Even those few game-writing  
systems which do provide encipherment may still unlock your secrets  
to an owner of the game-writing system you use. So try to conceal  
the important messages in the game, and, in particular, the questions  
and responses you use for copy protection. 
 
One method to employ is: 
 
     Don't be explicit with your messages. Instead of  
saying: 
 
         As you push the button, the tiger leaps out. 
 
     say: 
 
         What a surprise! The tiger leaps out. 
 
     so you haven't revealed why the tiger appeared. The  
legitimate player knows he pressed the button just beforehand. 
 
Alternatively, 
 
     Don't put the whole message in one place. In the  
previous example, you might make two messages as follows: 
 
         As you push the button, 
 
     and  
 
         the tiger leaps out. 
 
     And display them separately, one after the other.  
Of course, these messages mustn't be stored next to one another on  
the data file. 
 
Or even, 
 
     Some game writing systems allow the game writer to  
store the messages like this: 
 
         As you =VERB= the =NOUN=, the =ITEM23= leaps out. 
 
     and the PUSH and BUTTON from the player's command  
and the game's item 23 (tiger) are only filled in at run time. 
 
   
 
  
 
 
 
               Chapter 8 
 
               The Architecture of Adventure Games 
 
This chapter describes in more detail  the components which make up  
an adventure game.  The principal entities being: 
 
     __Locations__ (or __Scenes__ or __Rooms__) 
 
__Items__ (or __Objects__ or __Nouns__) which populate these  
Locations 
 
and 
 
__Characters__ (__People__,__ Creatures__, __Monsters__ etc.)  
which roam the Locations.   
 
The player interacts with the game by means of: 
 
__Commands__, which he types into the computer. Commands are based  
around the syntax of the English sentence.  Foreign language variants  
may require the verb or adjective to be in a different position, both  
in Command input and in responses.  Even where a graphic adventure  
requires the user to point at icons, these icons represent 'parts  
of speech'. 
 
__Messages__ are displayed by the game. Some messages are associated  
with the standard locations and items, while others are displayed  
in response to player instructions. 
 
__Instructions__ are included in the game by the writer in order  
to deal with special situations like transformations and discovery. 
 
 Instructions have a number of data items available to  
them. These are: __Variables__, __Flags__ and __Counters__. 
 
              Locations 
 
The features of a Location - also known as its __Attributes__ can  
be: 
 
     __Location Number (or Identifier)__: a unique identifier  
for the Location. It may be the same as Short Description in some  
adventures, though it is often useful to be able to have the same  
short description for two Locations which are logically different 
 
__Short Description:__ used as a shorthand 'heading'  for the Location 
 
__Long Description:__ in text adventures a verbal description, in  
graphics adventures a picture or scene, perhaps accompanied by a verbal  
description 
 
__Exits:__ a list of Locations associated with standard directions  
from current Location.  
eg DOWN - Cellar, UP - Loft 
 
__Light:__ whether the Location is intrinsically lit, or whether  
a light source is required to illuminate the scene.  Sometimes, only  
a particular type of light source would be valid in this particular  
Location 
 
__Reward:__ usually implicitly 0, but may be a number of points  
awarded for successful arrival at current Location 
 
__Help:__ in some game-writing systems, each Location is permitted  
a piece of text which can be offered as a hint if the player commands  
HELP (in other cases, a HELP command is associated with some other  
type of status, not the current Location) 
 
__Status__: usually implicitly Normal but could signal that this  
is Start Location, Untimely End Location, Resurrect/Restart Location,  
Game Won Location, Treasure Room - ie Location in which points are  
scored for leaving Items 
 
     __Bounce:__ in some game-writing systems, a Location  
is permitted to be a 'bounce' Location.  ie if the player enters this  
Location, it is described, but the player is thereafter returned to  
the Location he came from 
 
__Special Commands and/or Items:__ commands or items which have  
a special significance in the current Location, but not in others  
- for example, if the Location were at a riverbank, then the command  
NORTH might have the special meaning SWIM at this Location 
 
   
 
              Items 
 
The Attributes of Items can include: 
 
     __Item Identifier__: Number or other unique identifier  
of Item 
 
__Item Name__: a word, such as WALLET, which is used as the principal  
identifier for this Item in commands 
 
__Synonyms:__ other words which are also valid for identifying the  
Item, such as PURSE or BILLFOLD 
 
__Adjective (or adjectival phrase):__ to distinguish this Item eg  
BROWN LEATHER 
 
__Short Description:__ for use when describing the Item in a Location.  Typically,  
this short description would be `There is a brown leather wallet here' 
 
__Situation:__ where currently located - could be inside another  
Item, in the possession of a Character or could simply be in a Location  
or Limbo 
 
__Detailed Description:__ a complete description which will be delivered  
when the player commands EXAMINE or INSPECT Item 
 
     __Text:__ often an Item such as a book or a note  
has both a description and a text.  The text can be activated by READ  
Item 
 
__Singular/Plural:__ in order to make the grammar of game responses  
correct (although a distressing number of games give responses like:  
`the jewels __is__ not here.'!) 
 
__Fixed/Movable:__ refers to whether Characters can GET it.  Associated  
attributes Size and Weight may also apply 
 
 
      
__On/Off:__ used for a variety of purposes.  For lights, whether  
lit, for magic wands, whether energised, for containers whether empty  
etc 
 
__Light__: whether it gives out light if also ON 
 
__Open:__ for containers/doors whether open or shut 
 
__Locked:__ {for containers or doors) whether locked or unlocked.  Associated  
attribute would be the Item number of the key to unlock it 
 
__Points:__ how many points the Item is worth, either as an immediate  
bonus, or when delivered to a Treasure Location 
 
A raft of other attributes are possible, depending on the game or  
the game-writing system and can include: 
 
     __Weapon:__ Yes/No and Weapon power 
 
__Food:__ Yes/No and whether poisonous 
 
__Garment/Armour:__ Yes/No and Armour Class as in Dungeons & Dragons 
 
__Cost:__ How much money required to purchase 
 
__Magic Spell:__ Yes/No and Type 
 
   
 
              Characters 
 
Some game-writing systems make no qualitative distinction between  
Items and Characters. Others differentiate between Monsters and Friendly  
characters, or between Humanoid and Animal or Creature.  These distinctions  
can help or hinder the game writer to some degree, but are otherwise  
unimportant. 
 
The Attributes of Characters can be drawn from: 
 
     __Character Identifier:__ Unique number or other  
identifier 
 
__Character Name:__ a word, such as THIEF, which is used as the  
principal identifier of the Character in commands 
 
__Synonyms:__ other words or proper names which are also valid for  
identifying the Character, such as CUTPURSE or FAGIN 
 
__Adjective (or adjectival phrase):__ to distinguish this Character  
from other Characters of the same general type eg LEAN AND HUNGRY 
 
__Short Description:__ for use when describing a Location.  Typically,  
this short description would be `There is a lean and hungry thief  
here' or `Fagin is here' 
 
__Situation:__ where currently located - for example in a Location  
or Limbo, or could be inside an Item, such as a wardrobe 
 
__Detailed Description:__ a complete description which will be delivered  
when the player commands EXAMINE or INSPECT Character 
 
__Singular/Plural:__ for correct grammar in game responses when  
the Character is multiple. 
eg IS/ARE and IT ITS/THEY THEM THEIR 
 
     __Gender:__ ie for correct use in game responses  
of HE SHE HIM HER HIS IT and ITS  
 
__Friendly/Hostile:__ to deal with types of response to speaking  
with or attacking the creature.  Other attributes describing the degree  
of ferocity, strength, vulnerability etc 
 
__D & D characteristics:__ Class, Courage, Wisdom, Constitution,  
Dexterity etc 
 
__`Achilles Heel'__: Weapon to which the character is particularly  
vulnerable. eg fresh air, exercise 
 
__Points:__ for meeting or defeating creatures 
 
__Companion:__ Yes/No - Yes means the Creature tries to follow the  
player Character from Location to Location. 
 
   
 
              Commands 
 
The simplest command usually accepted consists only of a verb. 
 
Typical free-standing verbs are: 
HELP, LOOK, INVENTORY. 
Most adventures also accept direction `verbs' such as: NORTH, SOUTH,  
EAST, WEST. 
 
An important pair of special verbs is:   
SAVE and RESTORE 
which allow the player to dump the current state of the game and reload  
it later. 
 
Conventionally, the one-word verbs: 
SCRIPT and UNSCRIPT 
are used to switch a printed journal of the game on and off. 
 
The next stage of command construction is: Verb Noun.  Examples are: 
OPEN BOX 
CLOSE DOOR 
and GET APPLE. 
 
Most games allow for and ignore: 
THE, THIS, A, AN, MY, HIS before a noun. 
 
So the above examples could have read: 
OPEN THIS BOX 
CLOSE THE DOOR 
GET AN APPLE. 
 
A Noun may be an Item or a Character. 
 
If there may be more than one of a noun, for example a red box and  
a blue box, it should be possible to distinguish these.  For that  
reason, it is usually permissible to have an adjective with any noun,  
so that OPEN RED BOX is understandable to the system, even if there  
is no other box to be referred to. 
 
Another common construct allowed is to pass the command to another  
character in the story, thus: 
WIZARD, ENCHANT THE PRINCE. 
 
Some actions cannot be expressed in this way, even by sticking multiple  
Verb Noun commands together.  These are of the form: 
UNLOCK THE DOOR WITH THE KEY 
HIT THE BALL WITH MY CLUB 
ASK THE MERCHANT ABOUT THE GOLD. 
In these commands, a preposition is permitted before the second noun. 
 
The next important construct is the chaining of commands together,  
as, for example: 
EAT THE EGG THEN DRINK THE WINE 
GET THE DUCK AND SHOOT THE GOOSE. 
The game will usually treat these as two separate commands.  Even  
OPEN BOX, EXAMINE BOX are acceptable to many games, substituting a  
comma for the conjunctions THEN or AND. 
 
It is often permissible to supply multiple nouns as in: 
PUT THE BOTTLE AND THE BAG IN THE BASKET, or GET BUCKET, SPADE. 
 
There are a number of strategies for reducing input for text adventures.  One  
of these is to reduce common verbs to a single letter as in H for  
help or I for Inventory.  Another is to allow AGAIN or G as an instruction  
to repeat the previous command, so that, for example, if you are fighting  
a troll, the player could just say HIT TROLL WITH STICK once, and  
repeat G until the troll begged for mercy. 
 
Another common solution is to allow IT or HIM or THEM as a substitute  
for the Noun used in the previous sentence, as in: 
FOLLOW THE PRIEST, TALK TO HIM 
or GET THE APPLE AND EAT IT. 
 
The collective Noun ALL and its exception ALL BUT are also commonly  
allowed in games.  For example, GET ALL would typically transfer to  
the player's inventory all the movable Items in a Location, while  
DROP ALL BUT SWORD would drop everything the player was carrying,  
except the sword. 
 
              Messages 
 
The messages in a game are the main area of communication between  
the game and the player. They are displayed by the game system itself  
to signal standard situations. The game writer can also trigger the  
output of messages as a response to player input.  
 
Often, the game writer has the option to change even those messages  
that the game system outputs. In this way, a game can be considerably  
customised. 
 
              Instructions 
 
Game-writing systems show great variance in the area of Instructions. 
 
The game writer uses the Instructions to monitor the game and to handle  
all the player actions the game-writing system cannot handle. 
 
For example, most of the game-writing systems will move the player  
successfully from Location to Location, by simply recognising the  
direction commands input by the player and reacting appropriately.  
Most will also handle GET, DROP, OPEN, CLOSE and so on. 
 
 However, you will want additional control. For example,  
you need a mechanism for opening secret exits if the player acts in  
a certain way. You may want to set a timer to catch the player in  
an ambush. You will need to move your non-player characters around,  
do transformations and discoveries and react to non-standard commands  
like PEEL THE BANANA. 
 
__Conditional__ Instructions are used by the game writer to test  
for conditions that the game knows about. 
 
__Action__ Instructions actually change the state of the game in  
some way. 
 
__Control__ Instructions handle the sequence in which the game instructions  
are obeyed. 
 
This is hard to communicate, so let's take a typical example. Suppose  
we are dealing with teleporting the player to the palace if he drinks  
a potion, but only if he drinks it in the torture chamber after midnight.  
 
 
I will use AGT's instructions as an example. 
 
Each set of instructions is grouped under a COMMAND that the player  
has input, so the sequence would go: 
 
COMMAND DRINK POTION 
IsCarrying 221  (Player carrying flask?) conditional 
AtLocation 18 (In Torture Chamber?) conditional 
FlagON 2 (After midnight?) conditional 
GoToRoom 88 (go to the palace) action 
SwapLocations 221 222 (Switch the full flask for an empty one) action  
DoneWithTurn (Don't process any more instructions) control END_COMMAND 
 
and the instructions to deal with failure are: 
 
COMMAND DRINK POTION 
IsCarrying 221  (Player carrying flask?) conditional 
SwapLocations 221 222 (Switch the full flask for an empty one) action  
PrintMessage 125 (`Sorry. You got it wrong.') action 
DoneWithTurn 
END_COMMAND 
 
  
 
              Variables, Flags and Counters 
 
Not all game-writing systems provide all three types of data. Luckily,  
a variable can be used to substitute for either of the other types. 
 
Variables are used by the game to store numbers. We might use variable  
1 to keep note of the number of gold pieces the player has. Then if  
we need to display a message showing the value of the player's purse,  
it might be: 
 
You have =VAR 1= gold pieces 
 
and the system would substitute the number of gold pieces for =VAR  
1= when it was displayed. 
 
If the player were trying to buy a new sword, we could cause the instructions  
to check variable 1 to make sure he could afford it. 
 
Flags are used to remember ON/OFF switches. A flag is either on or  
off. A Flag might be used in the game to indicate whether the player  
had met a particular character on some previous occasion, in order  
to suppress the initial encounter message at later meetings. 
 
Counters are variables which the game itself increases or decreases  
by 1 at every turn. They are used to schedule all sorts of time-dependent  
events. 
 
Instructions usually exist to compare and calculate with the various  
counters and variables. Other instructions can be used to set and  
clear Flags, and to test their condition.  
 
 
 
               Chapter 9 
 
               A Text Adventure 
Example 
 
Here is an epic fragment of one of my own text adventures,  
written using Softworks' AGT game-writing system.  
 
You will know where you are by reading the short description  
between the <<>> signs. 
 
The game prompt is `What Now?' 
The player command is in upper case.    
 
Sir Ramic Hobbs and the High Level Gorilla 
                by Gil Williamson 
                1st December 1989 
 
                     Introduction...... 
 
Just in case you've forgotten,  you are Sir Ramic Hobbs,  Knight  Errant.  It  
really WAS an error to come out on this Quest. 
 
I am your guide.  My name is Prang,  Wizard Prang.  I'll try  to  keep  
you up-to-date with what's going on by means of disembodied  voice,  
 
a technique I learned from the Flying Sorceror, Ufo Snafu.  I once  
had a body, just like yours... well, not JUST like yours..  until I offended  
Sir Kewler Stairs, who disembodied me with  one   blow of his handy  
mace.  Still, I make myself useful. 
 
<< Smelly Cave >>   
You are in an extremely smelly cave.   The floor slopes  steeply from  
West down to East. There is a faint glow from below, whence the  
smell appears to be emanating, and a rather  brighter  light from  
above.  The floor is slippery.  
    There is an ornate sword here.  
    There is a round peg here. 
    There's a signed agreement here. 
    There is a curious flute here. 
    There's a grubby manual here. 
    There is a rather untidy owl here. 
    ============ 
 
What Now? INVENTORY 
You aren't carrying anything. 
You are wearing the following: 
  steel helmet  
  suit of armour 
 
What Now? EXAMINE HELMET AND SUIT                
You  
are wearing a battered steel helmet with a ragged plume on top, and  
a visor that opens and closes. There's not much of you visible. You  
are completely encased in a rather rusty suit of armour handed down  
from your uncle, who perished in it.  You can still smell him.     
 
What Now? EXAMINE SWORD      The  sword  
looks valuable,  but I wouldn't try hitting a  bear with it,  
if I were you.   Take my advice. A person in your condition should  
NEVER take on a bear under ANY circumstances.  Oh, and by the way,  
the sword is blunt.   
 
What Now? EXAMINE AGREEMENT      It's  
an agreement you rashly signed whilst under the influence   of  
mead at the Khan's Pleasure Dome Night.  It's worth a read, actually. 
 
What Now? READ AGREEMENT       
It reads:    "__AN  AGREEMENT  MADE IN THE KINGDOM,  OR PERHAPS THE 
KHANDOM,  OF TRASCH KHAN, WORTHY SUCCESSOR TO CUDDLY KHAN, BUILDER OF  
THE DOME, ON OCTEMBER THE 32nd.__ 
    "__BEING OF SOUND MIND__ {That's a laugh! after all that mead!} 
__I, SIR RAMIC HOBBS __{That's you, remember}  __AGREE TO RETRIEVE  
PRINCESS ANNE DE PEA FROM THE EVIL GRASP OF THE HIGH LEVEL GORILLA  
__{That's HLG,a formidable chap who could, with two fingers, compress  
your windpipe till all you could wheeze was 'eek'}, __NOW RESIDENT  
AT THE TOP OF THE MIDDEN.__ 
   "__SIGNED,   SIR RAMIC HOBBS__" ... that's it. 
You woke up in a cave about half-way up the Midden, with your mead  supply  
expired.  Bad news.  You were meant to bring a ransom,  but  you  
left it behind,  so back to the Dome with you!  Sorry!   
 
What Now? EXAMINE FLUTE       
It looks clean (as a whistle, Ho, Ho). Can you play?  There's  
something written on it.    
 
What Now? READ IT       
In tiny writing, too small for your bloodshot eye to read, it says: "With  
the compliments of the Arabian Knights' Company."      
 
What Now? HELP       
Perhaps you should consider leaving this hell-hole.  
 
What Now? GET PEG     
You are now carrying the round peg. 
 
What Now? E 
<< Bear Lair (West) >>  
This is where the smell was coming from,  all right.   There are piles  
of it on the floor.   The inhabitant of this cave doesn't do it  
in the woods.   The cave where you woke up is to the West.  
The main part of the Bear Lair is East of here. 
   There is a round hole in the wall at shoulder height. 
   ============ 
 
What Now? EXAMINE HOLE 
There is some mechanism inside the hole.  
 
What Now? PUT PEG IN HOLE AND PUSH IT    
You have put the peg in the hole.      
The peg cleverly resists your touch. 
 
What Now? PULL IT      
There seems to be a bear moving around in the bear lair.      
Pulling on the peg doesn't seem to work. 
 
What Now? HELP 
None of us are enjoying this very much.  There must be something sensible  
to do.     
 
What Now? TURN THE PEG 
 
Turn, turn, turn...      
 
 
 
What Now? W  
<< Smelly Cave >>  
You are in an extremely smelly cave.   The floor slopes  steeply from  
West down to East. There is a faint glow from below, whence the  
smell appears to be emanating, and a rather brighter light from  
above.  The floor is slippery. 
  There is an ornate sword here.  
  There's a signed agreement here.  
  There is a curious flute here.  
  There's a grubby manual here. 
  There is a rather untidy owl here. 
  ============ 
 
What Now? W 
<< Precipitous Ledge >>  
You are standing on a precipitous ledge above what is called 'an aching  
void'.  You're not quite sure whether the void aches more than  
your head.   A long way below,  to the West,  you can see a castle  on  
the shore of the Sunless Sea, which stretches off  to the  
South.   Round to your left,  far below,  at the foot of the Midden,  
the River Alf steams (yes, steams) into the sea.  Behind you,  
to the East, is a cave.   A path sneaks North, through some bushes. 
   There's a wooden fence in front of you.  
   There is a rather untidy owl here. 
   ============ 
 
What Now? EXAMINE FENCE       
The fence is fairly sturdy - sturdier than you - but not securely fastened  
in place.       
 
What Now? EXAMINE OWL       
The owl is extremely dirty and threadbare.  Bloodcurdling Owl is his  
name, but we'd better call him BO for short.      
BO :__ Eminences, my disgusting name is Bloodcurdling Owl. Because 
    this is needlessly long, honoured beings may call me BO for  
 short ....__    
Yes, I've just told him all that.  Sir Ramic is not deaf, merely hungover,  
as serves him damned well right.      
BO :__ I beg your Graces' pardons.   If Sir Ramic is so foolish as 
    to require my advice, let him say: ASK BO ABOUT whatever. 
    Now allow me to remove my unpleasant presence to a discreet 
    distance.__    
 
What Now? ASK BO ABOUT FENCE       
BO : __If your eminence is prepared to take the advice of one 
    who has but recently crawled from under a heavy stone, 
    only an ignoramus like myself would need to ask  about 
    that. __ 
 
What Now? ASK BO ABOUT QUEST       
BO :__ I grovel at your feet, Highness. I have heard them say 
    this  quest is characterised by a total lack of  importance. 
    Like me, and unlike you, the items and characters populating 
    the  halls of this world are only there because they have to 
    be, and would much rather be left to their fates.__  
 
What Now? ASK BO ABOUT ANNE       
BO :__ My stupefyingly ill-considered  feeling is as follows: 
    one has frequently seen better turned legs on a sideboard, 
    her voice is clearly audible over a circular saw, but she is acutely 
    sensitive on the subject of eating in bed. __      
 
What Now? EXAMINE BUSHES 
You see nothing unusual. 
 
What Now? N  
<< Vantage Point >>  
From this high and windy vantage point, you can see miles to the North   and  West.   To  
the North,  the Khan's pleasure dome  is  occasionally   visible  through  
squalls of rain,  beyond forests ancient as the hills   (it  
says here). 
Far below and to one side, you can see a ledge with a grove of bamboo. 
To the West, Baron Doar's castle guards the only road to the  pleasure   dome. 
What a pity you're going to have to walk all that distance, Sir Ramic..  ..  
if you ever get down from this rock, that is. 
A narrow path goes South, through some bushes.   There are some  steps  
leading upwards.    ============ 
 
What Now? HELP       
Relax. The fresh air here will do you good.    
 
What Now? RELAX 
I don't understand RELAX as a verb. 
 
What Now? WAIT     
Time passes... 
 
What Now? UPWARDS  
<< Tunnel Entrance >>  
You are at the entrance to what has once been a mine. Rails lead East  into  
the tunnel.   The only other way is back down to  the vantage  
point.   ============ 
 
What Now? HELP       
For God's sake, cut out the snivelling, Sir Ramic.   
 
What Now? E 
<< Tunnel >>   
You are in the tunnel. There is a light at the end of the tunnel.   With  
your luck,  it's an oncoming train!   Just East of you here,   there is  
a gap in the tunnel floor,  though the  rails  continue  
across  the gap.   Water cascades from the ceiling into this gap,  
and disappears with a loud roar. 
The gap is too wide to jump across, and the rails look slippery. 
 There is a strange-looking bat here.  
 ============ 
 
What Now? EXAMINE BAT       
The bat is about thirty inches in length, consisting of a round  handle  
of about ten inches, and twenty inches of flat blade.  It  
is, in fact, a CRICKET BAT, and an Englishman like you,  
Sir Ramic, will find many ways to USE it.     
 
What Now? GET BAT THEN USE IT     
You are now carrying the strange-looking bat.     
You play with the bat for a while. Nothing significant happens. 
 
What Now? EXAMINE GAP       
You see nothing special.    
 
What Now? EXAMINE ROCKS 
You see nothing unusual. 
 
What Now? HELP 
What you need here is something to bridge that gap.  
 
What Now? E  
<< Cascade >>   
You were WARNED, Sir Ramic.  
As predicted, you miss your footing.  Not at all surprising, really.     The  
cascade plunges 40 feet onto a stone slab.  You cascade with it.     As  
well as getting extremely wet... 
**** You are Dead ****      ============  
 
You have seen 7 locations (out of 69), in 38 turns.  
Your score is 0 out of a possible 163 points.  
(This game was saved 0 times and restored 0 times.)  
 
In a graphics adventure, these locations would have been  
illustrated by a picture, with or without accompanying text. 
 
The commands such as INVENTORY, EXAMINE, NORTH would have  
been input by icon and item select. 
 
   
 
 
 
 
 
 
 
               Appendix A 
 
               Some Game-Writing Systems 
 
 
**** The data in this appendix is out of date.  Consult Computer 
magazines and BBSs for up-to-date info.*** 
 
            Appendix B 
 
               Some Games the Author has Played, Seen or simply 
Discussed.  
 
My apologies for having missed many adventure games, particularly  
those issued on only one or two machine types, but this appendix concerns  
games about which I have actual knowledge. 
 
The publishers are listed in the sequence in which I first became  
aware of their games. This has resulted in them appearing in approximately  
chronological order of entry to the adventure market. 
 
              Adventure International. 
 
The Scott Adams text adventures were the first computer adventures  
I ever saw, and are still excellent examples of the genre. 
 
They appeared on Tandy TRS80s before I saw them on an Atari 800. 
 
     Pirate Adventure 
Secret Mission       (previously Mission Impossible) 
 
   
 
              Infocom Inc. 
 
Infocom games were nearly all text-only until recently. The term __Infocom-like__  
is often used to describe the classic game interface used in text  
adventures, and many of these games have become the models for the  
rest of the industry. 
 
         Zork series: 
 
     Zork I, II, III 
Beyond Zork 
Zork Zero 
 
         Detective: 
 
     Deadline 
Witness 
 
         Science Fiction: 
 
     Starcross 
Planetfall 
Stationfall 
Suspended 
Hitchhiker's Guide to the Galaxy 
Leather Goddesses of Phobos 
 
         Fantasy & Horror: 
 
     Wishbringer 
Enchanter 
Lurking Horror 
 
         Other: 
 
     Hollywood Hijinx 
Bureaucracy 
Shogun (with still graphics!) 
 
      
 
              Magnetic Scrolls 
 
A British firm who maintained (some say improved upon) the Infocom-like  
text interface and provided excellent still graphics, too. 
 
     The Pawn 
 
              Level 9 
 
Another British firm which has brought nice graphics to traditional  
text adventures. 
 
     Jewels of Darkness (Colossal Cave clone) 
Gnome Ranger 
Ingrid's Back 
 
              Melbourne House 
 
An Australian firm, again producing well illustrated text adventures. 
 
     The Hobbit 
Sherlock 
 
              Sierra On-line Inc. 
 
This firm has produced some of the most successful arcade adventures. 
 
     Space Quest 
Police Quest 
the Leisure Suit Larry series 
 
              Palace/Delphine 
 
French-based adventure writers producing intricate arcade adventures. 
 
     Future Wars 
 
            Appendix C 
 
               Bibliography 
 
Just a few of the books you may find useful, in the form: 
 
Title - Author (if available) - Publisher. 
 
__Science Fiction Puzzle Tales - Martin Gardner - 
 Penguin__ 
__A feast of thought-provoking puzzles for the mentally alert. 
 
__Codes & Ciphers - Martin Gardner - Dover__ 
A small, but excellent manual on everyday codes and ciphers, as opposed  
to the kind used for computer and defence security.  
 
__The Dungeons and Dragons Handbooks -   - TSR Inc__   
__Study the art of the Dungeon Master. The adventure game writer  
is in a similar trade.__ 
 
__The Art of Walt Disney - Christopher Finch - Abrams__ is a super  
source-book for background technique. My copy is luxurious, but I  
believe there is a cheaper edition now. 
 
__Chinese Brush Painting - Jane Evans - Collins__ 
Some instructive examples in economy of line and colour. 
 
Comic Books by, for example, Frank Miller and Alan Moore demonstrate  
economy of background and excellent action. 
 
 Anthologies of Poetry and Books of Quotations also often  
trigger inspiration.__ 
 
__De Re Atari - Chris Crawford - Atari __ 
Some of the essentials of good game creation were first formulated  
in this book on the Atari 800 home computer, from one of the most  
innovative computer games writers. 
 
De Re Atari may be hard to find these days, but Chris has written  
another book - The Art of Computer Game Design - and is the editor  
of the Journal of Computer Game Design. 
 
May I just remind you about: 
__Roget's Thesaurus -   - Penguin__ 
The source of good synonyms. There are also computer-based thesaurus  
products nowadays, but I prefer a good browse through the paper version. 
 
Finally, the__ Writers' and Artists' Yearbook -   - Black.__ Lots  
of sensible stuff about copyright, libel and royalties. 
 
            Appendix D 
 
               Checklists 
 
              Checklist 1 - Major Stages in Adventure Game Development 
 
     Decide on your Objective - Leisure or Profit 
Choose a Game-writing System 
Choose a Theme 
Sketch out a Plot 
Draw a Map 
Design some Locations 
Design some Items 
Design some Characters 
Assemble the Main Plot 
Develop and Test 
Play Test 
Copy Protect 
Cheat Protect 
Package 
Distribute. 
 
   
 
              Checklist 2 - Some Background Themes: 
 
         General: 
 
     Crisis Management: 
    Bank Robbery 
    Mine Disaster 
    Plague 
    Flood 
    Hurricane 
Voyage under Sail 
Mountaineering 
Polar Exploration 
Japan in the days of Samurai 
Locked in the Asylum 
Gangbusters 
Biggles 
Spycatching 
Cave diving 
U-boat  
Amnesia 
Wild West 
 
         Science Fiction: 
 
     Time Machine 
I, Robot (using Asimov's Laws) 
Bodysnatchers (parasitic aliens) 
Peace Enforcement at the Galactic Rim 
Spying and Sabotage on an Alien Planet 
Marooned in Space (or on a planet) 
Post-holocaust 
Encyclopaedia Galactica 
Crime and Espionage on a Computer Network 
 
   
 
         Fantasy: 
 
     Journey beyond the Dawn 
Ghostbusting (sorry - exorcism) 
The World of: 
    Egyptian Myth 
    Indian (Red, South American or East) Myth 
    Greek/Roman Myth or History 
    Kalevala & other Norsery 
Conquer Evil in the Land as: 
    King 
    Chief Wizard 
    Army Commander 
    Long Lost Heir 
    Frog who once was Prince 
 
         Non-traditional Uses of Game-writing Systems: 
 
     I Ching (Chinese oracle) 
Astrology 
Troubleshooting 
Programmed Learning 
 
   
 
              Checklist 3 - Plot Elements: 
 
Possession of Equipment 
Collect & Assemble 
Transformation 
Discovery 
Weapons 
Apparel (Clothing/Armour) 
Puzzles 
Bribery 
Logical & Geographical Mazes 
Variable Geography 
One Way & Restricted Exits 
Secret Exits 
Door Openers 
Curtains & Carpets 
Knowledge 
Elaborate Patterns of Behaviour 
Richness of Methods 
Riddles 
Transportation 
Death & Resurrection 
Containers 
Push, Pull, Turn & Play 
Food & Drink 
The Senses 
Invisibility 
Following 
Proxy Actions 
Codes & Ciphers 
Time Dependence 
Weather 
Clues 
Logical & Physical Traps 
Alarms & Ambushes 
Unusual Uses 
Skills, Powers & Magic Spells 
Helping Out 
Darkness, Obscurity and Illusion 
Lies and Contradictions 
Companionship 
Monsters 
 
 
