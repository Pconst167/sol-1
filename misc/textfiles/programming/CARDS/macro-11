----------------------------------------------------------------
|                                                              |
|                                                              |
|                Digital Equipment Corporation                 |
|                                                              |
|  M     M     A       CCCC   RRRRRR    OOOOO         1     1  |
|  MM   MM    A A     C    C  R     R  O     O       11    11  |
|  M M M M   A   A   C        R     R  O     O        1     1  |
|  M  M  M  AAAAAAA  C        RRRRRR   O     O  XXX   1     1  |
|  M     M  A     A  C        R R      O     O        1     1  |
|  M     M  A     A   C    C  R   R    O     O        1     1  |
|  M     M  A     A    CCCC   R     R   OOOOO        111   111 |
|                                                              |
|              General PDP-11 MACRO-11 Assembler               |
|             Symbol, Directive and Error Summary              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX|
|XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX|
|XXXXX  X XXX  XXX XXXXXXXX XXX  XXX XX  XXXX XXXXXXXX XXX  XXX|
|XXXXX  X XXXXXXXX XXXXXXXX XXXXXXXX XX  XXXX XXXXXXXX XXX  XXX|
|XX     X XXX  XXX XX    XX XXX  XXX X    XXX XX    XX XXX  XXX|
|X  XX  X XXX  XXX X  XX  X XXX  XXX XX  XXXX XXXXX  X XXX  XXX|
|X  XX  X XXX  XXX X  XX  X XXX  XXX XX  XXXX XX     X XXX  XXX|
|X  XX  X XXX  XXX X  XX  X XXX  XXX XX  XXXX X  XX  X XXX  XXX|
|XX     X XXX  XXX XX     X XXX  XXX XXX   XX XX     X XXX  XXX|
|XXXXXXXX XXXXXXXX XXXXX  X XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX|
|XXXXXXXX XXXXXXXX XX    XX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX|
|XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX|
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|Written by     Jonathan Bowen                                 |
|               Programming Research Group                     |
|               Oxford University Computing Laboratory         |
|               8-11 Keble Road                                |
|               Oxford OX1 3QD                                 |
|               England                                        |
|                                                              |
|               Tel +44-865-273840                             |
|                                                              |
|Created        September 1981                                 |
|Updated        April 1985                                     |
|Issue          1.5                Copyright (C) J.P.Bowen 1985|
----------------------------------------------------------------
----------------------------------------------------------------
|Symbol/Directive     |Description                             |
|---------------------+----------------------------------------|
| CR,LF               |Line terminator                      [1]|
| FF                  |Page terminator                      [1]|
| SP                  |Item terminator or field terminator     |
| HT                  |Item terminator or field terminator     |
| VT                  |Source line terminator                  |
| :                   |Label terminator                        |
| ::                  |Global label terminator                 |
| =                   |Direct assignment operator              |
| ==                  |Global direct assignment operator       |
| %                   |Register term indicator                 |
| #                   |Immediate expression indicator          |
| @                   |Deferred addressing indicator           |
| (                   |Initial register indicator              |
| )                   |Terminal register indicator             |
| ,                   |Operand field separator                 |
| ;                   |Comment field indicator                 |
| +                   |Arithmetic addition or auto-increment   |
| -                   |Arithmetic subtraction or auto-decrement|
| *                   |Arithmetic multiplication               |
| /                   |Arithmetic division                     |
| &                   |Logical AND                             |
| !                   |Logical inclusive OR                    |
| "                   |Double ASCII character indicator        |
| '                   |Single ASCII character or concatenation |
| .                   |Assembly location counter               |
| <                   |Initial argument indicator              |
| >                   |Terminal argument indicator             |
| ^                   |Unary operator or argument indicator    |
| \                   |Macro call numeric argument indicator   |
|---------------------+----------------------------------------|
|.ASCII  /string/     |ASCII string                            |
|.ASCIZ  /string/     |ASCII string with Zero byte terminator  |
|.ASECT               |Absolute Section                        |
|.BLKB   exp          |Block Bytes (8-bit)                     |
|.BLKW   exp          |Block Words (16-bit)                    |
|.BYTE   exp(s)       |Byte(s) (8-bit)                         |
|.CSECT  (name)       |Relocatable program Section             |
|.DSABL  arg          |Disable function                     [3]|
|.ENABL  arg          |Enable function                      [3]|
|.END    (exp)        |End of program (and start address)      |
|.ENDC                |End Conditional assembly                |
|.ENDM   (name)       |End Macro definition or repeat block    |
|.ENDR                |End Repeat block                        |
|.EOT                 |End Of Tape (ignored)                   |
|.ERROR  exp ;text    |User-invoked Error                      |
|.EVEN                |Set current location to Even address    |
|.FLT2   arg(s)       |2-word Floating Point number(s)      [1]|
|.FLT4   arg(s)       |4-word Floating Point number(s)      [1]|
|.GLOBL  sym(s)       |Global symbol(s)                        |
|.IDENT  /string/     |Identity string (up to 6 radix-50 chars)|
|.IF     cond,arg     |If condition true then assemble code [4]|
|.IFF                 |If last condition False assemble code   |
|.IFT                 |If last condition True assemble code    |
|.IFTF                |If last cond True or False assemble code|
|.IIF    cond,arg,stat|Immediate conditional assembly       [4]|
|.IRP    sym,<arg(s)> |Indefinite Repeat block                 |
|.IRPC   sym,<string> |Indefinite Repeat block                 |
|.LIMIT               |Reserve 2 words for program Limits      |
|.LIST   (arg)        |Enable Listing (option)              [5]|
|.MACRO  name(,arg(s))|Macro name (and parameter(s))           |
|.MCALL  arg(s)       |Macro Call system macro(s)              |
|.MEXIT               |Exit Macro or indefinite repeat block   |
|.NARG   sym          |Equate Number of macro Arguments     [2]|
|.NCHR   sym,<string> |Equate Number of Characters in a string |
|.NLIST  (arg)        |Disable Listing (option)             [5]|
|.NTYPE  sym,aexp     |Equate addressing mode Type (6-bit)  [2]|
|.ODD                 |Set current location to Odd address     |
|.PAGE                |Skip Page in assembly listing           |
|.PRINT  exp ;text    |User-invoked message                    |
|.PSECT  name(,arg(s))|Program Section (and attributes)     [6]|
|.RADIX  n            |Set program Radix (n=2,8,10, default=8) |
|.RAD50  /string/     |Radix 50 string (space,A-Z,$,.,?,0-9)   |
|.REPT   exp          |Repeat lines                            |
|.SBTTL  string       |Subtitle                                |
|.TITLE  string       |Title                                   |
|.WORD   exp(s)       |Word(s) (16-bit)                        |
----------------------------------------------------------------
----------------------------------------------------------------
|Symbol/Error         |Description                             |
|---------------------+----------------------------------------|
| <...>               |Expression precedence or macro argument |
| ^x...x              | ditto                                  |
| x...x               |Character string (x not <, = or ;)      |
| 'x                  |ASCII form of 1 character (8-bit)       |
| "xx                 |ASCII form of 2 characters (16-bit)     |
| ^Bn                 |Binary number                           |
| ^Cexp               |Complement of expression                |
| ^Dn                 |Decimal number                          |
| n.                  | ditto                                  |
| ^Fn                 |Floating-point number (16-bit)       [1]|
| ^On                 |Octal number                            |
| ^Rxxx               |Radix-50 form of 3 characters (16-bit)  |
|---------------------+----------------------------------------|
| CR                  |ASCII carriage return (Octal 15)        |
| FF                  |ASCII form feed (Octal 14)              |
| LF                  |ASCII line return (Octal 12)            |
| SP                  |ASCII space character (Octal 40)        |
| HT                  |ASCII tab character (Octal 11)          |
| VT                  |ASCII vertical tab character (Octal 13) |
|---------------------+----------------------------------------|
| aexp                |Addressing mode expression              |
| arg                 |Argument                                |
| cond                |Condition                               |
| exp                 |Constant expression                     |
| n                   |Number                                  |
| name                |Name                                    |
| stat                |Statement                               |
| string              |String of ASCII characters              |
| sym                 |Symbol                                  |
| text                |Any text string                         |
| x                   |Single ASCII character                  |
| (s)                 |Optional continuation of argument list  |
| ...                 |Any string                              |
|---------------------+----------------------------------------|
| [1]                 |Not applicable on all assemblers        |
| [2]                 |May only be used in macro definitions   |
| [3]                 |arg  = (ABS/AMA/CDR/CRF/FPT/LC/LSB/PNC/ |
|                     |        REG/GLB)                        |
| [4]                 |cond = (EQ/NE/GT/LE/LT/GE/DF/NDF/B/NB/  |
|                     |        IDN/DIF/Z/NZ/G/L)               |
| [5]                 |arg  = (SEQ/LOC/BIN/BEX/SRC/COM/MD/MC/  |
|                     |        ME/MEB/CND/LD/TOC/SYM/TTM)      |
| [6]                 |args = (RO/RW, I/D, GBL/LCL, ABS/REL,   |
|                     |        CON/OVR)                        |
|---------------------+----------------------------------------|
| A                   |Assembly error                          |
| B                   |Bounding error                          |
| D                   |Doubly-defined symbol referenced        |
| E                   |End directive not found                 |
| I                   |Illegal character detected              |
| L                   |Line length greater than 132 characters |
| M                   |Multiple definition of a label          |
| N                   |Number with digit not in current radix  |
| O                   |Opcode error                            |
| P                   |Phase error                             |
| Q                   |Questionable syntax                     |
| R                   |Register-type error                     |
| T                   |Truncation error                        |
| U                   |Undefined symbol                        |
| Z                   |Instruction error                       |
|--------------------------------------------------------------|
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
----------------------------------------------------------------
