----------------------------------------------------------------
|                                                              |
|                                                              |
|                       Hewlett Packard                        |
|                                                              |
|                                                              |
|                      H     H   PPPPPP                        |
|                      H     H   P     P                       |
|                      H     H   P     P                       |
|                      HHHHHHH   PPPPPP                        |
|                      H     H   P                             |
|                      H     H   P                             |
|                      H     H   P                             |
|                                                              |
|                                                              |
|         666         4       000       000       000          |
|        6           44      0   0     0   0     0   0         |
|       6           4 4     0   0 0   0   0 0   0   0 0        |
|       666666     4  4     0  0  0   0  0  0   0  0  0        |
|       6     6   4444444   0 0   0   0 0   0   0 0   0        |
|       6     6       4      0   0     0   0     0   0         |
|        66666        4       000       000       000          |
|                                                              |
|                  General HP64000 Assembler                   |
|             Symbol, Directive and Error Summary              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|----------------------- XXXX ---------------------------------|
|*********************  XXXX            #######################|
|*****************     XXXX                  ##################|
|***************      XXXX                     ################|
|*************       XXXX                        ##############|
|************       XXXX                          #############|
|***********       XXXXXXXXXXXX     XXXXXXXXXXX    ############|
|**********       XXXX      XXXX   XXXX     XXXX    ###########|
|**********      XXXX      XXXX   XXXX     XXXX     ###########|
|**********     XXXX      XXXX   XXXX     XXXX      ###########|
|**********    XXXX      XXXX   XXXX     XXXX       ###########|
|***********  XXXX      XXXX   XXXXXXXXXXXX        ############|
|************                 XXXX                #############|
|*************               XXXX                ##############|
|***************            XXXX               ################|
|*****************         XXXX              ##################|
|**********************   XXXX          #######################|
|----------------------- XXXX ---------------------------------|
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|                                                              |
|Written by     Jonathan Bowen                                 |
|               Programming Research Group                     |
|               Oxford University Computing Laboratory         |
|               8-11 Keble Road                                |
|               Oxford OX1 3QD                                 |
|               England                                        |
|                                                              |
|               Tel +44-865-273840                             |
|                                                              |
|Created        May 1983                                       |
|Updated        May 1985                                       |
|Issue          1.9                Copyright (C) J.P.Bowen 1985|
----------------------------------------------------------------
----------------------------------------------------------------
|   Symbol/Directive(s)  |Description                          |
|------------------------+-------------------------------------|
|      space(s)          |Separates fields, operands, end label|
|      ,                 |Separates operands                   |
|      ;       *         |Start of comment (* in column 1 only)|
|      :                 |End of label (optional)              |
|      (exp)             |Expression precedence                |
|      'str'   "str"     |Character string                     |
|      +                 |Addition                             |
|      -                 |Subtraction                          |
|      *                 |Multiplication                       |
|      /                 |Division                             |
|      .AN.              |Logical AND                          |
|      .NT.              |Logical NOT (one's complement)       |
|      .OR.              |Logical inclusive OR                 |
|      .SL.     .SR.     |Shift Left/Shift Right               |
|      .EQ.     .NE.     |Equal/Not Equal                      |
|      .LT.     .GT.     |Less Than/Greater Than               |
|      $                 |Program counter content              |
|      nn       nnD      |Decimal number (digits 0-9)          |
|      nnB               |Binary number (digits 0-1)           |
|      nnO      nnQ      |Octal number (digits 0-7)            |
|      nnH               |Hexadecimal number (digits 0-9,A-F)  |
|      ''       ""       |Null string or null macro parameter  |
|      &                 |Macro parameter                      |
|      &&                |Index macro parameter                |
|      &&&&              |Unique 4 digit string in macro       |
|------------------------+-------------------------------------|
|(lab) ASC     'str'     |ASCII string                         |
|(lab) ASCII   'str'     | ditto                               |
|(lab) BIN     num(,...) |Binary number(s) (or BINARY)         |
|      COMN              |Common overlayed area                |
|      DATA              |Data area                            |
|      PROG              |Program area                         |
|(lab) DECIMAL num(,...) |Decimal number(s) (or DEC)           |
|      ELSE              |Alternative conditional assembly     |
|      END     (exp)     |End of program (and start address)   |
|      ENDIF             |End of cond. assembly (or IFEND)     |
|sym   EQU     exp       |Symbol value = expression value      |
|      EXPAND            |Expand macro code                    |
|      EXT     sym(,...) |External symbol(s) (or EXTERNAL)     |
|      GLB     sym(,...) |Global symbol(s) (or GLOBAL)         |
|(lab) HEX     num(,...) |Hexadecimal number(s)                |
|      IF      cond      |Conditional assembly                 |
|      INCLUDE file      |Include named file in source         |
|      LIST              |List code                            |
|sym   MACRO   (&sym,...)|Define Macro name (and parameters)   |
|      MASK   (exp),(exp)|Mask strings (default AND,OR = FFH,0)|
|      MEND              |End of Macro definition              |
|      NAME    'str'     |Name object module                   |
|      NOLIST            |Do not list code                     |
|      NOWARN            |Do not include warnings in listing   |
|(lab) OCT     num(,...) |Octal number(s) (or OCTAL)           |
|      ORG     addr      |Set absolute origin                  |
|      REPT    num       |Repeat next source line              |
|sym   SET     exp       |Set symbol value = expression value  |
|      SKIP              |Skip to next page                    |
|      SPC     (num)     |Line space(s) on listing             |
|      TITLE   'str'     |Listing title and new page           |
|      TRACE   num       |Trace user definable assembler (0-3) |
|      WARN              |Include warnings in listing          |
|      .GOTO   lab       |Unconditional branch in macro        |
|      .IF     cond lab  |Conditional branch in macro          |
|lab   .NOP              |Conditional assembly label in macro  |
|sym   .SET    exp       |Set symbol = expression in macro     |
|------------------------+-------------------------------------|
|      addr              |Absolute address in memory           |
|      cond              |Condition (exp .op. exp)             |
|      exp               |Constant expression                  |
|      file              |File name                            |
|      lab               |Statement address label              |
|      nn                |String of digits                     |
|      num               |Number                               |
|      op                |Relational operator (EQ,NE,LT,GT)    |
|      str               |String of ASCII characters           |
|      sym               |Symbol (alphanumeric string)         |
|      ( )               |Optional field                       |
|      ...               |Continuation of same operands        |
----------------------------------------------------------------
----------------------------------------------------------------
|      Error             |Description                          |
|------------------------+-------------------------------------|
|      AS                |ASCII String error                   |
|      CL                |Conditional Label error              |
|      DE                |Definition Error                     |
|      DS                |Duplicate Symbol error               |
|      DZ                |Division by Zero error               |
|      EE                |Expected End of line (EOL) error     |
|      EG                |External Global error                |
|      EO                |External Overflow error              |
|      ES                |Expanded Source error                |
|      ET                |Expression Type error                |
|      IC                |Illegal Constant error               |
|      ID                |Invalid Delimiter error              |
|      IE                |Illegal Expression error             |
|      IO                |Invalid Operand error                |
|      IP                |Illegal Parameter error              |
|      IS                |Illegal Symbol error                 |
|      LR                |Legal Range error                    |
|      MC                |Macro Condition error                |
|      MD                |Macro Definition error               |
|      ML                |Macro Label error                    |
|      MM                |Missing Macro end (MEND) error       |
|      MO                |Missing Operator error               |
|      MP                |Mismatched Parenthesis error         |
|      MS                |Macro Symbol error                   |
|      NI                |Nested Includes error                |
|      OS                |Operand Syntax error                 |
|      PC                |Parameter Call error                 |
|      PE                |Parameter Error                      |
|      RC                |Repeat Call error                    |
|      RM                |Repeat Macro error                   |
|      SE                |Stack Error                          |
|      TR                |Text Replacement error               |
|      UC                |Undefined Conditional error          |
|      UE                |Unexpected End of line error         |
|      UO                |Undefined Operation code error       |
|      UP                |Undefined Parameter error            |
|      US                |Undefined Symbol error               |
----------------------------------------------------------------
----------------------------------------------------------------
|Microprocessor|LAECP|Firm     |Notes                          |
|--------------+-----+---------+-------------------------------|
|1802          |XX  X|RCA      |8-bit CMOS microprocessor      |
|2650          |X   X|Signetics|8-bit microprocessor           |
|32016/32      |X   X|Nat Semi |16/32-bit microprocessor       |
|6501/2/3/4/5  | X  X|Rockwell |8-bit microprocessor family    |
|6502/65C02    |*X  X|Rockwell |8-bit microprocessor           |
|6800/02/08    |*XXZX|Motorola |8-bit microprocessors          |
|6801/03       |XXZ X|Motorola |8-bit microcomputers           |
|6805          |XX  X|Motorola |8-bit microprocessor           |
|6809/6809E    |XXXXX|Motorola |8-bit microprocessor           |
|68008/00/10   |XXXXX|Motorola |8/16/32-bit microprocessor     |
|8048/41/22/21 |X   X|Intel    |8-bit microcomputer family     |
|8080A/85A     |XX  X|Intel    |8-bit microprocessors          |
|8086/88       |XX  X|Intel    |16-bit microprocessors         |
|8087/89       |XX  Z|Intel    |F.P. and I/O co-processors     |
|960A          | X  Z|Texas    |16-bit minicomputer            |
|9900/40/80    |XX  X|Texas    |16-bit microprocessors         |
|9981/85/89/95 |XX  Z|Texas    |16-bit microprocessors         |
|T11/J11       |XX  X|DEC      |16-bit microprocessors         |
|LSI-11/PDP-11 | X  X|DEC      |16-bit micro/minicomputers     |
|NSC800        |XXZ X|National |8-bit CMOS microprocessor      |
|Z8            |XZ  X|Zilog    |8-bit microcomputer family     |
|Z80/Z80L      |XXXXX|Zilog    |8-bit (CMOS) microprocessor    |
|Z8000         | X XX|Zilog    |16-bit microprocessor family   |
|Z8001         |XXXXX|Zilog    |16-bit microprocessor          |
|Z8002         |XXZXX|Zilog    |16-bit microprocessor          |
|User definable|XX  Z|         |Bit-slice processors           |
|HP64000       |   ZX|HP       |MDS system                     |
|--------------+-----+-----------------------------------------|
|              |XYZ  |Available/ordered/planned    |           |
|              |*    |Logic Analyser (special)     |HP1611A    |
|              |X    |Logic Analyser (general)     |HP1615A    |
|              | X   |Assembler                    |HP64000    |
|              |  X  |Emulator                     |HP64000    |
|              |   X |Pascal Compiler              |HP64000    |
|              |    X|Programming Card             |           |
----------------------------------------------------------------
