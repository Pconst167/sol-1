
                                              Undocumented features of M100 BASIC
                                                                
       The following are a few undocumented features of M100 BASIC. Many of these have been discovered thanks the NEC 8201
                                                          BASIC manual.
                                                                
   ERROR ERRORx is normal format. But ERROR(x) will also work. (mainly of interest for converting programs from other
   Microsoft BASICs) IF GOTO may be used instead of THEN. This even works in the form IF ... GOTO ... ELSE ...
   
   IPL the IPL program is run when you turn on the computer *if* you were in one of the following when you turned off the
   machine: BASIC (but not while a program is running), TEXT (any .DO file) ADDRSS, SCHEDL, some .CO files.
   
   Note: you must give the FULL name of the file to run.
   
   LET useful only for compatibility with older BASICs. Unlike some BASICs, use of LET does *not* speed up the operation.
   
   Syntax: LET variable = formula LET variable = constant ON COM GOSUB if ON MDM GOSUB is also being used please note that
   *both* store the line # in the same memory location. Thus they *must* use the same routine. This also means that you only
   need use one or the other, not both.
   
   PEEK addresses above 32767 may be specified 2 different ways: a single precision number 32768 to 65535 an integer -32768
   to -1 POKE addresses may be specified as for PEEK PRESET an extra argument can be placed in the () PRESET(x,y,c) where
   even values of c are black, odd values are white.
   
   PSET an extra argument can be placed in the () PSET(x,y,c) where even values of c are white, odd values are black.
   
   REM REM uses one byte of memory. ' uses *three*! (it is stored as a :, a REM token and a chr$(255)) RND if you use a
   negative number as the argument (ie RND(x) where x is less than 0) you will "re-seed" the random number generator. The
   same sequence will always follow a given negative number, but different numbers give different sequences.
   
   SCREEN syntax is SCREEN display,label *OR* SCREEN,label (the latter is not documented in the manual but works, is shorter,
   and avoids causing problems for those of us with DVI's)
   
display 0 = LCD,1 = CRT (DVI display)
label   0 = label line off,1 = label line on
