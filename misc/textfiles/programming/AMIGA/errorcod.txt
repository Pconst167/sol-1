[2m[4mAmigaDOS Error Codes - An Explanation[0m

[0m  For those of you who've tried in vain to find an explanation
for an error message in your user's manual, only to give up once you
realise it either isn't listed or is insufficiently explained, here is
a comprehensive list of the Amiga's most hated system messages!

[33m[4mError 103: Insufficient Store
[0m  This error occurs when you click on an icon or try to run from
CLI a program which the Amiga knows it hasn't enough free memory to
handle. It will most often afflict owners of unexpanded A500s.
        Try closing as many windows as possible and ensure that
nothing is running as a background task before attempting to run the
program again. If this doesn't work it may simply be that you will
have to purchase a  memory exapnsion before being able to use the
program in question.

[33m[4mError 105: Task Table Full
[0m  This error will only occur if you are pushing the Amiga to its
limits. The machine can run up to 20 CLI tasks at once, so if you try
to open task number 21, you will get error number 105. If you succeed in running 21 tasks at once, let
me know so I can inform the Guiness Book of Records!

[33m[4mError 120: Argument line invalid or too long
[0m  Another error code you shouldn't run into too often. This one
alerts you to the fact that you had "bad args" or that you tried to
input an extremely long series of CLI commands at once. If you're
faced with this command, truncate your CLI line or carefully check the
syntax of whatever you've typed in.

[33m[4mError 121: File is not an object module
[0m  You have typed in the name of a program or file as if it was
an executable object. In other words, you have led the computer to
believe that "thingy" is a program when it is in fact a text file.
        You will also get this error if a script file's name was typed
in when its script bit was not set.

[33m[4mError 122: Invalid resident libary during loading
[0m  This will happen if your program looks for a library file in
the LIBS: directory when loading, but finds a library of the wrong
type. You could have a corrupted library file, or perhaps a different
file which has been given its name. In either case, the best course of
action is to sort out exactly what libraries a program needs, then
make sure the correct files are in the LIBS: drawer.

[33m[4mError 202: Object in use
[0m  Your program tried to access a file which was already being
altered by another program. Obviously, two programs cannot carry out
two operations on the same file at the same time, so you get error
202 and must wait until the other program is finished before going on.

[33m[4mError 203: Object already exists
[0m  You have tried to create or rename a file using the same name as
that of an existing file in the current directory. To avoid
the clash, either delete or rename the older file.

[33m[4mError 204: Directory not found
[0m  You have tried to DIR or CD to a directory which is not in the
current directory. You're either hallucinating, in which case the
directory you're trying to access doesn't exist at all, or you're in
the wrong disk or directory.

[33m[4mError 205: Object not found
[0m  Oh no! It's that one again! Error 205 is the bane of many a
beginner's existence. In simple terms, it means you have tried to
access a file which the machine cannot find, but in REAL terms it
means a great deal more.
        For example, you might get error 205 when clicking on an icon.
This doesn't mean that the program to which the icon is attached has
been erased - it might just mean that the icon or program is trying to
utilise something else. Our coverdisk document icons are a case in
point. They have the default tool type :c/ppmore, which means the icon
directs AmigaDOS to read the file through the program PPMore in the
current disk's C: directory. If you have copied the document to
another disk without the corresponding PPMore program, you're going to
get error 205.

[33m[4mError 206: Invalid Window Description
[0m  When a CLI or Shell window is opened, the icon tool types
contain information on the size and positioning of the window. If this
is incorrect or inconsistent, error 206 is the result.

[33m[4mError 209: Packet Request Type Unknown
[0m  More technical than the average boob, error 209 occurs if a
device handler was asked to do something it wasn't designed to do, or
an incoreect code was passed to an Input/Output device such as the
printer.

[33m[4mError 210: Invalid Stream Component Name
[0m  You have used an invalid character in a file or device name.
Control characters such as the apostrophe must not be used in file
names, and the names must not be longer than 30 characters. Simply
rename your file or device to avoid this error.

[33m[4mError 211: Invalid Object Lock
[0m  This error is of interest only to programmers, and states that
a lock code was not recognised by the AmigaDOS call. In other words,
if this error pops up, you will already know what it means!

[33m[4mError 212: Object not of required type
[0m  AmigaDOS recognises several types of object, including
directories, devices, and files. Error 212, another of the more common
errors, warns the user that an AmigaDOS command was issued which
expected to operate on one type of object but which encountered
another.

[33m[4mError 213: Disk not validated
[0m  Argh! This means your disk is 'unvalidated'. This can come
about for several reasons, but the most common is that two files are
trying to occupy the same part of a disk. The 'bitmap' (a sort of
snapshot of the disk's layout) is therefore confused and invalid.
FixDisk 1.2, which we gave away on our March 1991 cover disk, will
cure most disk validation problems.

[33m[4mError 214: Disk write protected
[0m  You have tried to write to a disk who's write protection tab
is set to write-protect. Flip the tab to the write-enable setting to
continue.

[33m[4mError 215: Rename across devices attempted
[0m  The RENAME command will only work as long as you keep the
renamed file in the same device or disk. In other words, if you try to
rename a file from df1:text.doc to df0:text.txt, you will get error
215. You must copy the file to the new device before renaming it.

[33m[4mError 216: Directory not empty
[0m  When working from CLI or Shell (this doesn't apply to programs
like SID), you cannot delete a drawer until it is completely empty. In
other words, you must go into the directory and type DELETE #?, then
CD out of the directory and delete it.

[33m[4mError 218: Device not mounted
[0m  If you try, for instance, to CD to a device or disk which has
not been mounted, the Amiga will return error 218. It is relatively
common, and can be very annoying when working with a single floppy
drive. As errors go, this isn't the one to melt your hard drive, but
if it pops up often enogh it could well melt your patience.

[33m[4mError 219: Seek Failure
[0m  Another one for the programmers to worry about, but which
shouldn't affect the blood pressure of the average owner. It signals
the failure of a low level AmigaDOS function called SEEK, which in
this case would have attempted to SEEK beyond the end of a file.

[33m[4mError 220: Comment too big
[0m  You have tried to attach a comment (or 'filenote') of more
than the maximum 80 characters to a file.

[33m[4mError 221: Disk Full
[0m  Probably the most obvious and yet the most infuriating errors
of them all. How many times have you tried to copy a 200k file to
another disk only to find that after 199k, the disk is full and you'll
have to start again?

[33m[4mError 222: File is protected from deletion

Error 223: File is protected from writing

Error 224: File is protected from reading

[0m  These three errors are easily corrected using the PROTECT
command to reset a file's flags. Every file has a set of 'flags' which
determine whether it can be read from, written to, deleted, and so on.
These flags are important to the way in which a file is allowed to
behave. See page 2-21 of your Software Enhancer Manual for a fuller
description of the PROTECT command.

[33m[4mError 225: Not a DOS Disk in unit [3mn[0m
[0m  The disk in question is not formatted as an AmigaDOS disk.
Either it has become corrupted, or it was never an AmigaDOS disk in
the first place.

[33m[4mError 226: No Disk in drive
[0m  Switch you brain on!

[33m[4mError 232: No more entries in directory
[0m  For programmers only, this error means that a low level
AmigaDOS command tried to continue examining a directory after it had
looked at all its entries.









