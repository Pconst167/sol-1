Subject: Computer Archeology

[I mailed this out recently within my company, the books are all gone now
 but I thought people might still find it enjoyable.]

I have uncovered some interesting computer texts and scrolls in a
recent archeological dig.  These relics are outside my office and
available to anyone interested.  Anything not claimed will become part
of the permanent museum of computer history and widgetry.

Available:

    Mesa Language Manual version 5.0 (Xerox, 1979)

        Recall the years when new computer languages and dialects abounded.
        When every new piece of hardware urged the creation of a new compiler
        and the simultaneous obsolescence of a million lines of code.
        Here is Xerox in it's heyday.

    Pilot: An Operating System for a Personal Computer (CACM, Feb 1980)

        The appropriate antidote to any overstimulation you may be feeling
        from the previous work, this is a look at what happens when you
        implement an operating system in Mesa.  You get an OS that took
        10 man years to write, contains 24,000 lines of code, and for all
        that gives you a "flat" file system (read: one directory), and
        an OS that can't protect itself from a program accidentally zeroing
        all of memory.  Read this any time you feel that the Macintosh
        isn't worthy of it's roots

    Lisp 1.5 Programmers Manual (MIT Press, 1972)

        The second printing of John McCarthy's classic.  Obscure language
        notation enlivens practically every page.  An item you'll be proud
        to place among those humdrum Unix and C texts on your shelf.
        {ed Sorry, John.}

    UCI LISP Manual

        The perfect companion volume to the Lisp 1.5 book.  This oblique
        tome illuminates such fascinating curiosities as "how to use
        project programmer numbers for disk i/o", "loading code into
        the high segment" and the important details of "calling MACRO-10
        coded routines".  Don't let this one slip by!

    SAIL User Manual (CMU, 1973)

        The "C" of the PDP-10, and logical heir to "MainSail".
        5000 PhD's can't be wrong folks, take this book and stroll
        down "Algol 60" lane.  This was R. B. Neely's personal copy.

    Graphic Display Processor [GDP], Programmers Guide (CMU, 1974).

        In it's day the cadillac of vector graphics displays.
        This little speed demon could produce 50,000 flicker free
        vectors per second.  Never mind that our recently acquired
        subsidiary's box [Raster Technologies] can produce 200,000
        shaded polygons in that interval, this baby is the work
        of "the hardware oriented mind", to wit: 4 whole instructions,
        with the 2 opcode bits strategically placed at opposite ends
        of the instruction word.  A great gift for a friend or relative
        whose thinking of dabbling in computer graphics.

    GPI User's Manual (CMU, 1975)

        The Bliss-11 software library for interface to the GDP.  This is
        one of Sam Harbison's first works, with a disclaimer that reads:
        "This work was supported by me in my free time.  It is my
         gift to the world ... GPI is sort of maintained by the author",
        what else could I add?

    TECO Multics programmers manual. (MIT, 1972)

        TECO, the text editor that thinks it's a programming language, or
        is it the other way around?  An obscure editor made just the more
        interesting in that this implementation was for Multics.  I'd say
        something more, but there are people in the building still using
        this editor.

    Son of Stopgap (SOS) (Stanford, 1970)

        SOS, the last of the great line number oriented editors.  This
        is the improved version that has intra-line editing as well as
        search and replace.  A vanguard folks.

    BLISS-11 (CMU/DECUS 1974)

        One great optimizing compiler, marred only slightly by
        the fact that it wasn't written in itself, generated code
        for a machine that it couldn't run on, wasn't portable,
        had a mindless scheme for ordering booleans, and for all
        it's complexity was unpleasant to write in, other than that ...

    Ultrix-32w Manuals.

        DEC's version of the Unix manuals.  A hefty three ring binder
        containing one set of release notes and a window system manual.

    Unix Circuit design aids.

        The very thing 3B's are designed with.


These are all outside my office, take your pick, no tag-backs.
--
