Article: 9806 of alt.folklore.computers
Path: duke!mcnc!stanford.edu!morrow.stanford.edu!decwrl!uunet!zaphod.mps.ohio-state.edu!van-bc!ubc-cs!unixg.ubc.ca!kakwa.ucs.ualberta.ca!alberta!cpsc.ucalgary.ca!acs.ucalgary.ca!jsbell
From: jsbell@acs.ucalgary.ca (Joshua Bell)
Newsgroups: alt.folklore.computers
Subject: Murphy's Laws...
Message-Id: <1991Sep26.212135.16840@acs.ucalgary.ca>
Date: 26 Sep 91 21:21:35 GMT
Organization: The University of Calgary, Alberta, Canada
Lines: 67
Status: RO

Okay, pulled of out our old Multics Jokes Forum...:

This list seems to be even more comprehinsive than /usr/games/fortune's
contributions to the discussion... 

__________Anything Below This Line is Not My Fault___________________
[0367] (50 lines) Donovan.Service 03/13/85  1013.5 mdt Wed Jokes
Subject:  Murphy
I looked and did not find these in this meeting, so here goes:
 
A few laws of computer programming:
 
 1. Any given program, when running, is obsolete.
 2. Any given program costs more and takes longer.
 3. If any program is useful, it will have to be changed.
 4. If a program is useless, it will have to be documented.
 5. Any given program will expand to fill all available memory.
 6. The value of a program is proportional to the weight of its output.
 7. Program complexity always grows until it exceeds the capability of
    the programmer who must maintain it.
 8. If a test installation functions perfectly, all subsequent systems
    will malfunction.
 9. Job control cards that positively cannot be arranged in improper
    order will be.
10. If the input editor has been designed to reject all bad input, an
    ingenious idiot will discover a method to get bad data past it.
11. Profanity is the one language all programmers know best.
12. Adding manpower to a late software project makes it later.
13. A carelessly planned project takes three times longer to complete
    than expected; a carefully planned project takes only twice as long.
14. (Lubarsky's Law of Cybernetic Entomology) There is always one more
    bug.
15. It is impossible to make any program foolproof because fools are
    so ingenious.
16. When things are going well, something will go wrong.
17. When things just can't get any worse, they will.
18. Anytime things appear to be going well, you have overlooked something.
19. Test functions and their tests should be reproducible -- they should
    all fail in the same way.
20. If it looks easy, it's tough.
21. If it looks tough, it's damn near impossible.
22. You always find any bug in the last place you look.
23. Anything can be made to work if you fiddle with it long enough.
24. A terminal usually works better if you plug it in. 25. If all else
    fails, read the documentation.
26. If you do not understand a particular word in a piece of technical
    writing, ignore it. The piece will make perfect sense without it.
27. No matter how much you do, you'll never do enough.
28. What you don't do is always more important than what you do do.
29. Procrastination avoids boredom; one never has the feeling that there
    is nothing important to do.
30. Always leave room to add an explanation if it doesn't work out.
31. No amount of genius can overcome a preoccupation with detail.
32. Nothing is impossible for a man who doesn't have to do it himself.
33. If builders built buildings the way programmers write programs,
    then the first woodpecker than came along would destroy civilization.
34. Programmers will act rational when all other possibilities have
    been exhausted.
---[0367]---


+------------------------------------------------------------------------+
|       "Comedy, for me, it's cheaper than therapy." R. Williams         |
|                                                                        |
|   jsbell@acs.ucalgary.ca Internet     Academic Computing Services      |
|   bellj@cpsc.ucalgary.ca (alternate)  University of Calgary, Canada    |
|                                                                        |




