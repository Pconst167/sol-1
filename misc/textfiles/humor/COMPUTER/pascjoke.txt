
This was posted by someone named spcecdt on a forum on UNIX B at UCSC on Sun
Oct 9 at 7:12pm.

Article from _Computer Language_ by Bruce Tonkin.

     Several prominent software companies have caused a stir lately by dropping
all development work in Pascal and adopting Microsoft BASIC.  When queried all
have declined to comment about this move, but one company insider (code-named
Deep Poke) suggested talking to Niklaus Wirth to get the full story.
     Speaking from his home in Zurich, Switzerland, Wirth proved to be a far
more genial soul than one might imagine, being the founder of Pascal and all.
But the European lifestyle obviously agrees with him, and he was more than
willing to provide some insights into this strange phenomenon, currently taking
place in the computer industry.
     In fact, what began as an innocent inquiry eventually revealed a shocking
and exclusive piece of information: that the invention of Pascal nearly 20
years ago was intended entirely as a joke, an April Fools' prank.
     Wirth tried to explain.  "Every year at the Swiss Federal Institute for
Technology [the university in Zurich where Wirth is a professor of computer
science] I taught the same classes, gave the same tests, told the same
jokes," he began.  "it was boring.  I needed a little humor.  So I started
talking about this crazy language called Pascal.  Eventually, the Pascal joke
became so popular I just kept adding to it, making it more and more elaborate.
     "But some of the students went to class so seldom that they missed the
joke and thought Pascal was a real language!  Imagine the looks on their faces
when they got out into the world and discovered there was no such thing as a
language called Pascal.  Hoo-boy!  They sure learned to pay attention after
that!"  he said, giggling.
     Several of his better students, he continued, figured they'd make some
money by fleecing the people who actually believed in Pascal and so wrote a
simple Pascal compiler for this purpose.  It was actually a kind of prank, much
like selling elevator passes to high school freshmen.
     "Yes, yes," Wirth said, "the UCSD operating system started the same way.
The same bunch of rascals who did the whole Pascal thing kept pushing the idea
until it reached the point of complete absurdity.  They were hysterical!
Especially late at night - they'd come up with some really boffo material.
They the next week they'd modify it and it would get even more entertaining."
     Wirth's best student was Philippe Kahn, who he met while Kahn was a
student.  "I used to go to a small bistro called 'Der Blaue Engel' after my
classes, and it happened that Kahn played jazz saxophone there while people
danced on the tables."  Wirth was impressed with Kahn's talent and evident wit
and encouraged him to end his musical career and enter the lucrative field of
software comedy.  Once he explained Pascal's comedic possibilities, Kahn was
hooked and quickly agreed.
     Since most of the staff at Apple Computer Inc. was educated at the
University of California at San Diego, they were also in on the joke, Wirth
said.  "That's why they kept pushing Pascal.  A bunch of fine kids, those Apple
guys.  Born comedians, most of them.  Except this one guy - the had no sense
of humor at all. [Editor's hint: not Woz.]
     "When we finally decided to do a DOS that was even funnier than UCSD
Pascal, the feeling was that UCSD was already the ultimate.  But then one of
the guys proposed doing a DOS that was written in Pascal but used hieroglyphics
instead of a written language.  What a genius!  We were rolling in the aisles.
But that one guy, he thought we were serious.  What a nerd!"
     Wirth's list of the funniest features of Pascal begins with the lack of a
string data type, no random file access, primitive numeric handling, and the
existential absurdity of the semicolon.
     "But I'd have to say that my crowning achievement was the lack of input
and output functions.  First you can't get anything in too easy.  And once it's
in, you can't do much with it.  Pascal isn't good with letters and it's not
good at all with numbers.  Besides, I made it very picky.  You have to
recompile, recompile, recompile forever.  Ha!  And once you've done something
with the data, you can't get it out."  Wirth started chuckling uncontrollably.
"Philippe has said C is a write-only language - I made Pascal a read-only
language!"  His chuckling turned into hysterical laughter that went on for
several minutes.
     "Of course, some didn't get the joke," he finally said when he could speak
again.  "They kept trying to make Pascal actually useful.  But I stopped them;
I made the original Pascal a standard.  That meant anyone who made Pascal good
for anything was nonstandard and out on a limb!"

                           *  *  *  *  *

     How will all this affect the future of Modula-2?  Wirths' merry manner
and beaming face suddenly became hard when presented with this question;
perhaps this was taboo territory, sacred subject matter.
     "Modula-2 is a real language," he finally said, his demeanor solemn.  "It
represents a serious effort on my part to make amends for any damage caused by
well-meaning but unimaginative people teaching and learning Pascal.
     "But it's so hard!  Pascal is a very good joke, yes?  But to make a really
good language from it is not so easy," he sighed.
     In addition to Pascal, Wirth admitted, three other languages also were
intended as pranks: Forth, PL/I, and True BASIC.
     "Forth is essentially black humor," Wirth said.  "Charles Moore [who
created the language in the late 1960s] designed it as a native language for
people whose brains ran backward."  Originally, he continued, it was supposed
to be the ultimate parody of Hewlett-Packard calculators, which Moore has been
competing with unsuccessfully for years.  As an astronomer, he had used HP's
calculators out of necessity rather than any appreciation for their design.
But to his great surprise, he found that there were actually quite a few
people whose brains did run in reverse.  Eventually, Moore came to see Forth
as a boon, especially for backward thinkers.  "At least it keeps them of the
streets out of really serious trouble," Wirth said.  "Imagine one of them
trying to drive a car or operate heavy machinery!"
     PL/I originally stood for "Prostituted Language/Interface," Wirth
explained.  "The designers were under so much pressure to add features and
include every possible construction from every other language in existence that
they eventually gave up and decided to play the whole thing for laughs.  They
said 'yes' to every request, no matter how absurd, and even added things to
the language no one ever could or would use.  The scoured journals for
off-beat syntax and weird symbolic notation; some of their better ideas came
from early editions of The Mad Reader and other E. C. publications.  Besides,
several of them were upset with the compiler-writing team and decided to stick
it to them with a life-time project."
     True BASIC is not "True" in the sense most people understand the word,
Wirth continued.  Rather, "True" is itself an acronym for a "Totally wRecked-Up
Example of."  The professors who came up with it are amazed that no one has
yet caught on to the joke; they felt sure their insistence on the LET keyword
would be a dead giveaway.  "Of course there were other clues, but this was the
most clear-cut," Wirth said.  "They even called Microsoft BASIC a street
BASIC in hopes that Bill Gates would challenge them and reveal the joke."
But Gates refused to play along, and both professors had to all but beg Wirth
to tell the world the truth about True BASIC before things went any further.

                            *  *  *  *  *

     Jokes abound in the world of operating systems as well, according to
Wirth.  In addition to the UCSD Pascal operating system, said Wirth, "Tandy,
Apple, and Commodore were for a number of years carrying out a private comedic
battle to see who could produce the world's funniest DOS."
     Tandy's TRS-DOS (Tandy Radio Signal Detection Operating System - a
reference to the fact that early machines would reboot when any transmitted
signal was detected) was an early front-runner until Apple came out with the
vary amusing Control-D command what could enable or disable disk operations.
In the end, though, Commodore won the battle.  Its DOS was oriented toward
records exactly the size of punch cards and took over four minutes to boot from
disk since it read disk data more slowly than most audio tape machines and even
some 300-baud modems.
     But the funniest joke of all is, in Wirth's estimation, also the most
common, and he's amazed so few people have caught on to it yet.
     "Come on, come on.  Surely you can guess," he said, his voice rising in
excitement.  "What one thing makes users more livid than any other? What one
computer product makes you feel sure it was produced by a team of trained
gerbils on mind-altering drugs?  Yes, yes, yes! You see it now - manuals!"
     Wirth considers Gates, who wrote all the BASIC manuals and who was on the
staff of many others, a "comic genius."  "Mitch Kapor should get more
recognition - he's far better than Neil Simon. And what's-his-name, the guy
who wrote the WordStar manual - he got an award at at dinner we threw for
him a few years back.  That manual is a classic in the truest Marxist
[brothers] sense of the word!  Pure slapstick!  But the best of them all is the
author of the dBase II manual.  Now there is a writer for the ages!"
     As for the IBM manuals, Wirth considers them mere hack work.  "Anyone can
do stuff like that," he snorted.
     But perusing a copy of the manual for NEWDOS, he seemed a little more
impressed.  "Hmmmm.  Not bad work.  Not bad at all," he said.  "But it's still
simple stuff.  'To do this, read page 40.  But to know what's on page 40, you
have to read page 65, which refers to page 15, which shows a whole list of
exceptions for page 53.'  Entertaining, but hardly in the class of any of the
modern masters of the art."  But when his attention was brought to the fact
that none of the error numbers listed in the NEWDOS manual were ever returned
to the BASIC programmer, and that the most common disk setup (double-density,
double-sided) was not on the configuration menu, Wirth admitted that these were
indeed nice touches.
     Although it is a known fact that most of the early computer manuals
(probably even the NEWDOS manual) were written by programmers and that
programmers are notoriously poor writers, Wirth would not be deterred from his
opinion that these writings are works of art.
     "Most people fail to consider that good programmers are very bright.
Their thoughts are extremely well organized and most of them have the benefit
of higher education.  Their brains are not warped by overexposure to TV and
their attention spans are not short-circuited by overindulgence in sex, drugs,
or alcohol.  They are not constrained by conventionality.  If you want to get
picky, there are a lot more programmers than there ever were writers.  And
programmers simply work harder than writers.  Few writers work 100 hours a
week; almost all programmers do."
     The result, according to Wirth?  "All programmers write at least as well
as Faulkner.  Most are as good as Proust, and about a third are as good as
Dickens.  Several hundred are at least as good as Shakespeare.  So the manuals
you thought were inferior were simply beyond your poor ability to appreciate.
If you were a programmer, you would delight in their verbal virtuosity," he
said.
     In fact, Wirth claimed, even the grammatical errors and misspellings in
the manuals were placed there deliberately.  Most are elaborate literary
allusions and puns; some are inventive Joycean neologisms.  As an example,
Wirth discussed the history of the word "kernal."
     "Everyone, including programmers, knows the word is spelled k-e-r-n-e-l,"
he explained.   "The deliberate misspelling is an implied criticism of the
typesetter (a writer's bane for years.)  Of course typesetters kern the letter
l; thus, 'kern el.'   But kerning can only be done for certain letter
combinations, such as two l's.  Thus, 'kern a l' dares the typesetter to kern
an isolated l, an obvious typographic impossibility.
     "Moreover," he continued, "'kernal' is an anagram for 'rankle,' which
describes programmers' feelings toward typesetters.  Finally the inventor of
this particular word, R. K. Lane (who is well known within the Southern
California computer community) has concealed his name by means of yet another
anagram."
     Wirth smiled a last secretive smile, leaving us all to wonder if this was
perhaps just one more in his series of personal computer pranks.




X-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-X

 Another file downloaded from:                               NIRVANAnet(tm)

 & the Temple of the Screaming Electron   Jeff Hunter          510-935-5845
 Rat Head                                 Ratsnatcher          510-524-3649
 Burn This Flag                           Zardoz               408-363-9766
 realitycheck                             Poindexter Fortran   415-567-7043
 Lies Unlimited                           Mick Freen           415-583-4102

   Specializing in conversations, obscure information, high explosives,
       arcane knowledge, political extremism, diversive sexuality,
       insane speculation, and wild rumours. ALL-TEXT BBS SYSTEMS.

  Full access for first-time callers.  We don't want to know who you are,
   where you live, or what your phone number is. We are not Big Brother.

                          "Raw Data for Raw Nerves"

X-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-X
