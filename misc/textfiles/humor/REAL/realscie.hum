Real Computer Scientists Don't Write Code

Real computer scientists don't write code.  They occasionally tinker with
'programming systems', but those are so high level that they hardly count (and
rarely count accurately; precision is for applications.)

Real computer scientists don't comment their code.  The identifiers are so long
they can't afford the disk space.

Real computer scientists don't write the user interfaces, they merely argue over
what they should look like.

Real computer scientists don't eat quiche.  They shun Schezuan food since the
hackers discovered it.	Many real computer scientists consider eating an
implementation detail.	(Others break down and eat with the hackers, but only if
they can have ice cream for desert.)

If it doesn't have a programming environment complete with interactive debugger,
structure editor and extensive cross module type checking, real computer
scientists won't be seen tinkering with it.  They may have to use it to balance
their checkbooks, as their own systems can't.

Real computer scientists don't program in assembler.  They don't write in
anything less portable than a number two pencil.

Real computer scientists don't debug programs, they dynamically modify them.
This is safer, since no one has invented a way to do anything dynamic to
FORTRAN, COBOL or BASIC.

Real computer scientists like C's structured constructs, but they are suspicious
of it because its compiled.  (Only Batch freaks and efficiency weirdos bother
with compilers, they're soooo un-dynamic.)

Real computer scientists play go.  They have nothing against the concept of
mountain climbing, but the actual climbing is an implementation detail best left
to programmers.

Real computer scientists admire ADA for its overwhelming aesthetic value, but
they find it difficult to actually program in, as it is much too large to
implement.  Most Computer scientists don't notice this because they are still
arguing over what else to add to ADA.

Real computer scientists work from 5 pm to 9 am because that's the only time
they can get the 8 megabytes of main memory they need to edit specs.  (Real work
starts around 2 am when enough MIPS are free for their dynamic systems.) Real
computer scientists find it hard to share 3081s when they are doing 'REAL' work.

Real computer scientists only write specs for languages that might run on future
hardware.  Nobody trusts them to write specs for anything homo sapiens will ever
be able to fit on a single planet.

Real computer scientists like planning their own environments to use bit mapped
graphics.  Bit mapped graphics is great because no one can afford it, so their
systems can be experimental.

Real computer scientists regret the existence of PL/I, PASCAL and LISP.  ADA is
getting there, but it is still allows people to make mistakes.

Real computer scientists love the concept of users.  Users are always real
impressed by the stuff computer scientists are talking about; it sure sounds
better than the stuff they are being forced to use now.

Real computer scientists despise the idea of actual hardware.  Hardware has
limitations, software doesn't.  It's a real shame that Turing machines are so
poor at I/O.

Real computer scientists love conventions.  No one is expected to lug a 3081
attached to a bit map screen to a convention, so no one will ever know how slow
their systems run.

Call The Works BBS - 1600+ Textfiles! - [914]/238-8195 - 300/1200 - Always Open
